{"version":3,"sources":["Pages/CustomLogin/CustomLogin.jsx","Store/CustomLogin/actions.js"],"names":["CustomLogin","location","dispatch","useDispatch","state","useSelector","customLoginState","toastMessage","useToastMessage","useEffect","cb","query","queryString","parse","search","userId","accessToken","a","setErrorMessage","setSuccessMessage","axios","url","API_V2","method","headers","AccessToken","Accept","res","token","data","payload","errorHandler","error","errorMessage","localStorage","setItem","setAuthRedirectPath","redirect","storeToken","window","open","message","loginWithCustomToken","getItem","logout","removeItem","setInfoMessage","className"],"mappings":"iQA+CeA,UAxCK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfC,EAAWC,cACXC,EAAQC,aAAY,SAACD,GAAD,OAAWA,EAAME,oBAErCC,EAAeC,cA2BrB,OAdAC,qBAAU,WACR,IAZkBC,EAYZC,EAAQC,IAAYC,MAAMZ,EAASa,QAZvBJ,EAcP,WACT,OAAOR,ECpBN,YAAuE,IAAtCK,EAAqC,EAArCA,aAAcQ,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YAC5D,8CAAO,WAAMd,GAAN,qBAAAe,EAAA,yDACGC,EAAuCX,EAAvCW,gBAAiBC,EAAsBZ,EAAtBY,kBADpB,SAKEH,EALF,yCAMME,EAAgB,0BANtB,UASEH,EATF,yCAUMG,EAAgB,wBAVtB,uBAaeE,IAAM,CACtBC,IAAI,GAAD,OAAKC,SAAL,4BACHC,OAAQ,MACRC,QAAS,CACPT,OAAQA,EACRU,YAAaT,EACbU,OAAQ,mBACR,eAAgB,sBApBjB,UAaGC,EAbH,OAuBGC,EAAQD,EAAIE,KAAKC,QAAQF,MAvB5B,0CA2BM1B,EACL6B,YAAa,CACXC,OAAO,EACPC,aAAc,sBA9BjB,eAmCHC,aAAaC,QAAQ,SAAUpB,GAC/BmB,aAAaC,QAAQ,QAASP,GAC9B1B,EAASkC,YAAoBT,EAAIU,UAAY,iBAE7ClB,EAAkB,0BAElBjB,EAASoC,YAAW,CAAEV,MAAOA,EAAOb,OAAQA,KAE5CwB,OAAOC,KAAKb,EAAIU,UAAY,eAAgB,SA3CzC,kBA6CInC,EACL6B,YAAa,CACXC,OAAO,EACPC,aAAc,OAhDf,yCAoDHf,EAAgB,KAAIuB,SApDjB,kBAsDIvC,EACL6B,YAAa,CACXC,OAAO,EACPC,aAAc,KAAIQ,YAzDnB,0DAAP,sDDoBMC,CAAqB,CACnBnC,eACAQ,OAAQJ,EAAMI,OACdC,YAAaL,EAAMK,gBAlBrBkB,aAAaS,QAAQ,WACvBzC,EAAS0C,eACTV,aAAaW,WAAW,cAExBtC,EAAauC,eAAe,0CAGvBpC,MAeN,IAGD,qBAAKqC,UAAU,gBAAf,SACE,oBAAIA,UAAU,OAAd,SACI3C,EAAM4B,MAA2C5B,EAAM6B,aAAzC","file":"static/js/126.d1dfe6ce.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginWithCustomToken } from \"../../Store/CustomLogin/actions\";\r\nimport { useToastMessage } from \"../../contexts/ToastMessageContext\";\r\nimport queryString from \"query-string\";\r\nimport { logout } from \"../../Store/actions/auth/auth\";\r\n\r\nconst CustomLogin = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state.customLoginState);\r\n\r\n  const toastMessage = useToastMessage();\r\n\r\n  const logoutUser = (cb) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      dispatch(logout());\r\n      localStorage.removeItem(\"businessId\");\r\n\r\n      toastMessage.setInfoMessage(\"SuccessFully logged out current user!\");\r\n    }\r\n\r\n    return cb();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const query = queryString.parse(location.search);\r\n\r\n    logoutUser(() => {\r\n      return dispatch(\r\n        loginWithCustomToken({\r\n          toastMessage,\r\n          userId: query.userId,\r\n          accessToken: query.accessToken,\r\n        })\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-10 m-auto\">\r\n      <h1 className=\"mt-5\">\r\n        {!state.error ? \"Generating session for you....\" : state.errorMessage}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomLogin;\r\n","import axios from \"axios\";\r\nimport { errorHandler, storeToken } from \"./reducer\";\r\nimport firebase from \"../../firebase\";\r\nimport { login } from \"../../api/Auth\";\r\nimport { setAuthRedirectPath } from \"../actions/auth/auth\";\r\nimport { API, API_V2 } from \"../../Backend\";\r\nimport decryptResponse from \"../../Shared/decryptResponse\";\r\n\r\nexport function loginWithCustomToken ({ toastMessage, userId, accessToken }) {\r\n  return async dispatch => {\r\n    const { setErrorMessage, setSuccessMessage } = toastMessage;\r\n    try {\r\n      //   const user = \"TsQkFoTChBMM5JMR0AO7TbEJ08T2\";\r\n\r\n      if (!accessToken) {\r\n        return setErrorMessage(\"Unauthorized request!\");\r\n      }\r\n\r\n      if (!userId) {\r\n        return setErrorMessage(\"No userId attached!\");\r\n      }\r\n\r\n      const res = await axios({\r\n        url: `${API_V2}/auth/custom-login-token`,\r\n        method: \"GET\",\r\n        headers: {\r\n          userId: userId,\r\n          AccessToken: accessToken,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const token = res.data.payload.token;\r\n      if (!token) {\r\n       // setErrorMessage(\"Internal server Error!\");\r\n\r\n        return dispatch(\r\n          errorHandler({\r\n            error: true,\r\n            errorMessage: \"No token found!\",\r\n          })\r\n        );\r\n      }\r\n\r\n      localStorage.setItem(\"userId\", userId);\r\n      localStorage.setItem(\"token\", token);\r\n      dispatch(setAuthRedirectPath(res.redirect || \"/engage/chat\"));\r\n\r\n      setSuccessMessage(\"Successfully loggedIn!\");\r\n\r\n      dispatch(storeToken({ token: token, userId: userId }));\r\n\r\n      window.open(res.redirect || \"/engage/chat\", \"_self\");\r\n\r\n      return dispatch(\r\n        errorHandler({\r\n          error: false,\r\n          errorMessage: \"\",\r\n        })\r\n      );\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n\r\n      return dispatch(\r\n        errorHandler({\r\n          error: true,\r\n          errorMessage: err.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":""}