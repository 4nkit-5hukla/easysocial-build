{"version":3,"sources":["Pages/Plans/Plans.module.css","Pages/Plans/Plans.js"],"names":["module","exports","Plans","props","getPlans","startLoading","plans","db","collection","planArr","get","then","plan","forEach","push","data","setState","cancelLoading","catch","err","error","setPlanIdToLocalStorage","planId","localStorage","getItem","setItem","state","detail","this","authSteps","callback","className","classes","Form_Header","Header_Text","Plan_Section","Table_Head","map","name","Table_Content","amount","Table_Price","button","onClick","e","checkForAddress","PureComponent","connect","authStep","auth","currentCount","userId","dispatch","actions"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,YAAc,2BAA2B,SAAW,wBAAwB,YAAc,2BAA2B,aAAe,4BAA4B,WAAa,0BAA0B,cAAgB,6BAA6B,YAAc,2BAA2B,OAAS,wB,iKCW1XC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,SAAW,WACT,EAAKD,MAAME,eACX,IAAMC,EAAQC,IAAGC,WAAW,SAExBC,EAAU,GACdH,EACGI,MACAC,MAAK,SAACC,GACLA,EAAKC,SAAQ,SAACD,GACZH,EAAQK,KAAKF,EAAKG,WAEpB,EAAKC,SAAS,CAAEJ,KAAMH,IACtB,EAAKN,MAAMc,mBAEZC,OAAM,SAACC,GACN,EAAKhB,MAAMiB,MAAMD,OApCJ,EAwCnBE,wBAA0B,SAACC,GACzB,EAAKnB,MAAME,eACPkB,aAAaC,QAAQ,UACvBD,aAAaE,QAAQ,SAAUH,GAC/B,EAAKnB,MAAMc,iBAzCb,EAAKS,MAAQ,CACXd,KAAM,KACNe,OAAQ,MALO,E,qDASnB,WACEC,KAAKzB,MAAM0B,UAAU,GACrBD,KAAKxB,a,kCAGP,WAEEwB,KAAKZ,SAAW,SAACU,EAAOI,O,oBAmC1B,WAAU,IAAD,OACP,OACE,0BAASC,UAAWC,IAAQ9B,MAA5B,UACE,cAAC,IAAD,IACA,iCACE,sBAAK6B,UAAWC,IAAQC,YAAxB,UACE,cAAC,IAAD,IACA,qBAAKF,UAAWC,IAAQE,YAAxB,SACE,oDAGJ,sBAAKH,UAAWC,IAAQG,aAAxB,UACE,sBAAKJ,UAAWC,IAAQI,WAAxB,UACE,wBACCR,KAAKF,MAAMd,MACVgB,KAAKF,MAAMd,KAAKyB,KAAI,SAACzB,GAAD,OAClB,8BACE,6BAAKA,EAAK0B,QADF1B,EAAK0B,YAKrB,sBAAKP,UAAWC,IAAQO,cAAxB,UACE,wBACCX,KAAKF,MAAMd,MACVgB,KAAKF,MAAMd,KAAKyB,KAAI,SAACzB,GAAD,OAClB,8BACE,4BAAoB,IAAhBA,EAAK4B,OAAe,OAAS5B,EAAK4B,UAD9B5B,EAAK4B,cAKrB,sBAAKT,UAAWC,IAAQS,YAAxB,UACE,wBACCb,KAAKF,MAAMd,MACVgB,KAAKF,MAAMd,KAAKyB,KAAI,SAACzB,GAAD,OAClB,cAAC,IAAD,CAEEmB,UAAWC,IAAQU,OACnBC,QAAS,SAACC,GACR,EAAKzC,MAAM0C,kBACX,EAAKxB,wBAAwBT,EAAKU,SALtC,oBACOV,EAAKU,2B,GAvFVwB,iBA0HLC,uBAjBS,SAACrB,GACvB,MAAO,CACLsB,SAAUtB,EAAMuB,KAAKC,aACrBC,OAAQzB,EAAMuB,KAAKE,WAII,SAACC,GAC1B,MAAO,CACLvB,UAAW,SAACqB,GAAD,OAAkBE,EAASC,IAAkBH,KACxDL,gBAAiB,SAACM,GAAD,OAAYC,EAASC,IAAwBF,KAC9D9C,aAAc,kBAAM+C,EAASC,QAC7BpC,cAAe,kBAAMmC,EAASC,QAC9BjC,MAAO,SAACD,GAAD,OAASiC,EAASC,IAAclC,QAI5B4B,CAA6C7C","file":"static/js/120.2745940d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Plans\":\"Plans_Plans__3-9KL\",\"Logo_Section\":\"Plans_Logo_Section__3hpy9\",\"Form_Header\":\"Plans_Form_Header__3seno\",\"Back_Btn\":\"Plans_Back_Btn__3iHXx\",\"Header_Text\":\"Plans_Header_Text__3Uiog\",\"Plan_Section\":\"Plans_Plan_Section__3nZvr\",\"Table_Head\":\"Plans_Table_Head__3vwZX\",\"Table_Content\":\"Plans_Table_Content__8Lzbh\",\"Table_Price\":\"Plans_Table_Price__uTO2a\",\"button\":\"Plans_button__2G1cM\"};","/** @format */\r\n\r\nimport React, { PureComponent } from \"react\";\r\nimport classes from \"./Plans.module.css\";\r\nimport LogoSection from \"../../Components/UI/LogoSection/LogoSection\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Store/actions/index\";\r\nimport { db } from \"../../firebase\";\r\nimport BackBtn from \"../../Components/UI/BackBtn/BackBtn\";\r\nimport CustomButton from \"../../Components/UI/Button/CustomButton\";\r\n\r\nclass Plans extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      plan: null,\r\n      detail: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.authSteps(3);\r\n    this.getPlans();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // fix Warning: Can't perform a React state update on an unmounted component\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n\r\n  getPlans = () => {\r\n    this.props.startLoading();\r\n    const plans = db.collection(\"plans\");\r\n\r\n    let planArr = [];\r\n    plans\r\n      .get()\r\n      .then((plan) => {\r\n        plan.forEach((plan) => {\r\n          planArr.push(plan.data());\r\n        });\r\n        this.setState({ plan: planArr });\r\n        this.props.cancelLoading();\r\n      })\r\n      .catch((err) => {\r\n        this.props.error(err);\r\n      });\r\n  };\r\n\r\n  setPlanIdToLocalStorage = (planId) => {\r\n    this.props.startLoading();\r\n    if (localStorage.getItem(\"planId\") !== undefined) {\r\n      localStorage.setItem(\"planId\", planId);\r\n      this.props.cancelLoading();\r\n    } else {\r\n      localStorage.setItem(\"planId\", planId);\r\n      this.props.cancelLoading();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className={classes.Plans}>\r\n        <LogoSection />\r\n        <main>\r\n          <div className={classes.Form_Header}>\r\n            <BackBtn />\r\n            <div className={classes.Header_Text}>\r\n              <h1>Choose a Plan</h1>\r\n            </div>\r\n          </div>\r\n          <div className={classes.Plan_Section}>\r\n            <div className={classes.Table_Head}>\r\n              <div></div>\r\n              {this.state.plan &&\r\n                this.state.plan.map((plan) => (\r\n                  <div key={plan.name}>\r\n                    <h1>{plan.name}</h1>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div className={classes.Table_Content}>\r\n              <div></div>\r\n              {this.state.plan &&\r\n                this.state.plan.map((plan) => (\r\n                  <div key={plan.amount}>\r\n                    <p>{plan.amount === 0 ? \"free\" : plan.amount}</p>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div className={classes.Table_Price}>\r\n              <div></div>\r\n              {this.state.plan &&\r\n                this.state.plan.map((plan) => (\r\n                  <CustomButton\r\n                    key={plan.planId}\r\n                    className={classes.button}\r\n                    onClick={(e) => {\r\n                      this.props.checkForAddress();\r\n                      this.setPlanIdToLocalStorage(plan.planId);\r\n                    }}\r\n                  >\r\n                    Buy Now\r\n                  </CustomButton>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authStep: state.auth.currentCount,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    authSteps: (currentCount) => dispatch(actions.authSteps(currentCount)),\r\n    checkForAddress: (userId) => dispatch(actions.checkForAddress(userId)),\r\n    startLoading: () => dispatch(actions.startLoading()),\r\n    cancelLoading: () => dispatch(actions.cancelLoading()),\r\n    error: (err) => dispatch(actions.error(err)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Plans);\r\n"],"sourceRoot":""}