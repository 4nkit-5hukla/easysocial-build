{"version":3,"sources":["Pages/OrderSummaryRenew/OrderSummary.module.css","Pages/OrderSummaryRenew/OrderSummary.js"],"names":["module","exports","OrderSummary","state","userData","promo","value","elementType","required","type","placeholder","id","gst","maxLength","minLength","plan","showGST","Toggle_DropDown","address","gstPercentage","gstPercentage2","inputChangedHandler","event","inputIdentifier","updatedFormElement","updateObject","target","updatedOrderForm","setState","onKeyPressHandler","e","keyCode","length","alert","name","amount","props","validateCouponCode","storeAddressOnSession","sessionStorage","getItem","setItem","JSON","stringify","orderHandler","planId","gstAmount","couponDetail","discounted_amount","Date","parse","expiry","businessId","history","context","this","startLoading","getPlanDetail","then","data","catch","err","error","getUserAddress","userAddress","latitude","longitude","cancelLoading","script","document","createElement","src","getElementsByTagName","appendChild","callback","to","formElementsArray","key","push","config","title","titleSub","Object","keys","details","values","plan_dropdown","classes","Plan_Dropdown","className","PlanSummary","Header_Text","Parent","Billing_Detail","business_name","locality","city","pincode","toFixed","toString","replace","style","fontSize","onClick","join","map","Array","isArray","Summary_Title","Detail","Sub","discount","color","borderRadius","marginTop","width","fontWeight","backgroundColor","padding","resetCouponField","display","gridTemplateColumns","Total_Amount","React","Component","contextType","ToastMessage","connect","auth","userId","dispatch","couponCode","actions","validatePlan","currentPlanExpiry","gstNumber","message"],"mappings":"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","file":"static/js/114.be2b58bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlanSummary\":\"OrderSummary_PlanSummary__YMnmh\",\"Parent\":\"OrderSummary_Parent__2Sc79\",\"Billing_Detail\":\"OrderSummary_Billing_Detail__166m7\",\"Summary_Title\":\"OrderSummary_Summary_Title__Z_rDp\",\"Detail\":\"OrderSummary_Detail__3y4-4\",\"Sub\":\"OrderSummary_Sub__2dThl\",\"section\":\"OrderSummary_section__2HtFS\",\"Plan_Dropdown\":\"OrderSummary_Plan_Dropdown__3eqvU\",\"Toggle_DropDown\":\"OrderSummary_Toggle_DropDown__34tsf\",\"Total_Amount\":\"OrderSummary_Total_Amount__2DY_0\"};","/** @format */\r\n\r\nimport React from \"react\";\r\nimport classes from \"./OrderSummary.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Store/actions/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getPlanDetail } from \"../../api/Plan\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport Input from \"../../Components/UI/Input/Input\";\r\nimport { updateObject } from \"../../Shared/Utility\";\r\nimport { getUserAddress } from \"../../api/Address\";\r\nimport UIButton from \"../../Components/UI/UIButton/UIButton\";\r\nimport { ToastMessage } from \"../../contexts/ToastMessageContext\";\r\n\r\nclass OrderSummary extends React.Component {\r\n  static contextType = ToastMessage;\r\n\r\n  state = {\r\n    userData: {\r\n      promo: {\r\n        value: \"\",\r\n        elementType: \"text\",\r\n        required: true,\r\n        type: \"Promo\",\r\n        placeholder: \"Enter Code\",\r\n        id: 1,\r\n      },\r\n      gst: {\r\n        value: \"\",\r\n        elementType: \"text\",\r\n        required: true,\r\n        type: \"GST\",\r\n        maxLength: 12,\r\n        minLength: 12,\r\n        placeholder: \"Enter GST Number\",\r\n        id: 2,\r\n      },\r\n    },\r\n    plan: null,\r\n    showGST: false,\r\n    Toggle_DropDown: false,\r\n    address: null,\r\n    gstPercentage: 18,\r\n    gstPercentage2: 1.18,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.startLoading();\r\n    let planId = null;\r\n\r\n    if (sessionStorage.getItem(\"renewDetail\")) {\r\n      planId = JSON.parse(sessionStorage.getItem(\"renewDetail\")).planId;\r\n\r\n      getPlanDetail(planId)\r\n        .then((plan) => {\r\n          this.setState({ ...this.state, plan: plan.data });\r\n        })\r\n        .catch((err) => this.props.error(err));\r\n    }\r\n\r\n    getUserAddress()\r\n      .then((userAddress) => {\r\n        this.setState({\r\n          ...this.state,\r\n          address: { ...userAddress.data, latitude: null, longitude: null },\r\n        });\r\n        this.props.cancelLoading();\r\n      })\r\n      .catch((err) => this.props.error(err));\r\n\r\n    let script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // fix Warning: Can't perform a React state update on an unmounted component\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const { userData } = this.state;\r\n    const updatedFormElement = updateObject(userData[inputIdentifier], {\r\n      value: event.target.value,\r\n    });\r\n\r\n    const updatedOrderForm = updateObject(userData, {\r\n      [inputIdentifier]: updatedFormElement,\r\n    });\r\n\r\n    this.setState({ ...this.state, userData: updatedOrderForm });\r\n  };\r\n\r\n  onKeyPressHandler = (e) => {\r\n    if (e.keyCode === 13) {\r\n      if (e.target.value.length < 1) {\r\n        alert(\"Enter Something!\");\r\n      } else if (e.target.name === this.state.userData.promo.type) {\r\n        if (this.state.plan.amount > 0) {\r\n          this.props.validateCouponCode(this.state.userData.promo.value);\r\n        } else {\r\n          alert(\"This coupon code is not eligible on this plan!\");\r\n        }\r\n      } else if (e.target.name === this.state.userData.gst.type) {\r\n        this.setState({ ...this.state, showGST: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  storeAddressOnSession = () => {\r\n    if (sessionStorage.getItem(\"address\") !== undefined) {\r\n      sessionStorage.setItem(\"address\", JSON.stringify(this.state.address));\r\n    } else {\r\n      sessionStorage.setItem(\"address\", JSON.stringify(this.state.address));\r\n    }\r\n  };\r\n\r\n  orderHandler = (plan, planId, gstAmount) => {\r\n    this.props.orderHandler(\r\n      this.props.couponDetail.discounted_amount\r\n        ? this.props.couponDetail.discounted_amount * this.state.gstPercentage2\r\n        : plan && plan.amount * this.state.gstPercentage2,\r\n      planId,\r\n      new Date(JSON.parse(sessionStorage.getItem(\"renewDetail\")).expiry),\r\n      JSON.parse(sessionStorage.getItem(\"renewDetail\")).businessId,\r\n      this.props.couponDetail,\r\n      this.state.showGST && this.state.userData.gst.value,\r\n      this.props.history,\r\n      this.state.gstPercentage,\r\n      gstAmount,\r\n      this.context\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (!sessionStorage.getItem(\"renewDetail\")) {\r\n      return <Redirect to=\"/user/payments/renewals\" />;\r\n    }\r\n\r\n    const formElementsArray = [];\r\n    for (let key in this.state.userData) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.userData[key],\r\n      });\r\n    }\r\n\r\n    const { plan, address } = this.state;\r\n\r\n    let title = null;\r\n    let titleSub = null;\r\n\r\n    if (plan) {\r\n      title = Object.keys(plan.details);\r\n      titleSub = Object.values(plan.details);\r\n    }\r\n\r\n    const plan_dropdown = !this.state.Toggle_DropDown\r\n      ? [classes.Plan_Dropdown]\r\n      : [classes.Plan_Dropdown, classes.Toggle_DropDown];\r\n\r\n    return (\r\n      <section className={classes.PlanSummary}>\r\n        <Modal Header_Text=\"Order Summary\">\r\n          <div className={classes.Parent}>\r\n            <div className={classes.Billing_Detail}>\r\n              {address && (\r\n                <div>\r\n                  <span>\r\n                    <h1>{address.business_name}</h1>\r\n                    {/* <h6\r\n                        style={{ fontSize: \"11px\" }}\r\n                        onClick={() =>\r\n                          this.props.history.push(\"/choose-plans/billing\")\r\n                        }\r\n                      >\r\n                        Edit Billing Address\r\n                      </h6> */}\r\n                  </span>\r\n                  <p>\r\n                    {address.locality}, {address.state}, {address.city},{\" \"}\r\n                    {address.pincode}\r\n                  </p>\r\n                </div>\r\n              )}\r\n              <div>\r\n                <h1>{plan && plan.name}</h1>\r\n                <span>\r\n                  <p>\r\n                    ₹\r\n                    {plan &&\r\n                      plan.amount\r\n                        .toFixed(2)\r\n                        .toString()\r\n                        .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    /Month\r\n                  </p>\r\n                  <h6\r\n                    style={{ fontSize: \"11px\" }}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        ...this.state,\r\n                        Toggle_DropDown: !this.state.Toggle_DropDown,\r\n                      })\r\n                    }\r\n                  >\r\n                    View Details{\"  \"}\r\n                    <i\r\n                      className={`fa fa-angle-${\r\n                        this.state.Toggle_DropDown ? \"up\" : \"down\"\r\n                      }`}\r\n                      style={{ fontSize: \"15px\" }}\r\n                    ></i>\r\n                  </h6>\r\n                </span>\r\n                <div className={plan_dropdown.join(\" \")}>\r\n                  <div>\r\n                    {title && title.map((plan, id) => <h1 key={id}>{plan}</h1>)}\r\n                  </div>\r\n                  <div>\r\n                    {titleSub &&\r\n                      titleSub.map((plan, id) => {\r\n                        if (Array.isArray(plan)) {\r\n                          return <p key={id}>{plan.join(\" \")}</p>;\r\n                        }\r\n                        return <p key={id}>{plan}</p>;\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.Summary_Title}>\r\n              <h1>Price Detail</h1>\r\n            </div>\r\n            <div className={classes.Detail}>\r\n              <div className={classes.Sub}>\r\n                <h3>{plan && plan.name}</h3>\r\n                <h3>\r\n                  ₹{\" \"}\r\n                  {plan &&\r\n                    plan.amount\r\n                      .toFixed(2)\r\n                      .toString()\r\n                      .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                </h3>\r\n              </div>\r\n\r\n              {/* Hiding if plan amount is 0rs */}\r\n              {plan && plan.amount > 0 && (\r\n                <>\r\n                  <div className={classes.Sub}>\r\n                    <h3>Discount Promo</h3>\r\n                    {this.props.couponDetail.discount ? (\r\n                      <h3 style={{ color: \"#1bb954\" }}>\r\n                        -₹\r\n                        {this.props.couponDetail.discount\r\n                          .toFixed(2)\r\n                          .toString()\r\n                          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                      </h3>\r\n                    ) : (\r\n                      <Input\r\n                        type={formElementsArray[0].config.elementType}\r\n                        name={formElementsArray[0].config.type}\r\n                        value={formElementsArray[0].config.value}\r\n                        inputChangedHandler={this.inputChangedHandler}\r\n                        id={formElementsArray[0].id}\r\n                        placeholder={formElementsArray[0].config.placeholder}\r\n                        required={formElementsArray[0].config.required}\r\n                        onKeyPressHandler={this.onKeyPressHandler}\r\n                      />\r\n                    )}\r\n                    {this.props.couponDetail.discount && (\r\n                      <p\r\n                        style={{\r\n                          borderRadius: \"4px\",\r\n                          marginTop: \"5px\",\r\n                          width: \"fit-content\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"normal\",\r\n                          color: \"#7b8aa2\",\r\n                          backgroundColor: \"#f2f3f7\",\r\n                          padding: \"5px\",\r\n                        }}\r\n                      >\r\n                        {this.state.userData.promo.value\r\n                          .toString()\r\n                          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                        {\"   \"}\r\n                        <span\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          onClick={this.props.resetCouponField}\r\n                        >\r\n                          X\r\n                        </span>\r\n                      </p>\r\n                    )}\r\n                    {this.props.couponDetail.error && (\r\n                      <p\r\n                        style={{\r\n                          color: \"red\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"normal\",\r\n                          marginTop: \"-10px\",\r\n                          backgroundColor: \"#f2f3f7\",\r\n                          padding: \"5px\",\r\n                          width: \"fit-content\",\r\n                        }}\r\n                      >\r\n                        {this.props.couponDetail.error}!\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <div className={classes.Sub}>\r\n                    <h3>Tax GST</h3>\r\n                    <h3>\r\n                      {this.props.couponDetail.discounted_amount\r\n                        ? `₹${\r\n                            this.props.couponDetail.discounted_amount *\r\n                              this.state.gstPercentage2 -\r\n                            this.props.couponDetail.discounted_amount\r\n                          }`\r\n                        : `₹${\r\n                            plan &&\r\n                            plan.amount * this.state.gstPercentage2 -\r\n                              plan.amount\r\n                          }`}\r\n                    </h3>\r\n                  </div>\r\n                  <div\r\n                    className={classes.Sub}\r\n                    style={\r\n                      this.state.showGST\r\n                        ? { display: \"grid\", gridTemplateColumns: \"65% 35%\" }\r\n                        : { display: \"grid\", gridTemplateColumns: \"50% 50%\" }\r\n                    }\r\n                  >\r\n                    <h3>Enter GST</h3>\r\n                    {this.state.showGST ? (\r\n                      <h3\r\n                        style={{\r\n                          borderRadius: \"4px\",\r\n                          marginTop: \"3px\",\r\n                          fontSize: \"15px\",\r\n                          fontWeight: \"normal\",\r\n                          color: \"#7b8aa2\",\r\n                          backgroundColor: \"#f2f3f7\",\r\n                          padding: \"5px\",\r\n                        }}\r\n                      >\r\n                        {this.state.userData.gst.value}{\" \"}\r\n                        <span\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          onClick={() =>\r\n                            this.setState({ ...this.state, showGST: false })\r\n                          }\r\n                        >\r\n                          X\r\n                        </span>\r\n                      </h3>\r\n                    ) : (\r\n                      <Input\r\n                        type={formElementsArray[1].config.elementType}\r\n                        name={formElementsArray[1].config.type}\r\n                        value={formElementsArray[1].config.value}\r\n                        inputChangedHandler={this.inputChangedHandler}\r\n                        id={formElementsArray[1].id}\r\n                        placeholder={formElementsArray[1].config.placeholder}\r\n                        onKeyPressHandler={this.onKeyPressHandler}\r\n                        required={formElementsArray[1].config.required}\r\n                        maxLength={formElementsArray[1].config.maxLength}\r\n                        minLength={formElementsArray[1].config.minLength}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className={classes.Total_Amount}>\r\n              <h1>Total Payable Amount</h1>\r\n              <span>\r\n                <h1>\r\n                  {this.props.couponDetail.discounted_amount\r\n                    ? `₹${(\r\n                        this.props.couponDetail.discounted_amount *\r\n                        this.state.gstPercentage2\r\n                      )\r\n                        .toFixed(2)\r\n                        .toString()\r\n                        .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}`\r\n                    : `₹${\r\n                        plan &&\r\n                        (plan.amount * this.state.gstPercentage2)\r\n                          .toFixed(2)\r\n                          .toString()\r\n                          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      }`}\r\n                </h1>\r\n                <h6>Monthly</h6>\r\n              </span>\r\n            </div>\r\n            <UIButton\r\n              onClick={() => {\r\n                const gstAmount =\r\n                  plan.amount * (this.state.gstPercentage / 100);\r\n\r\n                this.orderHandler(plan, plan.planId, gstAmount);\r\n              }}\r\n            >\r\n              Pay{\" \"}\r\n              {this.props.couponDetail.discounted_amount\r\n                ? `₹${(\r\n                    this.props.couponDetail.discounted_amount *\r\n                    this.state.gstPercentage2\r\n                  )\r\n                    .toFixed(2)\r\n                    .toString()\r\n                    .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}`\r\n                : `₹${\r\n                    plan &&\r\n                    (plan.amount * this.state.gstPercentage2)\r\n                      .toFixed(2)\r\n                      .toString()\r\n                      .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                  }`}\r\n            </UIButton>\r\n          </div>\r\n        </Modal>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    gst: state.auth.gst,\r\n    userId: state.auth.userId,\r\n    couponDetail: state.auth.couponDetail,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    validateCouponCode: (couponCode) =>\r\n      dispatch(actions.validateCouponCode(couponCode)),\r\n    validatePlan: () => dispatch(actions.validatePlan()),\r\n    resetCouponField: () => dispatch(actions.resetCouponField()),\r\n    orderHandler: (\r\n      amount,\r\n      planId,\r\n      currentPlanExpiry,\r\n      businessId,\r\n      couponDetail,\r\n      gstNumber,\r\n      history,\r\n      gstPercentage,\r\n      gstAmount,\r\n      message\r\n    ) =>\r\n      dispatch(\r\n        actions.renewalOrderHandler(\r\n          amount,\r\n          planId,\r\n          currentPlanExpiry,\r\n          businessId,\r\n          couponDetail,\r\n          gstNumber,\r\n          history,\r\n          gstPercentage,\r\n          gstAmount,\r\n          message\r\n        )\r\n      ),\r\n    startLoading: () => dispatch(actions.startLoading()),\r\n    cancelLoading: () => dispatch(actions.cancelLoading()),\r\n    error: (err) => dispatch(actions.error(err)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderSummary);\r\n"],"sourceRoot":""}