{"version":3,"file":"static/js/3602.f7cd3d7e.chunk.js","mappings":"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","sources":["Assets/Icons/LeftArrow.tsx","Components/Common/AppLink.tsx","Apis/WAUsageApi.ts","Components/BusinessSettings/WAUsageReports/enums.ts","Components/BusinessSettings/WAUsageReports/LiveStatus.tsx","Components/BusinessSettings/WAUsageReports/OffStatus.tsx","Components/BusinessSettings/WAUsageReports/OlderReports.tsx","Components/BusinessSettings/WAUsageReports/UtilizationReport.tsx","Assets/Icons/Customer.tsx","Assets/Icons/Business.tsx","Assets/Icons/Reply.tsx","Components/BusinessSettings/WAUsageReports/RangePopUp.tsx","Components/BusinessSettings/WAUsageReports/Utilization.tsx","Components/BusinessSettings/WAUsageReports.tsx","Pages/BusinessSettings/WAUsageReports.tsx","Shared/Enums/WhatsApp.ts","Utils/index.ts"],"sourcesContent":["export const LeftArrow = () => {\r\n  return (\r\n    <svg\r\n      width=\"9\"\r\n      height=\"14\"\r\n      viewBox=\"0 0 9 14\"\r\n      fill=\"none\"\r\n      xmlns=\"//www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M8 1L2 7L8 13\" stroke=\"#24272C\" strokeWidth={2} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LeftArrow;\r\n","import { Link as MuiLink } from \"@mui/material\";\r\nimport { forwardRef, Ref } from \"react\";\r\nimport { Link as LinkBase } from \"react-router-dom\";\r\n\r\nexport const AppLink = forwardRef(\r\n  (\r\n    { to, className, children, ...rest }: any,\r\n    ref: Ref<HTMLAnchorElement> | undefined\r\n  ) => (\r\n    <MuiLink\r\n      component={LinkBase}\r\n      underline=\"none\"\r\n      color=\"inherit\"\r\n      ref={ref}\r\n      to={to}\r\n      className={className}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </MuiLink>\r\n  )\r\n);\r\n\r\nexport default AppLink;\r\n","import { AuthenticatedReq } from \"Utils/Axios\";\r\n\r\nexport default class WAUsageApi {\r\n  public static getWaStatus = async () => {\r\n    return await AuthenticatedReq(`/platforms/wa/status`, \"GET\");\r\n  };\r\n\r\n  public static getWaHealthReport = async () => {\r\n    return await AuthenticatedReq(`/whatsapp-usage/health-report`, \"GET\");\r\n  };\r\n\r\n  public static getWaMonthlyReport = async () => {\r\n    return await AuthenticatedReq(`/whatsapp-usage/monthly-utilization`, \"GET\");\r\n  };\r\n\r\n  public static downloadWaMonthWiseReport = async (data: any) => {\r\n    return await AuthenticatedReq(\r\n      `/whatsapp-usage/download-consumed-report`,\r\n      \"POST\",\r\n      {\r\n        data,\r\n        responseType: \"blob\",\r\n      }\r\n    );\r\n  };\r\n\r\n  public static getRangeUtilization = async (from: Date, to: Date) => {\r\n    return await AuthenticatedReq(\r\n      `/whatsapp-usage/utilization?from=${from.getTime()}&to=${to.getTime()}`,\r\n      \"GET\"\r\n    );\r\n  };\r\n}\r\n","export enum UtilizationPeriods {\r\n  TODAY = \"TODAY\",\r\n  CUSTOM = \"CUSTOM\",\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Card, CardContent, Skeleton } from \"@mui/material\";\r\n\r\nimport {\r\n  BlockLabel,\r\n  BlockLabelWrap,\r\n  BlockTitle,\r\n  CardContentSX,\r\n  CardHeading,\r\n  CardSX,\r\n  FooterNote,\r\n  StatusBlock,\r\n  StatusBlocks,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { WaConnection, WaHealth, WaTiers } from \"Shared/Enums/WhatsApp\";\r\nimport WAUsageApi from \"Apis/WAUsageApi\";\r\n\r\nconst LiveStatus = ({ loadingStatus }: { loadingStatus: boolean }) => {\r\n  const { setErrorMessage } = useSnacks();\r\n  const [tier, setTier] = useState<WaTiers | undefined>();\r\n  const [connection, setConnection] = useState<WaConnection | undefined>();\r\n  const [wAHealth, setWAHealth] = useState<WaHealth | undefined>();\r\n  const TierLabel = () =>\r\n    tier ? (\r\n      <BlockLabelWrap>\r\n        <svg\r\n          width=\"11\"\r\n          height=\"11\"\r\n          viewBox=\"0 0 11 11\"\r\n          fill=\"none\"\r\n          xmlns=\"//www.w3.org/2000/svg\"\r\n        >\r\n          <circle\r\n            cx=\"5.5\"\r\n            cy=\"5.5\"\r\n            r={0.5 + tier.size}\r\n            fill={tier.statusColor}\r\n          />\r\n          <circle cx=\"5.5\" cy=\"5.5\" r=\"5\" stroke=\"#B9B9B9\" />\r\n        </svg>\r\n        <BlockLabel>{tier.name}</BlockLabel>\r\n      </BlockLabelWrap>\r\n    ) : (\r\n      <BlockLabelWrap>\r\n        <Skeleton width={58} />\r\n      </BlockLabelWrap>\r\n    );\r\n  const StatusLabel = () =>\r\n    wAHealth ? (\r\n      <BlockLabelWrap>\r\n        {wAHealth.health === \"GREEN\" && (\r\n          <svg\r\n            width=\"14\"\r\n            height=\"12\"\r\n            viewBox=\"0 0 14 12\"\r\n            fill=\"none\"\r\n            xmlns=\"//www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              d=\"M13.0134 3.10551L4.11073 11.2663L0.767578 6.44966L3.2321 4.73908L4.61622 6.73324L10.9863 0.894043L13.0134 3.10551Z\"\r\n              fill={wAHealth.statusColor}\r\n            />\r\n          </svg>\r\n        )}\r\n        <BlockLabel>{wAHealth.status}</BlockLabel>\r\n      </BlockLabelWrap>\r\n    ) : (\r\n      <BlockLabelWrap>\r\n        <Skeleton width={55} />\r\n      </BlockLabelWrap>\r\n    );\r\n  const ConnectionLabel = () =>\r\n    connection ? (\r\n      <BlockLabelWrap>\r\n        {connection.status === \"connected\" ? (\r\n          <svg\r\n            width=\"14\"\r\n            height=\"12\"\r\n            viewBox=\"0 0 14 12\"\r\n            fill=\"none\"\r\n            xmlns=\"//www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              d=\"M13.0134 3.10551L4.11073 11.2663L0.767578 6.44966L3.2321 4.73908L4.61622 6.73324L10.9863 0.894043L13.0134 3.10551Z\"\r\n              fill={connection.statusColor}\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 10\"\r\n            fill=\"none\"\r\n            xmlns=\"//www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              d=\"M9.62882 1.98772L2.62882 9.98772L0.371094 8.01221L7.37109 0.012207L9.62882 1.98772Z\"\r\n              fill={connection.statusColor}\r\n            />\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              d=\"M0.371176 1.98772L7.37118 9.98772L9.62891 8.01221L2.62891 0.012207L0.371176 1.98772Z\"\r\n              fill={connection.statusColor}\r\n            />\r\n          </svg>\r\n        )}\r\n        <BlockLabel>\r\n          {connection.status === \"connected\" ? \"Connected\" : \"Not Connected\"}\r\n        </BlockLabel>\r\n      </BlockLabelWrap>\r\n    ) : (\r\n      <BlockLabelWrap>\r\n        <Skeleton width={88} />\r\n      </BlockLabelWrap>\r\n    );\r\n  const fetchHealthReport = useCallback(async () => {\r\n    try {\r\n      const res = await WAUsageApi.getWaHealthReport();\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      }\r\n      const { account_status, health } = res.payload;\r\n      setTier(WaTiers.TIER1);\r\n      switch (health) {\r\n        case \"GREY\":\r\n          setWAHealth(WaHealth.GREY);\r\n          break;\r\n        case \"RED\":\r\n          setWAHealth(WaHealth.RED);\r\n          break;\r\n        case \"ORANGE\":\r\n          setWAHealth(WaHealth.ORANGE);\r\n          break;\r\n        case \"GREEN\":\r\n          setWAHealth(WaHealth.GREEN);\r\n          break;\r\n      }\r\n      switch (account_status) {\r\n        case \"connected\":\r\n          setConnection(WaConnection.Connected);\r\n          break;\r\n        default:\r\n          setConnection(WaConnection.NotConnected);\r\n          break;\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchHealthReport();\r\n  }, [fetchHealthReport]);\r\n\r\n  return (\r\n    <Card\r\n      elevation={0}\r\n      sx={{\r\n        ...CardSX,\r\n\r\n        \"& .MuiCardContent-root\": {\r\n          pb: \"10px !important\",\r\n        },\r\n      }}\r\n    >\r\n      <CardContent sx={CardContentSX}>\r\n        <CardHeading>\r\n          {!loadingStatus ? \"Live Status\" : <Skeleton width={90} />}\r\n        </CardHeading>\r\n        <StatusBlocks\r\n          sx={{\r\n            margin: { xs: \"-20px -36px 20px\", sm: \"-20px -20px 0\" },\r\n            padding: { xs: \"20px 36px\", sm: \"20px\" },\r\n          }}\r\n        >\r\n          <StatusBlock statusColor={tier?.statusColor}>\r\n            <BlockTitle>{\"Messaging Tier\"}</BlockTitle>\r\n            <TierLabel />\r\n          </StatusBlock>\r\n          <StatusBlock statusColor={wAHealth?.statusColor}>\r\n            <BlockTitle>{\"WhatsApp Health\"}</BlockTitle>\r\n            <StatusLabel />\r\n          </StatusBlock>\r\n          <StatusBlock statusColor={connection?.statusColor}>\r\n            <BlockTitle>{\"Account Status\"}</BlockTitle>\r\n            <ConnectionLabel />\r\n          </StatusBlock>\r\n        </StatusBlocks>\r\n        <FooterNote>\r\n          {tier ? tier.message : <Skeleton width=\"95%\" />}\r\n        </FooterNote>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LiveStatus;\r\n","import { Card, CardContent, CardMedia, Link } from \"@mui/material\";\r\n\r\nimport {\r\n  CardContentSX,\r\n  CardInfo,\r\n  CardSX,\r\n  CtaInfoText,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\n\r\nconst OffStatus = () => {\r\n  return (\r\n    <Card elevation={0} sx={CardSX}>\r\n      <CardContent\r\n        sx={{\r\n          ...CardContentSX,\r\n          pt: 0,\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          rowGap: 5.25,\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <CardMedia\r\n          component=\"img\"\r\n          image=\"/static/images/svg/inactive.svg\"\r\n          alt=\"inactive-wa\"\r\n          sx={{ width: \"auto\", mx: \"auto\" }}\r\n        />\r\n        <CardInfo>\r\n          <CtaInfoText>\r\n            {\r\n              \"Your WhatsApp Business API account is not active yet. It usually takes upto 72 business hours for activation.\"\r\n            }\r\n          </CtaInfoText>\r\n          <CtaInfoText>\r\n            {\"Please contact us on \"}\r\n            <Link href=\"mailto:support@easysocial.io\" underline=\"hover\">\r\n              {\"support@easysocial.io\"}\r\n            </Link>\r\n            {\" in case it is taking longer than expected.\"}\r\n          </CtaInfoText>\r\n        </CardInfo>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OffStatus;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  TextFieldProps,\r\n} from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\n\r\nimport { OlderReportsProps } from \"./types\";\r\n\r\nconst OlderReports = ({\r\n  open,\r\n  closeDialog,\r\n  downloadReport,\r\n  downloading,\r\n  setDownloading,\r\n}: OlderReportsProps) => {\r\n  const [month, setMonth] = useState<Date | null>(null);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={closeDialog}>\r\n      <DialogTitle>{\"Select Month\"}</DialogTitle>\r\n      <DialogContent sx={{ pt: \"20px !important\" }}>\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <DatePicker\r\n            views={[\"year\", \"month\"]}\r\n            openTo=\"year\"\r\n            label=\"Year and Month\"\r\n            minDate={new Date(\"2021-01-01\")}\r\n            maxDate={new Date()}\r\n            value={month}\r\n            onChange={(value: Date | null) => {\r\n              setMonth(value);\r\n            }}\r\n            renderInput={({ inputProps, ...params }: TextFieldProps) => (\r\n              <TextField\r\n                {...params}\r\n                helperText={null}\r\n                inputProps={{\r\n                  ...inputProps,\r\n                  ...(month\r\n                    ? { value: moment(month).local().format(\"MMM YYYY\") }\r\n                    : {}),\r\n                }}\r\n                autoComplete=\"off\"\r\n              />\r\n            )}\r\n          />\r\n        </LocalizationProvider>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          disabled={downloading}\r\n          onClick={() => {\r\n            setDownloading(true);\r\n            downloadReport(moment(month).local().format(\"YYYY-MM\"));\r\n          }}\r\n        >\r\n          Download\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OlderReports;\r\n","import { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Link,\r\n  Skeleton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\n\r\nimport WAUsageApi from \"Apis/WAUsageApi\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport {\r\n  ActionArea,\r\n  CardContentSX,\r\n  CardHeading,\r\n  CardSX,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { monthFormat } from \"Utils\";\r\n\r\nimport OlderReports from \"./OlderReports\";\r\n\r\nconst UtilizationReport = ({ loadingStatus }: { loadingStatus: boolean }) => {\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const [downloading, setDownloading] = useState<boolean>(false);\r\n  const [oldReports, setOldReports] = useState<boolean>(false);\r\n  const [loadingReport, setLoadingReport] = useState<boolean>(true);\r\n  const [monthlyReport, setMonthlyReport] = useState<any[]>([]);\r\n  const downloadReport = async (month: string) => {\r\n    try {\r\n      const res = await WAUsageApi.downloadWaMonthWiseReport({ month });\r\n      if (res) {\r\n        const date = new Date(month);\r\n        const url = window.URL.createObjectURL(new Blob([res]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\r\n          \"download\",\r\n          `SessionReport_${date.toLocaleString(\"en-us\", {\r\n            month: \"short\",\r\n          })}_${date.getFullYear()}.pdf`\r\n        );\r\n        // Append to html link element page\r\n        document.body.appendChild(link);\r\n        link.style.display = \"none\";\r\n        // Start download\r\n        link.click();\r\n        // Clean up and remove the link\r\n        link?.parentNode?.removeChild(link);\r\n        setSuccessMessage(\"Report Downloaded\");\r\n      } else {\r\n        throw new Error(\"Internal Server Error\");\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setOldReports(false);\r\n    }\r\n  };\r\n  const fetchMonthlyReport = useCallback(async () => {\r\n    try {\r\n      const res = await WAUsageApi.getWaMonthlyReport();\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      }\r\n      setMonthlyReport(res.payload);\r\n      setLoadingReport(false);\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMonthlyReport();\r\n  }, [fetchMonthlyReport]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card elevation={0} sx={CardSX}>\r\n        <CardContent sx={CardContentSX}>\r\n          <CardHeading>\r\n            {!loadingStatus ? (\r\n              \"Monthly Utilization Report\"\r\n            ) : (\r\n              <Skeleton width={214} />\r\n            )}\r\n          </CardHeading>\r\n          <TableContainer>\r\n            <Table\r\n              aria-label=\"Monthly Report\"\r\n              className=\"reports\"\r\n              sx={{\r\n                \"& .MuiTableCell-root\": {\r\n                  borderBottom: \"none\",\r\n                  color: \"#3B414A\",\r\n                  fontSize: \"14px\",\r\n                  lineHeight: \"16px\",\r\n                },\r\n\r\n                \"& .MuiLink-root\": {\r\n                  alignItems: \"center\",\r\n                  color: \"#32C5FF\",\r\n                  display: \"inline-flex\",\r\n                  fontSize: \"14px\",\r\n                  fontWeight: 500,\r\n                  lineHeight: \"16px\",\r\n                },\r\n\r\n                \"& .MuiTableHead-root\": {\r\n                  \"& .MuiTableCell-root\": {\r\n                    fontWeight: 700,\r\n                    opacity: 0.7,\r\n                    padding: { xs: \"0 0 14px\", sm: \"8px\" },\r\n                  },\r\n                },\r\n\r\n                \"& .MuiTableBody-root\": {\r\n                  \"& .MuiTableRow-root\": {\r\n                    \"&.MuiTableRow-hover\": {\r\n                      \"&:hover\": {\r\n                        backgroundColor: \"transparent\",\r\n\r\n                        \"& .MuiTableCell-root\": {\r\n                          backgroundColor: \"#C4C4C433\",\r\n\r\n                          \"&:first-of-type\": {\r\n                            borderRadius: \"10px 0 0 10px\",\r\n                          },\r\n\r\n                          \"&:last-of-type\": {\r\n                            borderRadius: \"0 10px 10px 0\",\r\n                          },\r\n                        },\r\n                      },\r\n                    },\r\n\r\n                    \"& .MuiTableCell-root\": {\r\n                      borderBottom: \"none\",\r\n                      fontWeight: 400,\r\n                      height: \"32px\",\r\n                      opacity: 0.9,\r\n\r\n                      \"&:not(.loading)\": {\r\n                        padding: 0,\r\n                      },\r\n\r\n                      \"&:last-of-type\": {\r\n                        \"& .MuiSkeleton-root\": {\r\n                          backgroundColor: \"#32C5FF80\",\r\n                        },\r\n                      },\r\n\r\n                      \"& .MuiSkeleton-root\": {\r\n                        backgroundColor: \"#3B414A\",\r\n                        margin: \"0 auto\",\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">{\"Duration\"}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {\"Customer\"}\r\n                    <br />\r\n                    {\"Initiated Sessions\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {\"Business\"}\r\n                    <br />\r\n                    {\"Initiated Sessions\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{\"Report\"}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {loadingReport ? (\r\n                <TableBody>\r\n                  <TableRow\r\n                    sx={{\r\n                      \"&:last-of-type td, &:last-of-type th\": {\r\n                        border: 0,\r\n                      },\r\n                    }}\r\n                    hover\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={60} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={24} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={24} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={74} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow\r\n                    sx={{\r\n                      \"&:last-of-type td, &:last-of-type th\": {\r\n                        border: 0,\r\n                      },\r\n                    }}\r\n                    hover\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={60} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={24} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={24} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={74} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow\r\n                    sx={{\r\n                      \"&:last-of-type td, &:last-of-type th\": {\r\n                        border: 0,\r\n                      },\r\n                    }}\r\n                    hover\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={60} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={24} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={24} />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Skeleton width={74} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : monthlyReport && monthlyReport.length === 0 ? (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell colSpan={4} align=\"center\">\r\n                      {\"No Reports Available\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                <TableBody>\r\n                  {monthlyReport &&\r\n                    monthlyReport.map((report, index) => (\r\n                      <TableRow\r\n                        key={index}\r\n                        sx={{\r\n                          \"&:last-of-type td, &:last-of-type th\": {\r\n                            border: 0,\r\n                          },\r\n                        }}\r\n                        hover\r\n                      >\r\n                        <TableCell align=\"center\">\r\n                          {monthFormat(report.month)}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{report.cis}</TableCell>\r\n                        <TableCell align=\"center\">{report.bis}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link\r\n                            component=\"button\"\r\n                            underline=\"none\"\r\n                            className=\"report-download\"\r\n                            onClick={() => downloadReport(report.month)}\r\n                          >\r\n                            <img\r\n                              src=\"/static/images/svg/download.svg\"\r\n                              alt=\"download\"\r\n                            />\r\n                            <span className=\"ms-1\">{\"Download\"}</span>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              )}\r\n            </Table>\r\n          </TableContainer>\r\n          <ActionArea sx={{ my: 2.5 }}>\r\n            {loadingReport ? (\r\n              <Skeleton width={180} sx={{ backgroundColor: \"#32C5FF80\" }} />\r\n            ) : (\r\n              <Link\r\n                component=\"button\"\r\n                underline=\"none\"\r\n                sx={{\r\n                  color: \"#32C5FF\",\r\n                  fontSize: 16,\r\n                  fontWeight: 600,\r\n                  lineHeight: 1.1875,\r\n                }}\r\n                onClick={() => setOldReports(true)}\r\n              >\r\n                Download older reports\r\n              </Link>\r\n            )}\r\n          </ActionArea>\r\n        </CardContent>\r\n      </Card>\r\n      <OlderReports\r\n        open={oldReports}\r\n        closeDialog={() => {\r\n          setOldReports(false);\r\n        }}\r\n        downloading={downloading}\r\n        setDownloading={setDownloading}\r\n        downloadReport={downloadReport}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UtilizationReport;\r\n","export const Customer = () => (\r\n  <svg\r\n    className=\"icon\"\r\n    width=\"23\"\r\n    height=\"23\"\r\n    viewBox=\"0 0 23 23\"\r\n    fill=\"none\"\r\n    xmlns=\"//www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"11.5\" cy=\"11.5\" r=\"11.5\" fill=\"#B0E9FF\" />\r\n    <path\r\n      d=\"M11.6525 11.5217C12.9011 11.5217 13.9133 10.5095 13.9133 9.26087C13.9133 8.01223 12.9011 7 11.6525 7C10.4038 7 9.3916 8.01223 9.3916 9.26087C9.3916 10.5095 10.4038 11.5217 11.6525 11.5217Z\"\r\n      stroke=\"#FFFFFF\"\r\n      strokeWidth=\"1.2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M8 14.9997C8 13.2606 9.3913 11.5215 11.6522 11.5215C13.913 11.5215 15.3043 13.2606 15.3043 14.9997\"\r\n      stroke=\"#FFFFFF\"\r\n      strokeWidth=\"1.2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Customer;\r\n","export const Business = () => (\r\n  <svg\r\n    className=\"icon\"\r\n    width=\"23\"\r\n    height=\"23\"\r\n    viewBox=\"0 0 23 23\"\r\n    fill=\"none\"\r\n    xmlns=\"//www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"11.5\" cy=\"11.5\" r=\"11.5\" fill=\"#B0E9FF\" />\r\n    <path\r\n      d=\"M10.3076 10.0218C10.5826 10.0218 10.8056 9.79887 10.8056 9.52382V8.89302C10.8056 8.61801 10.5826 8.39502 10.3076 8.39502C10.0325 8.39502 9.80957 8.61798 9.80957 8.89302V9.52382C9.80957 9.79887 10.0326 10.0218 10.3076 10.0218Z\"\r\n      fill=\"#FFFFFF\"\r\n    />\r\n    <path\r\n      d=\"M12.167 10.0218C12.442 10.0218 12.665 9.79887 12.665 9.52382V8.89302C12.665 8.61801 12.442 8.39502 12.167 8.39502C11.8919 8.39502 11.6689 8.61798 11.6689 8.89302V9.52382C11.6689 9.79887 11.8919 10.0218 12.167 10.0218Z\"\r\n      fill=\"#FFFFFF\"\r\n    />\r\n    <path\r\n      d=\"M10.3076 12.8768C10.5826 12.8768 10.8056 12.6538 10.8056 12.3788V11.748C10.8056 11.473 10.5826 11.25 10.3076 11.25C10.0325 11.25 9.80957 11.473 9.80957 11.748V12.3788C9.80957 12.6538 10.0326 12.8768 10.3076 12.8768Z\"\r\n      fill=\"#FFFFFF\"\r\n    />\r\n    <path\r\n      d=\"M12.167 12.8768C12.442 12.8768 12.665 12.6538 12.665 12.3788V11.748C12.665 11.473 12.442 11.25 12.167 11.25C11.8919 11.25 11.6689 11.473 11.6689 11.748V12.3788C11.6689 12.6538 11.8919 12.8768 12.167 12.8768Z\"\r\n      fill=\"#FFFFFF\"\r\n    />\r\n    <path\r\n      d=\"M15.7476 16.0855C13.6731 16.0855 17.2129 16.0855 14.3495 16.0855V6.49801C14.3495 6.22299 14.1265 6 13.8515 6H8.62277C8.34775 6 8.12476 6.22296 8.12476 6.49801V16.0855C4.71899 16.0855 9.89447 16.0855 6.49801 16.0855C6.22296 16.0855 6 16.3085 6 16.5835C6 16.8586 6.22296 17.0815 6.49801 17.0815H8.6228H13.8515H15.7476C16.0226 17.0815 16.2456 16.8586 16.2456 16.5835C16.2456 16.3085 16.0226 16.0855 15.7476 16.0855ZM11.7218 16.0855H10.8024V15.1661H11.7218V16.0855ZM13.3535 16.0855H12.7178V14.6681C12.7178 14.3931 12.4948 14.1701 12.2198 14.1701H10.3044C10.0294 14.1701 9.80638 14.3931 9.80638 14.6681V16.0855H9.1208V6.99601H13.3535L13.3535 16.0855Z\"\r\n      fill=\"#FFFFFF\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Business;\r\n","export const Reply = () => (\r\n  <svg\r\n    className=\"icon\"\r\n    width=\"23\"\r\n    height=\"23\"\r\n    viewBox=\"0 0 23 23\"\r\n    fill=\"none\"\r\n    xmlns=\"//www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"11.5\" cy=\"11.5\" r=\"11.5\" fill=\"#B0E9FF\" />\r\n    <path\r\n      d=\"M10.3111 10.3669L10.3117 8.48321C10.3117 8.28781 10.1941 8.11161 10.0136 8.03682C9.83313 7.96204 9.62527 8.00326 9.48703 8.1414L7.14159 10.4856C6.95289 10.6743 6.95279 10.9801 7.14139 11.1688L9.48562 13.5143C9.57802 13.6068 9.70166 13.656 9.8274 13.656C9.88962 13.656 9.95233 13.6439 10.012 13.6192C10.1926 13.5445 10.3103 13.3684 10.3104 13.173L10.3109 11.3382C12.4041 11.5783 14.0352 13.3606 14.0352 15.517C14.0352 15.7839 14.2515 16.0002 14.5183 16.0002C14.7851 16.0002 15.0014 15.7839 15.0014 15.517C15.0014 12.8275 12.938 10.6111 10.3111 10.3669Z\"\r\n      fill=\"#FFFFFF\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Reply;\r\n","import { Fragment } from \"react\";\r\nimport { Dialog, DialogContent, TextField, Box } from \"@mui/material\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport {\r\n  StaticDateRangePicker,\r\n  LocalizationProvider,\r\n} from \"@mui/x-date-pickers-pro\";\r\nimport { MuiTextFieldProps } from \"@mui/x-date-pickers/internals\";\r\n\r\nimport { RangePopUpProps } from \"./types\";\r\n\r\nconst RangePopUp = ({\r\n  open,\r\n  closeDialog,\r\n  range,\r\n  setRange,\r\n  wrapper = \"mobile\",\r\n}: RangePopUpProps) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={(\r\n        _event: {},\r\n        reason: \"backdropClick\" | \"escapeKeyDown\" | \"closeButtonClick\"\r\n      ) => closeDialog(reason)}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogContent\r\n        sx={{\r\n          \"& .MuiPickerStaticWrapper-content\": {\r\n            \"& > div\": {\r\n              \"& > div:first-of-type\": {\r\n                display: \"none\",\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <StaticDateRangePicker\r\n            displayStaticWrapperAs={wrapper}\r\n            value={range}\r\n            onChange={(newValue: any) => {\r\n              setRange(newValue);\r\n              const [selectedStart, selectedEnd] = newValue;\r\n              selectedStart !== null &&\r\n                selectedEnd !== null &&\r\n                closeDialog(\"closeButtonClick\");\r\n            }}\r\n            maxDate={new Date()}\r\n            minDate={new Date(\"2021-01-01\")}\r\n            renderInput={(\r\n              startProps: MuiTextFieldProps,\r\n              endProps: MuiTextFieldProps\r\n            ) => (\r\n              <Fragment>\r\n                <TextField {...startProps} />\r\n                <Box sx={{ mx: 2 }}> to </Box>\r\n                <TextField {...endProps} />\r\n              </Fragment>\r\n            )}\r\n          />\r\n        </LocalizationProvider>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RangePopUp;\r\n","import { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { Card, CardContent, Link, Skeleton } from \"@mui/material\";\r\nimport { DateRange } from \"@mui/lab\";\r\nimport moment from \"moment\";\r\n\r\nimport WAUsageApi from \"Apis/WAUsageApi\";\r\nimport {\r\n  CardContentSX,\r\n  CardHeader,\r\n  CardHeading,\r\n  CardSX,\r\n  GrowColumn,\r\n  PeriodLabel,\r\n  ShrinkColumn,\r\n  UsageBlock,\r\n  UsageBlocks,\r\n  UsageBody,\r\n  UsageHeader,\r\n  UsageTitle,\r\n  UsageUnit,\r\n  UsageValue,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useGlobal } from \"Contexts/App\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { Business, Customer, Reply } from \"Assets/Icons\";\r\n\r\nimport { UtilizationPeriods } from \"./enums\";\r\nimport RangePopUp from \"./RangePopUp\";\r\n\r\nconst Utilization = ({ loadingStatus }: { loadingStatus: boolean }) => {\r\n  const { isMobile } = useGlobal();\r\n  const { setErrorMessage } = useSnacks();\r\n  const { TODAY, CUSTOM } = UtilizationPeriods;\r\n  const [loadingUsage, setLoadingUsage] = useState<boolean>(true);\r\n  const [cis, setCIS] = useState<number>(0);\r\n  const [bis, setBIS] = useState<number>(0);\r\n  const [average, setAverage] = useState<number>(0);\r\n  const [period, setPeriod] = useState<UtilizationPeriods>(TODAY);\r\n  const [rangePicker, toggleRangePicker] = useState<boolean>(false);\r\n  const [range, setRange] = useState<DateRange<Date>>([null, null]);\r\n  const [startDate, endDate] = range;\r\n  const openRangePicker = () => {\r\n    setRange([null, null]);\r\n    toggleRangePicker(true);\r\n    setTimeout(() => {\r\n      console.clear();\r\n    }, 100);\r\n  };\r\n  const closeRangePicker = (reason: string) => {\r\n    if (reason === \"escapeKeyDown\" || reason === \"backdropClick\") {\r\n      setPeriod(TODAY);\r\n    } else {\r\n      setPeriod(CUSTOM);\r\n    }\r\n    toggleRangePicker(false);\r\n  };\r\n  const getRangeUtilization = useCallback(async () => {\r\n    try {\r\n      const from =\r\n        period === CUSTOM && startDate\r\n          ? startDate\r\n          : period === TODAY\r\n          ? new Date()\r\n          : null;\r\n      const to =\r\n        period === CUSTOM && endDate\r\n          ? endDate\r\n          : period === TODAY\r\n          ? new Date()\r\n          : null;\r\n      from && from.setHours(0, 0, 0, 0);\r\n      to && to.setHours(23, 59, 59, 999);\r\n      if (from && to) {\r\n        setLoadingUsage(true);\r\n        const res = await WAUsageApi.getRangeUtilization(from, to);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setCIS(res.payload.cis);\r\n        setBIS(res.payload.bis);\r\n        setAverage(res.payload.replyRate);\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setLoadingUsage(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [period, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    getRangeUtilization();\r\n  }, [getRangeUtilization]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card elevation={0} sx={CardSX}>\r\n        <CardContent sx={CardContentSX}>\r\n          <CardHeader sx={{ mb: { xs: 1.875, sm: 3.75 } }}>\r\n            <GrowColumn\r\n              sx={{\r\n                alignItems: \"baseline\",\r\n                display: \"flex\",\r\n                flexDirection: { xs: \"column\", lg: \"row\" },\r\n                gap: 0.625,\r\n              }}\r\n            >\r\n              <CardHeading sx={{ mb: 0 }}>\r\n                {!loadingStatus ? \"Utilization\" : <Skeleton width={90} />}\r\n              </CardHeading>\r\n              {period === \"TODAY\" && (\r\n                <PeriodLabel>{moment().format(\"Do MMM YYYY\")}</PeriodLabel>\r\n              )}\r\n              {period === \"CUSTOM\" && startDate && endDate && (\r\n                <PeriodLabel>\r\n                  {moment(startDate).format(\"Do MMM YYYY\")}\r\n                  {` to `}\r\n                  {moment(endDate).format(\"Do MMM YYYY\")}\r\n                </PeriodLabel>\r\n              )}\r\n            </GrowColumn>\r\n            <ShrinkColumn\r\n              sx={{ display: \"flex\", alignItems: \"center\", gap: 1.75 }}\r\n            >\r\n              <Link\r\n                component=\"button\"\r\n                underline=\"none\"\r\n                onClick={() => {\r\n                  setPeriod(TODAY);\r\n                  setRange([null, null]);\r\n                }}\r\n                sx={{\r\n                  color: \"#82858B\",\r\n                  fontSize: 12,\r\n                  fontWeight: 500,\r\n                  lineHeight: \"12px\",\r\n                  borderBottom:\r\n                    period === TODAY\r\n                      ? \"2px solid #12B0EE\"\r\n                      : \"2px solid transparent\",\r\n                }}\r\n              >\r\n                {\"TODAY\"}\r\n              </Link>\r\n              <Link\r\n                className={`change-period ${\r\n                  period === \"CUSTOM\" ? \"active\" : \"\"\r\n                }`}\r\n                component=\"button\"\r\n                underline=\"none\"\r\n                onClick={() => openRangePicker()}\r\n                sx={{\r\n                  color: \"#82858B\",\r\n                  fontSize: 12,\r\n                  fontWeight: 500,\r\n                  lineHeight: \"12px\",\r\n                  borderBottom:\r\n                    period === CUSTOM\r\n                      ? \"2px solid #12B0EE\"\r\n                      : \"2px solid transparent\",\r\n                }}\r\n              >\r\n                {\"CUSTOM\"}\r\n              </Link>\r\n            </ShrinkColumn>\r\n          </CardHeader>\r\n          <UsageBlocks\r\n            sx={{\r\n              py: { xs: 0, sm: 2.5 },\r\n              px: { xs: 2.5 },\r\n              mt: { lg: -2.5 },\r\n              mx: { lg: -2.5 },\r\n              flexDirection: { xs: \"column\", lg: \"row\" },\r\n            }}\r\n          >\r\n            <UsageBlock>\r\n              <UsageHeader>\r\n                <UsageTitle>{\"Customer Initiated Sessions\"}</UsageTitle>\r\n                <Customer />\r\n              </UsageHeader>\r\n              <UsageBody>\r\n                <UsageValue>{loadingUsage ? <Skeleton /> : cis}</UsageValue>\r\n                <UsageUnit>\r\n                  {loadingUsage ? <Skeleton /> : \"Sessions\"}\r\n                </UsageUnit>\r\n              </UsageBody>\r\n            </UsageBlock>\r\n            <UsageBlock>\r\n              <UsageHeader>\r\n                <UsageTitle>{\"Business Initiated Sessions\"}</UsageTitle>\r\n                <Business />\r\n              </UsageHeader>\r\n              <UsageBody>\r\n                <UsageValue>{loadingUsage ? <Skeleton /> : bis}</UsageValue>\r\n                <UsageUnit>\r\n                  {loadingUsage ? <Skeleton /> : \"Sessions\"}\r\n                </UsageUnit>\r\n              </UsageBody>\r\n            </UsageBlock>\r\n            <UsageBlock>\r\n              <UsageHeader>\r\n                <UsageTitle>\r\n                  {\"Business Initiated Sessions - Reply %\"}\r\n                </UsageTitle>\r\n                <Reply />\r\n              </UsageHeader>\r\n              <UsageBody>\r\n                <UsageValue>{loadingUsage ? <Skeleton /> : average}</UsageValue>\r\n              </UsageBody>\r\n            </UsageBlock>\r\n          </UsageBlocks>\r\n        </CardContent>\r\n      </Card>\r\n      <RangePopUp\r\n        open={rangePicker}\r\n        closeDialog={closeRangePicker}\r\n        range={range}\r\n        setRange={setRange}\r\n        wrapper={isMobile ? \"mobile\" : \"desktop\"}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Utilization;\r\n","import { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nimport WAUsageApi from \"Apis/WAUsageApi\";\r\nimport { useGlobal } from \"Contexts/App\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { AppLink } from \"Components/Common\";\r\nimport {\r\n  Content,\r\n  ContentHeader,\r\n  ContentInner,\r\n  ContentWrapper,\r\n  HeaderTitle,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport LiveStatus from \"./WAUsageReports/LiveStatus\";\r\nimport OffStatus from \"./WAUsageReports/OffStatus\";\r\nimport UtilizationReport from \"./WAUsageReports/UtilizationReport\";\r\nimport Utilization from \"./WAUsageReports/Utilization\";\r\n\r\nconst WAUsageReports = () => {\r\n  const { isMobile } = useGlobal();\r\n  const { setErrorMessage } = useSnacks();\r\n  const [loadingStatus, setLoadingStatus] = useState<boolean>(true);\r\n  const [waStatus, setWaStatus] = useState<boolean>(false);\r\n  const getWaStatus = useCallback(async () => {\r\n    try {\r\n      const res = await WAUsageApi.getWaStatus();\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      }\r\n      setWaStatus(res.success);\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setLoadingStatus(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getWaStatus();\r\n  }, [getWaStatus]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Usage and Reports</title>\r\n      </Helmet>\r\n      <Content>\r\n        {isMobile && (\r\n          <ContentHeader>\r\n            <IconButton\r\n              component={AppLink}\r\n              to=\"/business-settings\"\r\n              sx={{ width: 32, height: 32 }}\r\n            >\r\n              <LeftArrow />\r\n            </IconButton>\r\n            <HeaderTitle>Usage and Reports</HeaderTitle>\r\n          </ContentHeader>\r\n        )}\r\n        <ContentInner>\r\n          <ContentWrapper>\r\n            {!waStatus && !loadingStatus && <OffStatus />}\r\n            {waStatus && <LiveStatus loadingStatus={loadingStatus} />}\r\n            {waStatus && <Utilization loadingStatus={loadingStatus} />}\r\n            {waStatus && <UtilizationReport loadingStatus={loadingStatus} />}\r\n          </ContentWrapper>\r\n        </ContentInner>\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default WAUsageReports;\r\n","import WAUsageReports from \"Components/BusinessSettings/WAUsageReports\";\r\n\r\nconst WAUsageReportsPage = () => <WAUsageReports />;\r\n\r\nexport default WAUsageReportsPage;\r\n","export enum WATemplatesComponentType {\r\n  HEADER = \"HEADER\",\r\n  BODY = \"BODY\",\r\n  FOOTER = \"FOOTER\",\r\n  BUTTONS = \"BUTTONS\",\r\n}\r\n\r\nexport enum WATemplateStatus {\r\n  APPROVED = \"APPROVED\",\r\n  DRAFT = \"DRAFT\",\r\n  SUBMITTED = \"SUBMITTED\",\r\n}\r\n\r\nexport enum WATemplateStatusColor {\r\n  APPROVED = \"#25ba00\",\r\n  DRAFT = \"#ffad33\",\r\n  SUBMITTED = \"#04c4ee\",\r\n}\r\n\r\nexport class WaTiers {\r\n  static readonly TIER1 = new WaTiers(\r\n    \"TIER 1\",\r\n    1,\r\n    \"#FF8719\",\r\n    \"TIER 1 allows 1000 outgoing messages to be sent in 24hrs. To reach next tier send 1000 messages for consecutive 3 days.\"\r\n  );\r\n  static readonly TIER2 = new WaTiers(\r\n    \"TIER 2\",\r\n    2,\r\n    \"#32C5FF\",\r\n    \"TIER 1 allows 1000 outgoing messages to be sent in 24hrs. To reach next tier send 1000 messages for consecutive 3 days.\"\r\n  );\r\n  static readonly TIER3 = new WaTiers(\r\n    \"TIER 3\",\r\n    3,\r\n    \"#00CD39\",\r\n    \"TIER 1 allows 1000 outgoing messages to be sent in 24hrs. To reach next tier send 1000 messages for consecutive 3 days.\"\r\n  );\r\n\r\n  private constructor(\r\n    public readonly name: string,\r\n    public readonly size: number,\r\n    public readonly statusColor: string,\r\n    public readonly message: string\r\n  ) {}\r\n}\r\n\r\nexport class WaHealth {\r\n  static readonly GREY = new WaHealth(\"Unable to Connect\", \"#82868B\", \"GREY\");\r\n  static readonly RED = new WaHealth(\"Poor\", \"#E02020\", \"RED\");\r\n  static readonly ORANGE = new WaHealth(\"Moderate\", \"#FF8719\", \"ORANGE\");\r\n  static readonly GREEN = new WaHealth(\"Good\", \"#5ECF70\", \"GREEN\");\r\n\r\n  private constructor(\r\n    public readonly status: string,\r\n    public readonly statusColor: string,\r\n    public readonly health: string\r\n  ) {}\r\n}\r\n\r\nexport class WaConnection {\r\n  static readonly NotConnected = new WaConnection(\"not-connected\", \"#E02020\");\r\n  static readonly Connected = new WaConnection(\"connected\", \"#5ECF70\");\r\n\r\n  private constructor(\r\n    public readonly status: string,\r\n    public readonly statusColor: string\r\n  ) {}\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport function getRandomColor() {\r\n  var rgb = [];\r\n\r\n  for (var i = 0; i < 3; i++) {\r\n    rgb.push(Math.floor(Math.random() * 255));\r\n  }\r\n\r\n  return \"rgb(\" + rgb.join(\",\") + \", 0.5)\";\r\n}\r\n\r\nexport function secondsToHms(d: number) {\r\n  d = Number(d);\r\n  let h = Math.floor(d / 3600);\r\n  let m = Math.floor((d % 3600) / 60);\r\n  let s = Math.floor((d % 3600) % 60);\r\n\r\n  let hDisplay = h > 0 ? h + (h === 1 ? \" hour \" : \" hours \") : \"\";\r\n  let mDisplay = m > 0 ? m + (m === 1 ? \" minute \" : \" minutes \") : \"\";\r\n  let sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\";\r\n  return hDisplay + mDisplay + sDisplay;\r\n}\r\n\r\nexport const isBackDropOrEscapeKey = (reason: string) =>\r\n  reason === \"backdropClick\" || reason === \"escapeKeyDown\";\r\n\r\nexport const monthFormat = (month: string) => moment(month).format(\"MMM YYYY\");\r\n\r\nexport const formatFB_IGAccountsArray = (accounts: string[]): string[] => {\r\n  let withChangedFBAccounts: string[] = [];\r\n\r\n  if (accounts.includes(\"facebook\")) {\r\n    withChangedFBAccounts = accounts.filter((acc) => acc !== \"facebook\");\r\n  }\r\n\r\n  if (accounts.includes(\"instagram\")) {\r\n    withChangedFBAccounts = withChangedFBAccounts.filter(\r\n      (acc) => acc !== \"instagram\"\r\n    );\r\n  }\r\n\r\n  if (accounts.includes(\"facebook\") || accounts.includes(\"instagram\")) {\r\n    withChangedFBAccounts.unshift(\"facebook and instagram\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"facebook and instagram\") &&\r\n    !withChangedFBAccounts.includes(\"facebook and instagram\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"facebook and instagram\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"twitter\") &&\r\n    !withChangedFBAccounts.includes(\"twitter\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"twitter\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"linkedin\") &&\r\n    !withChangedFBAccounts.includes(\"linkedin\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"linkedin\");\r\n  }\r\n\r\n  return withChangedFBAccounts;\r\n};\r\n\r\nexport const userInitials = (name: string) => {\r\n  return {\r\n    children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\r\n  };\r\n};\r\n"],"names":["LeftArrow","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","AppLink","forwardRef","ref","to","className","children","rest","component","LinkBase","underline","color","WAUsageApi","getWaStatus","AuthenticatedReq","getWaHealthReport","getWaMonthlyReport","downloadWaMonthWiseReport","data","responseType","getRangeUtilization","from","getTime","UtilizationPeriods","loadingStatus","setErrorMessage","useSnacks","useState","tier","setTier","connection","setConnection","wAHealth","setWAHealth","TierLabel","cx","cy","r","size","statusColor","name","Skeleton","StatusLabel","health","fillRule","clipRule","status","ConnectionLabel","fetchHealthReport","useCallback","res","success","Error","message","payload","account_status","WaTiers","WaHealth","WaConnection","useEffect","Card","elevation","sx","CardSX","pb","CardContent","CardContentSX","margin","xs","sm","padding","pt","alignItems","display","flexDirection","justifyContent","rowGap","textAlign","CardMedia","image","alt","mx","Link","href","open","closeDialog","downloadReport","downloading","setDownloading","month","setMonth","Dialog","onClose","DialogTitle","DialogContent","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","views","openTo","label","minDate","Date","maxDate","value","onChange","renderInput","inputProps","params","TextField","helperText","moment","local","format","autoComplete","DialogActions","Button","disabled","onClick","setSuccessMessage","oldReports","setOldReports","loadingReport","setLoadingReport","monthlyReport","setMonthlyReport","date","url","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","toLocaleString","getFullYear","body","appendChild","style","click","parentNode","removeChild","fetchMonthlyReport","Fragment","TableContainer","Table","borderBottom","fontSize","lineHeight","fontWeight","opacity","backgroundColor","borderRadius","TableHead","TableRow","TableCell","align","TableBody","border","hover","length","colSpan","map","report","index","monthFormat","cis","bis","src","my","Customer","strokeLinecap","strokeLinejoin","Business","Reply","range","setRange","wrapper","_event","reason","maxWidth","AdapterDateFns","StaticDateRangePicker","displayStaticWrapperAs","newValue","selectedStart","selectedEnd","startProps","endProps","Box","isMobile","useGlobal","TODAY","CUSTOM","loadingUsage","setLoadingUsage","setCIS","setBIS","average","setAverage","period","setPeriod","rangePicker","toggleRangePicker","startDate","endDate","setHours","replyRate","mb","lg","gap","setTimeout","console","clear","py","px","mt","setLoadingStatus","waStatus","setWaStatus","IconButton","WATemplatesComponentType","WATemplateStatus","WATemplateStatusColor","TIER1","TIER2","TIER3","GREY","RED","ORANGE","GREEN","NotConnected","Connected","getRandomColor","rgb","i","push","Math","floor","random","join","secondsToHms","Number","h","m","s","isBackDropOrEscapeKey","formatFB_IGAccountsArray","accounts","withChangedFBAccounts","includes","filter","acc","unshift","userInitials","split"],"sourceRoot":""}