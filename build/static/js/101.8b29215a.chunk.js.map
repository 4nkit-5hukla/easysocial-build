{"version":3,"sources":["Pages/MyProfile/MyProfile.module.css","Components/MyProfile/ResetPasswordPage/ResetPasswordPage.module.css","Components/MyProfile/ResetPasswordPage/ResetPasswordPage.jsx","Pages/MyProfile/MyProfile.js"],"names":["module","exports","ResetPasswordPage","open","closePage","mobileNumber","useState","otp","value","required","type","placeholder","id","name","newPassword","readOnly","confirmPassword","userData","setUserData","isPasswordError","setPasswordError","useToastMessage","setSuccessMessage","setErrorMessage","disabled","setDisabled","setInfoMessage","toastMessage","counter","startTimer","resendOTP","setResendOTP","signInWithNumber","prevState","number","a","length","firebase","auth","signInWithPhoneNumber","window","recaptchaVerifier","confirmationResult","message","submitPhoneNumberAuthCode","cb","setPersistence","Auth","Persistence","NONE","confirm","then","result","token","user","_lat","userId","currentUser","uid","password","simpleEncrypt","enc","catch","error","useEffect","RecaptchaVerifier","size","callback","response","alert","useInterval","handleInput","event","inputIdentifier","updatedFormElement","updateObject","target","updatedOrderForm","validator","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","div","initial","opacity","x","y","pointerEvents","transition","duration","ease","variants","closed","animate","className","classes","Container","Modal2","close","title","Form","onSubmit","e","preventDefault","resetPassword","res","localStorage","setItem","sleep","signOut","Input","inputChangedHandler","maxLength","style","marginTop","HelperText","display","justifyContent","width","fontSize","cursor","onClick","clsx","ErrorText","UIButton","svgStyle","marginLeft","connect","state","dispatch","startLoading","actions","cancelLoading","err","fetchUserDetail","props","isNextPage","openNextPage","elementType","mobile","email","getUserProfileRef","useRef","current","getUserProfile","data","setToast","toast","success","key","undefined","formElementsArray","push","config","MyProfile","show","appearance","MyProfile_Form","updateUserProfile","map","formElement","Button","root","Change_Password_Btn"],"mappings":"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","file":"static/js/101.8b29215a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyProfile\":\"MyProfile_MyProfile__2rNog\",\"MyProfile_Form\":\"MyProfile_MyProfile_Form__3n5Yk\",\"Change_Password_Btn\":\"MyProfile_Change_Password_Btn__l2wCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ResetPasswordPage_Container__1oFa2\",\"Form\":\"ResetPasswordPage_Form__3Rchr\",\"HelperText\":\"ResetPasswordPage_HelperText__3BmFC\",\"ErrorText\":\"ResetPasswordPage_ErrorText__1fNUg\"};","import { motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ResetPasswordPage.module.css\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport Modal2 from \"../../UI/Modal2/Modal2\";\r\nimport UIButton from \"../../UI/UIButton/UIButton\";\r\nimport { useToastMessage } from \"../../../contexts/ToastMessageContext\";\r\nimport { useInterval } from \"../../../hooks/useInterval\";\r\nimport { sleep, updateObject } from \"../../../Shared/Utility\";\r\nimport clsx from \"clsx\";\r\nimport firebase from \"../../../firebase\";\r\nimport { resetPassword } from \"../../../api/Auth\";\r\nimport validator from \"validator\";\r\nimport { simpleEncrypt } from \"../../../Shared/encryptResponse\";\r\n\r\nconst ResetPasswordPage = ({ open, closePage, mobileNumber }) => {\r\n  const variants = {\r\n    open: { opacity: 1, x: \"0%\", y: \"0%\", pointerEvents: \"all\" },\r\n    closed: { opacity: 0, x: \"100%\", y: \"0%\", pointerEvents: \"none\" },\r\n  };\r\n\r\n  const [userData, setUserData] = useState({\r\n    otp: {\r\n      value: \"\",\r\n      required: true,\r\n      type: \"number\",\r\n      placeholder: \"OTP\",\r\n      id: 1,\r\n      name: \"otp\",\r\n    },\r\n    newPassword: {\r\n      value: \"\",\r\n      required: true,\r\n      type: \"password\",\r\n      placeholder: \"New Password\",\r\n      id: 2,\r\n      readOnly: true,\r\n      name: \"new-password\",\r\n    },\r\n    confirmPassword: {\r\n      value: \"\",\r\n      name: \"confirm-password\",\r\n      required: true,\r\n      type: \"password\",\r\n      placeholder: \"Confirm Password\",\r\n      id: 3,\r\n    },\r\n  });\r\n\r\n  const [isPasswordError, setPasswordError] = useState(\"\");\r\n\r\n  const {\r\n    setSuccessMessage,\r\n    setErrorMessage,\r\n    disabled,\r\n    setDisabled,\r\n    setInfoMessage,\r\n  } = useToastMessage();\r\n\r\n  const toastMessage = useToastMessage();\r\n\r\n  const [resendOTP, setResendOTP] = useState({\r\n    counter: 0,\r\n    disabled: false,\r\n    startTimer: false,\r\n  });\r\n\r\n  const startTimer = () => {\r\n    signInWithNumber(mobileNumber);\r\n\r\n    setResendOTP((prevState) => ({\r\n      ...prevState,\r\n      disabled: true,\r\n      counter: 30,\r\n      startTimer: true,\r\n    }));\r\n  };\r\n\r\n  const signInWithNumber = async (number) => {\r\n    number = `+91${number}`;\r\n\r\n    if (number.length <= 10) {\r\n      return;\r\n    }\r\n\r\n    setDisabled();\r\n\r\n    try {\r\n      const confirmationResult = await firebase\r\n        .auth()\r\n        .signInWithPhoneNumber(number, window.recaptchaVerifier);\r\n\r\n      window.confirmationResult = confirmationResult;\r\n\r\n      setSuccessMessage(\"OTP has been sent to your mobile number!\");\r\n    } catch (err) {\r\n      return setErrorMessage(err.message);\r\n    }\r\n  };\r\n\r\n  const submitPhoneNumberAuthCode = async (cb) => {\r\n    if (userData.otp.value.length < 6) {\r\n      return setErrorMessage(\"Please Enter OTP\");\r\n    }\r\n\r\n    setDisabled();\r\n\r\n    await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);\r\n\r\n    window.confirmationResult\r\n      .confirm(userData.otp.value)\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const user = result;\r\n        const token = user.user._lat;\r\n\r\n        const userId = firebase.auth().currentUser.uid;\r\n\r\n        cb &&\r\n          cb({\r\n            userId,\r\n            token,\r\n            password: simpleEncrypt(userData.confirmPassword.value).enc,\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        return setErrorMessage(error.message);\r\n      });\r\n  };\r\n\r\n  const authCaptchaVerifier = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"captcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: function (response) {\r\n          signInWithNumber(mobileNumber, toastMessage);\r\n        },\r\n        \"expired-callback\": function () {\r\n          // Response expired. Ask user to solve reCAPTCHA again.\r\n          // ...\r\n          alert(\"try again!\");\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const validatePassword = (value) => {\r\n    if (\r\n      validator.isStrongPassword(value, {\r\n        minLength: 8,\r\n        minLowercase: 1,\r\n        minUppercase: 1,\r\n        minNumbers: 1,\r\n        minSymbols: 1,\r\n      })\r\n    ) {\r\n      return setPasswordError(\"\");\r\n    } else {\r\n      if (value.length < 8) {\r\n        return setPasswordError(\"Password can't be less than 8 characters\");\r\n      } else {\r\n        return setPasswordError(\r\n          \"Password must contain a combination of Upper and Lowercase Character, Number and Special Character\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      authCaptchaVerifier(mobileNumber);\r\n\r\n      startTimer();\r\n    }\r\n  }, [open]);\r\n\r\n  useInterval(\r\n    () => {\r\n      setResendOTP((prevState) => ({\r\n        ...prevState,\r\n        disabled: prevState.counter > 0 ? true : false,\r\n        counter: prevState.counter - 1,\r\n        startTimer: prevState.counter > 0 ? true : false,\r\n      }));\r\n    },\r\n    resendOTP.counter >= 0 && resendOTP.startTimer ? 1000 : null\r\n  );\r\n\r\n  const handleInput = (event, inputIdentifier) => {\r\n    let updatedFormElement;\r\n\r\n    updatedFormElement = updateObject(userData[inputIdentifier], {\r\n      value: event.target.value,\r\n    });\r\n\r\n    const updatedOrderForm = updateObject(userData, {\r\n      [inputIdentifier]: updatedFormElement,\r\n    });\r\n\r\n    setUserData(updatedOrderForm);\r\n\r\n    if (inputIdentifier === \"confirmPassword\") {\r\n      if (userData.newPassword.value !== event.target.value) {\r\n        return setPasswordError(\r\n          \"Confirm Password must match with New Password\"\r\n        );\r\n      } else {\r\n        setPasswordError(\"\");\r\n\r\n        return validatePassword(event.target.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    submitPhoneNumberAuthCode(async ({ userId, token, password }) => {\r\n      try {\r\n        const res = await resetPassword({\r\n          userId,\r\n          token,\r\n          password: password,\r\n        });\r\n\r\n        if (res.error) {\r\n          return setErrorMessage(res.error);\r\n        }\r\n\r\n        localStorage.setItem(\"token\", res.token);\r\n\r\n        setSuccessMessage(\"You have Successfully changed your password\");\r\n\r\n        await sleep(555);\r\n\r\n        setInfoMessage(\"Wait, We are redirecting you to login page!\");\r\n\r\n        firebase.auth().signOut();\r\n\r\n        return window.open(\"/signout\", \"_self\");\r\n      } catch (err) {\r\n        return setErrorMessage(err.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, x: \"100%\", y: \"0%\", pointerEvents: \"none\" }}\r\n      transition={{ duration: 0.5, ease: [0.43, 0.13, 0.23, 0.96] }}\r\n      variants={variants}\r\n      animate={open ? \"open\" : \"closed\"}\r\n      className={classes.Container}\r\n    >\r\n      <Modal2 close={closePage} title=\"Change Password\" />\r\n\r\n      <form className={classes.Form} onSubmit={onFormSubmit}>\r\n        {/* OTP */}\r\n        <Input\r\n          type={userData.otp.type}\r\n          name={userData.otp.name}\r\n          value={userData.otp.value}\r\n          inputChangedHandler={handleInput}\r\n          required={userData.otp.required}\r\n          id={\"otp\"}\r\n          placeholder={userData.otp.placeholder}\r\n          maxLength={6}\r\n          minLength={6}\r\n          readOnly={false}\r\n        />\r\n\r\n        {/* helper text */}\r\n        <div\r\n          style={{ marginTop: \"-10px\" }}\r\n          className=\"d-flex justify-content-between \"\r\n        >\r\n          <p className={classes.HelperText}>sent on: {mobileNumber}</p>\r\n          <p\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              width: \"max-content\",\r\n              fontSize: \"15px\",\r\n              opacity: resendOTP.disabled ? 0.3 : 0.6,\r\n              pointerEvents: resendOTP.disabled ? \"none\" : \"all\",\r\n              cursor: resendOTP.disabled ? \"not-allowed\" : \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              startTimer();\r\n            }}\r\n          >\r\n            Resend OTP\r\n            {resendOTP.counter < 30 &&\r\n              resendOTP.counter > 0 &&\r\n              ` in ${resendOTP.counter}s`}\r\n          </p>\r\n        </div>\r\n\r\n        {/* New Password */}\r\n        <Input\r\n          type={userData.newPassword.type}\r\n          name=\"new-password\"\r\n          value={userData.newPassword.value}\r\n          inputChangedHandler={handleInput}\r\n          required={true}\r\n          id={\"newPassword\"}\r\n          placeholder={userData.newPassword.placeholder}\r\n        />\r\n\r\n        {/* Repeat password */}\r\n        <Input\r\n          type={userData.confirmPassword.type}\r\n          name={userData.confirmPassword.name}\r\n          value={userData.confirmPassword.value}\r\n          inputChangedHandler={handleInput}\r\n          required={true}\r\n          id={\"confirmPassword\"}\r\n          placeholder={userData.confirmPassword.placeholder}\r\n          readOnly={false}\r\n        />\r\n        {isPasswordError && isPasswordError.length > 0 && (\r\n          <div style={{ marginTop: \"-12px\" }}>\r\n            <p className={clsx(classes.HelperText, classes.ErrorText)}>\r\n              {isPasswordError}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <UIButton\r\n          disabled={disabled || isPasswordError}\r\n          type=\"submit\"\r\n          svgStyle={{ marginLeft: \"10px\" }}\r\n        >\r\n          Save New Password\r\n        </UIButton>\r\n      </form>\r\n      <div id=\"captcha-container\"></div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","import classes from \"./MyProfile.module.css\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport Modal2 from \"../../Components/UI/Modal2/Modal2\";\r\nimport { updateObject } from \"../../Shared/Utility\";\r\nimport Input from \"../../Components/UI/Input/Input\";\r\nimport UIButton from \"../../Components/UI/UIButton/UIButton\";\r\nimport { useEffect } from \"react\";\r\nimport { getUserProfile, updateUserProfile } from \"../../api/user\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Store/actions/index\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\nimport { CustomButtonToast } from \"../../Components/UI/Toasts/Toast\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ResetPasswordPage from \"../../Components/MyProfile/ResetPasswordPage/ResetPasswordPage\";\r\n\r\nconst MyProfile = (props) => {\r\n  const [isNextPage, openNextPage] = useState(false);\r\n\r\n  const [userData, setUserData] = useState({\r\n    name: {\r\n      value: \"\",\r\n      elementType: \"text\",\r\n      required: true,\r\n      type: \"text\",\r\n      placeholder: \"Name\",\r\n      id: 1,\r\n    },\r\n    mobile: {\r\n      value: \"\",\r\n      elementType: \"number\",\r\n      required: true,\r\n      type: \"number\",\r\n      placeholder: \"Mobile\",\r\n      id: 2,\r\n      maxLength: 10,\r\n      minLength: 10,\r\n      readOnly: true,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      elementType: \"email\",\r\n      required: true,\r\n      type: \"Email\",\r\n      placeholder: \"Email id\",\r\n      id: 3,\r\n    },\r\n  });\r\n\r\n  const getUserProfileRef = useRef(() => {});\r\n\r\n  getUserProfileRef.current = () => {\r\n    if (!props.user) {\r\n      props.startLoading();\r\n      return getUserProfile().then((data) => {\r\n        if (!data.error) {\r\n          for (let key in userData) {\r\n            if (data.data[key] !== undefined) {\r\n              setUserData((state) => ({\r\n                ...state,\r\n                [key]: {\r\n                  ...state[key],\r\n                  value: data.data[key],\r\n                },\r\n              }));\r\n            }\r\n          }\r\n          props.cancelLoading();\r\n        } else {\r\n          props.error(data.error);\r\n          setToast({\r\n            ...toast,\r\n            success: null,\r\n            error: data.error,\r\n            disabled: false,\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      for (let key in props.user) {\r\n        if (props.user[key] !== undefined) {\r\n          setUserData((state) => ({\r\n            ...state,\r\n            [key]: {\r\n              ...state[key],\r\n              value: props.user[key],\r\n            },\r\n          }));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [toast, setToast] = useState({\r\n    error: null,\r\n    success: null,\r\n    disabled: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUserProfileRef.current();\r\n  }, []);\r\n\r\n  const inputChangedHandler = (event, inputIdentifier) => {\r\n    let updatedFormElement;\r\n\r\n    updatedFormElement = updateObject(userData[inputIdentifier], {\r\n      value: event.target.value,\r\n    });\r\n\r\n    const updatedOrderForm = updateObject(userData, {\r\n      [inputIdentifier]: updatedFormElement,\r\n    });\r\n\r\n    setUserData(updatedOrderForm);\r\n  };\r\n\r\n  const formElementsArray = [];\r\n  for (let key in userData) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: userData[key],\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className={classes.MyProfile}>\r\n        <Modal2 title=\"My Profile\" />\r\n        <ToastProvider>\r\n          <CustomButtonToast\r\n            show={toast.error !== null || toast.success !== null}\r\n            appearance={\r\n              toast.error ? \"error\" : toast.success ? \"success\" : \"info\"\r\n            }\r\n            message={toast.error || toast.success}\r\n          />\r\n        </ToastProvider>\r\n        <div className={classes.MyProfile_Form}>\r\n          <form\r\n            onSubmit={(e) => {\r\n              setToast({\r\n                ...toast,\r\n                error: null,\r\n                success: null,\r\n                disabled: true,\r\n              });\r\n\r\n              e.preventDefault();\r\n\r\n              updateUserProfile({\r\n                number: `+91${userData.mobile.value}`,\r\n                email: userData.email.value,\r\n                name: userData.name.value,\r\n              })\r\n                .then((data) => {\r\n                  if (data.error) {\r\n                    setToast({\r\n                      ...toast,\r\n                      success: null,\r\n                      error: data.error,\r\n                      disabled: false,\r\n                    });\r\n                  } else {\r\n                    setToast({\r\n                      ...toast,\r\n                      success: data.message,\r\n                      error: null,\r\n                      disabled: false,\r\n                    });\r\n                    props.fetchUserDetail();\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  setToast({\r\n                    ...toast,\r\n                    success: null,\r\n                    error: err,\r\n                    disabled: false,\r\n                  });\r\n                });\r\n            }}\r\n          >\r\n            {formElementsArray.map((formElement) => {\r\n              return (\r\n                <Input\r\n                  key={formElement.id}\r\n                  type={formElement.config.elementType}\r\n                  name={formElement.config.type}\r\n                  value={formElement.config.value}\r\n                  inputChangedHandler={inputChangedHandler}\r\n                  required={formElement.config.required}\r\n                  id={formElement.id}\r\n                  placeholder={formElement.config.placeholder}\r\n                  maxLength={formElement.config.maxLength}\r\n                  minLength={formElement.config.minLength}\r\n                  readOnly={formElement.config.readOnly}\r\n                />\r\n              );\r\n            })}\r\n\r\n            <UIButton\r\n              disabled={toast.disabled}\r\n              svgStyle={{ marginLeft: \"10px\" }}\r\n            >\r\n              Save Changes\r\n            </UIButton>\r\n          </form>\r\n        </div>\r\n\r\n        <Button\r\n          classes={{ root: classes.Change_Password_Btn }}\r\n          onClick={() => openNextPage(true)}\r\n        >\r\n          Change your password &gt;\r\n        </Button>\r\n      </section>\r\n      <ResetPasswordPage\r\n        mobileNumber={userData.mobile.value}\r\n        open={isNextPage}\r\n        closePage={() => openNextPage(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch(actions.startLoading()),\r\n    cancelLoading: () => dispatch(actions.cancelLoading()),\r\n    error: (err) => dispatch(actions.error(err)),\r\n    fetchUserDetail: () => dispatch(actions.fetchUserDetail()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProfile);\r\n"],"sourceRoot":""}