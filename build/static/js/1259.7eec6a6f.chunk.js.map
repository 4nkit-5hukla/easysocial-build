{"version":3,"file":"static/js/1259.7eec6a6f.chunk.js","mappings":"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","sources":["Components/BusinessSettings/WATemplateMessages/WTMItem.tsx","Components/BusinessSettings/WATemplateMessages/WTMHeader.tsx","Components/BusinessSettings/WATemplateMessages/QrButtonCard.tsx","Components/BusinessSettings/WATemplateMessages/CtaButtonCard.tsx","Components/BusinessSettings/WATemplateMessages/WaTemplateForm.tsx","Components/BusinessSettings/WATemplateMessages/TemplatePreviewCard.tsx","Components/BusinessSettings/WATemplateMessages/WaTemplatePreview.tsx","Components/BusinessSettings/WATemplateMessages.tsx","Pages/BusinessSettings/WATemplateMessages.tsx","SharedComponents/FormComponents/FormIOSSwitch.tsx","SharedComponents/Switch/IOSSwitch.tsx","Shared/Enums/BusinessSettings.ts","Utils/index.ts"],"sourcesContent":["import { Fragment, MouseEvent, useState } from \"react\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n  Button,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n  Chip,\r\n} from \"@mui/material\";\r\nimport { MoreVert } from \"@mui/icons-material\";\r\n\r\nimport BusinessApi from \"Apis/BusinessApi\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { useSettingsApi } from \"Contexts/Business\";\r\nimport { WATemplateStatusColor } from \"Shared/Enums/BusinessSettings\";\r\nimport { WATemplateDataInterface } from \"Shared/Interfaces/Business/BusinessSettings\";\r\n\r\nconst LDFItem = ({\r\n  template_status,\r\n  name,\r\n  id,\r\n  description,\r\n}: WATemplateDataInterface) => {\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const {\r\n    setEditWaTemplateId,\r\n    setShowWaTemplateForm,\r\n    setPreviewWaTemplateId,\r\n    setShowWaTemplatePreview,\r\n  } = useSettingsApi();\r\n  // 3dot menu state\r\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\r\n  //dialog state for delete\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  //function for opening confirm box for delete\r\n  const handleClickOpen = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n  //function for closing confirm box for delete\r\n  const handleClickClose = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n  //function for opening 3 dot menu\r\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  //function for closing 3 dot menu\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const deleteWaTemplateMessage = async () => {\r\n    try {\r\n      const res = await BusinessApi.deleteWaTemplateMessage(id);\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      }\r\n      setSuccessMessage(res.message);\r\n      setTimeout(() => window.location.reload(), 1000);\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      handleClickClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ListItem component=\"div\" sx={{ px: { xs: 0, md: 2 } }}>\r\n        <ListItemText\r\n          primary={\r\n            <div className=\"primary-block\">\r\n              <h2 className={\"list-title\"}>{name}</h2>\r\n              <Chip\r\n                label={template_status}\r\n                size=\"small\"\r\n                sx={{\r\n                  bgcolor: WATemplateStatusColor[template_status],\r\n                  alignItems: \"center\",\r\n                  color: \"#ffffff\",\r\n                  borderRadius: 1,\r\n                  height: 20,\r\n\r\n                  \"& .MuiChip-label\": {\r\n                    px: 0.5,\r\n                    fontSize: 10,\r\n                    fontWeight: 900,\r\n                    lineHeight: \"12px\",\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          }\r\n          secondary={description}\r\n          sx={{\r\n            \"& .primary-block\": {\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              gap: 1.25,\r\n              marginBottom: 0.75,\r\n\r\n              \"& .list-title\": {\r\n                color: \"text.secondary\",\r\n                fontSize: 15,\r\n                fontWeight: 500,\r\n                lineHeight: \"18px\",\r\n              },\r\n            },\r\n\r\n            \"& .MuiListItemText-secondary\": {\r\n              color: \"text.secondary\",\r\n              fontSize: 12,\r\n              fontWeight: 400,\r\n              lineHeight: \"15px\",\r\n            },\r\n          }}\r\n        />\r\n        <ListItemIcon>\r\n          <IconButton\r\n            // disabled\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </ListItemIcon>\r\n      </ListItem>\r\n      {Boolean(anchorEl) && (\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n          keepMounted\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"Options\",\r\n          }}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          sx={{\r\n            \"& .MuiPaper-root\": { minWidth: 120 },\r\n          }}\r\n        >\r\n          {template_status === \"DRAFT\" && (\r\n            <MenuItem\r\n              onClick={() => {\r\n                setEditWaTemplateId(id);\r\n                setShowWaTemplateForm(true);\r\n                handleClose();\r\n              }}\r\n            >\r\n              {\"Edit\"}\r\n            </MenuItem>\r\n          )}\r\n          {(template_status === \"SUBMITTED\" ||\r\n            template_status === \"APPROVED\") && (\r\n            <MenuItem\r\n              onClick={() => {\r\n                setPreviewWaTemplateId(id);\r\n                setShowWaTemplatePreview(true);\r\n                handleClose();\r\n              }}\r\n            >\r\n              {\"Preview\"}\r\n            </MenuItem>\r\n          )}\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleClickOpen();\r\n              handleClose();\r\n            }}\r\n          >\r\n            {\"Delete\"}\r\n          </MenuItem>\r\n        </Menu>\r\n      )}\r\n      <Dialog\r\n        open={openConfirmDialog}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Delete\"}</DialogTitle>\r\n        <DialogContent>{\"Are you sure you want to delete?\"}</DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              handleClickClose();\r\n            }}\r\n          >\r\n            {\"Cancel\"}\r\n          </Button>\r\n          <Button\r\n            onClick={async () => {\r\n              await deleteWaTemplateMessage();\r\n            }}\r\n            autoFocus\r\n          >\r\n            {\"Delete\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LDFItem;\r\n","import { ChangeEvent, Dispatch, SetStateAction, useState } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Clear } from \"@mui/icons-material\";\r\n\r\nimport {\r\n  ActionButton,\r\n  SearchBlock,\r\n  SearchInput,\r\n  SearchWrapper,\r\n  TeamHead,\r\n  TeamHeadBottom,\r\n  TeamHeadBottomLeft,\r\n  TeamHeadBottomRight,\r\n  TeamHeadTitle,\r\n  TeamHeadTop,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { Search, Sync } from \"Assets/Icons\";\r\nimport BusinessApi from \"Apis/BusinessApi\";\r\nimport { useSettingsApi, useSettingsData } from \"Contexts/Business\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\n\r\nconst LDFHeader = ({\r\n  isSearchActive,\r\n  setSearchActive,\r\n}: {\r\n  isSearchActive: boolean;\r\n  setSearchActive: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const { totalWaTemplates } = useSettingsData();\r\n  const {\r\n    setWatFilter,\r\n    setShowWaTemplateForm,\r\n    setTotalWaTemplates,\r\n    setWaTemplatesData,\r\n  } = useSettingsApi();\r\n  const [isSyncing, setSyncing] = useState<boolean>(false);\r\n  const syncMessages = async () => {\r\n    try {\r\n      setSyncing(true);\r\n      const res = await BusinessApi.syncWaTemplateMessage();\r\n      if (res.success) {\r\n        const res1 = await BusinessApi.getWaTemplateMessages();\r\n        if (!res1.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setTotalWaTemplates(res1.payload.length);\r\n        setWaTemplatesData(res1.payload);\r\n        setSuccessMessage(res.message);\r\n      } else {\r\n        setErrorMessage(res.message);\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TeamHead>\r\n      <TeamHeadTop>\r\n        <ActionButton\r\n          disableIcon\r\n          type=\"button\"\r\n          onClick={() => setShowWaTemplateForm(true)}\r\n          sx={{ py: 0, px: 2, height: 36, mt: 0 }}\r\n        >\r\n          {\"New Template Message\"}\r\n        </ActionButton>\r\n      </TeamHeadTop>\r\n      <TeamHeadBottom>\r\n        {!isSearchActive && (\r\n          <TeamHeadBottomLeft>\r\n            <TeamHeadTitle>{`${totalWaTemplates} Template Messages`}</TeamHeadTitle>\r\n          </TeamHeadBottomLeft>\r\n        )}\r\n        <TeamHeadBottomRight>\r\n          {isSearchActive && (\r\n            <SearchWrapper>\r\n              <SearchBlock>\r\n                <IconButton\r\n                  disableTouchRipple\r\n                  disableFocusRipple\r\n                  disableRipple\r\n                  sx={{ position: \"absolute\" }}\r\n                >\r\n                  <Search />\r\n                </IconButton>\r\n                <SearchInput\r\n                  onChange={({\r\n                    target: { value },\r\n                  }: ChangeEvent<HTMLInputElement>) => setWatFilter(value)}\r\n                  placeholder=\"Search Template\"\r\n                />\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setWatFilter(\"\");\r\n                    setSearchActive(!isSearchActive);\r\n                  }}\r\n                  sx={{ position: \"absolute\", right: 0, top: 0 }}\r\n                >\r\n                  <Clear />\r\n                </IconButton>\r\n              </SearchBlock>\r\n            </SearchWrapper>\r\n          )}\r\n          {!isSearchActive && (\r\n            <IconButton\r\n              onClick={() => setSearchActive((prevState) => !prevState)}\r\n            >\r\n              <Search />\r\n            </IconButton>\r\n          )}\r\n          {!isSearchActive && (\r\n            <ActionButton\r\n              icon={<Sync color={isSyncing ? \"#00000042\" : \"#4D4D4D\"} />}\r\n              variant=\"outlined\"\r\n              type=\"button\"\r\n              disabled={isSyncing}\r\n              onClick={() => syncMessages()}\r\n              sx={{\r\n                alignSelf: \"center\",\r\n                borderRadius: 4,\r\n                borderColor: \"#0000003b\",\r\n                color: \"#000000de\",\r\n                flexDirection: \"row-reverse\",\r\n                fontSize: 14,\r\n                fontWeight: 400,\r\n                letterSpacing: \"0.02857em\",\r\n                lineHeight: \"16px\",\r\n                gap: 1,\r\n                height: 30,\r\n                py: 0.625,\r\n                px: 1.875,\r\n                textTransform: \"capitalize\",\r\n              }}\r\n            >\r\n              {isSyncing ? \"Syncing...\" : \"Sync Messages\"}\r\n            </ActionButton>\r\n          )}\r\n        </TeamHeadBottomRight>\r\n      </TeamHeadBottom>\r\n    </TeamHead>\r\n  );\r\n};\r\n\r\nexport default LDFHeader;\r\n","import { Card, CardHeader, IconButton } from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Control } from \"react-hook-form\";\r\n\r\nimport {\r\n  Field,\r\n  FormTextFieldSX,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport FormTextField from \"SharedComponents/FormComponents/FormTextField\";\r\n\r\ninterface QrButtonCardProps {\r\n  index: number;\r\n  control: Control<any, any>;\r\n  removeQuickReply: (index: number) => void;\r\n}\r\n\r\nconst QrButtonCard = ({\r\n  index,\r\n  control,\r\n  removeQuickReply,\r\n}: QrButtonCardProps) => {\r\n  return (\r\n    <Card\r\n      key={index}\r\n      sx={{\r\n        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n        borderRadius: 4,\r\n        boxShadow: \"0px 0px 20px 1px rgba(0, 0, 0, 0.1)\",\r\n        mb: 3,\r\n        p: 2,\r\n        pb: 3,\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <CardHeader\r\n        title={`Quick Reply ${index + 1}`}\r\n        action={\r\n          <IconButton\r\n            aria-label={`Remove Quick Reply ${index + 1}`}\r\n            onClick={() => removeQuickReply(index)}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        }\r\n        sx={{\r\n          p: 0,\r\n\r\n          \"& .MuiCardHeader-title\": {\r\n            fontSize: 16,\r\n            fontWeight: 500,\r\n            lineHeight: \"22px\",\r\n          },\r\n        }}\r\n      />\r\n      <Field sx={{ my: 2 }}>\r\n        <FormTextField\r\n          control={control}\r\n          name={`components[3].buttons[${index}].text`}\r\n          label=\"Label\"\r\n          required={true}\r\n          sx={FormTextFieldSX}\r\n        />\r\n      </Field>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QrButtonCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Card, CardHeader, IconButton, MenuItem } from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Control, UseFormSetValue } from \"react-hook-form\";\r\nimport { MuiTelInput, MuiTelInputCountry } from \"mui-tel-input\";\r\n\r\nimport {\r\n  Field,\r\n  FormSelectFieldSX,\r\n  FormTextFieldSX,\r\n  FieldWrapper,\r\n  VariableButton,\r\n  FieldLimiter,\r\n  FieldLimit,\r\n  FormTelFieldSX,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useGlobal } from \"Contexts/App\";\r\nimport { WATemplateButtonCtaType } from \"Shared/Interfaces/Business/BusinessSettings\";\r\nimport FormTextField from \"SharedComponents/FormComponents/FormTextField\";\r\n\r\ninterface CtaButtonCardProps {\r\n  index: number;\r\n  type: string;\r\n  url?: string;\r\n  phone_number?: string;\r\n  waTemplateButtonCtaTypes: WATemplateButtonCtaType[];\r\n  control: Control<any, any>;\r\n  setValue: UseFormSetValue<any>;\r\n  removeCallAction: (index: number) => void;\r\n}\r\n\r\nconst CtaButtonCard = ({\r\n  index,\r\n  type,\r\n  url,\r\n  phone_number,\r\n  waTemplateButtonCtaTypes,\r\n  control,\r\n  setValue,\r\n  removeCallAction,\r\n}: CtaButtonCardProps) => {\r\n  const { country } = useGlobal();\r\n  const variableRegX = /[{][{]\\d{1,3}[}][}]/gm;\r\n  const [ctaVariableCount, setCtaVariableCount] = useState<number>(0);\r\n  const addCtaVariable = () => {\r\n    if (ctaVariableCount === 1) {\r\n      return;\r\n    }\r\n    const newValue = `${url}{{${1}}}`;\r\n    setValue(`components[3].buttons[${index}].url`, newValue);\r\n    setCtaVariableCount(1);\r\n  };\r\n  const leftCtaVariable = useCallback(() => {\r\n    if (url) {\r\n      const matches = url.match(variableRegX);\r\n      if (matches && matches.length > 0) {\r\n        setCtaVariableCount(1);\r\n      } else {\r\n        setCtaVariableCount(0);\r\n      }\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    leftCtaVariable();\r\n  }, [leftCtaVariable]);\r\n\r\n  return (\r\n    <Card\r\n      key={index}\r\n      sx={{\r\n        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n        borderRadius: 4,\r\n        boxShadow: \"0px 0px 20px 1px rgba(0, 0, 0, 0.1)\",\r\n        mb: 3,\r\n        p: 2,\r\n        pb: 3,\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <CardHeader\r\n        title={`Call to Action ${index + 1}`}\r\n        action={\r\n          <IconButton\r\n            aria-label={`Remove Call to Action ${index + 1}`}\r\n            onClick={() => removeCallAction(index)}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        }\r\n        sx={{\r\n          p: 0,\r\n\r\n          \"& .MuiCardHeader-title\": {\r\n            fontSize: 16,\r\n            fontWeight: 500,\r\n            lineHeight: \"22px\",\r\n          },\r\n        }}\r\n      />\r\n      <Field sx={{ my: 2 }}>\r\n        <FormTextField\r\n          select\r\n          control={control}\r\n          label=\"Action Type\"\r\n          name={`components[3].buttons[${index}].type`}\r\n          sx={FormSelectFieldSX}\r\n          required={true}\r\n          defaultValue={type}\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            {\"Select Action Type\"}\r\n          </MenuItem>\r\n          {waTemplateButtonCtaTypes.map(({ value, name }, index) => (\r\n            <MenuItem key={index} value={value}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </FormTextField>\r\n      </Field>\r\n      {type !== \"\" && (\r\n        <Field sx={{ my: 2 }}>\r\n          <FormTextField\r\n            control={control}\r\n            name={`components[3].buttons[${index}].text`}\r\n            label=\"Label\"\r\n            required={true}\r\n            sx={FormTextFieldSX}\r\n          />\r\n        </Field>\r\n      )}\r\n      {type === \"PHONE_NUMBER\" && (\r\n        <Field sx={{ my: 2 }}>\r\n          <MuiTelInput\r\n            label={\"Phone\"}\r\n            placeholder={\"Phone\"}\r\n            required={true}\r\n            fullWidth={true}\r\n            defaultCountry={country as MuiTelInputCountry}\r\n            value={phone_number ?? \"\"}\r\n            onChange={(newValue: string) => {\r\n              setValue(\r\n                `components[3].buttons[${index}].phone_number`,\r\n                newValue.replaceAll(\" \", \"\")\r\n              );\r\n            }}\r\n            variant={\"filled\"}\r\n            sx={FormTelFieldSX}\r\n          />\r\n        </Field>\r\n      )}\r\n      {type === \"URL\" && (\r\n        <Field sx={{ my: 2 }}>\r\n          <FieldWrapper>\r\n            <FormTextField\r\n              control={control}\r\n              name={`components[3].buttons[${index}].url`}\r\n              label=\"URL\"\r\n              required={true}\r\n              sx={{ ...FormTextFieldSX, pb: 2, height: \"auto\" }}\r\n            />\r\n            <VariableButton\r\n              size=\"small\"\r\n              focusRipple={false}\r\n              className=\"add-variable\"\r\n              disabled={ctaVariableCount === 1}\r\n              onClick={addCtaVariable}\r\n            >\r\n              {\"ADD VARIABLE\"}\r\n            </VariableButton>\r\n          </FieldWrapper>\r\n          <FieldLimiter>\r\n            <FieldLimit>\r\n              {url ? url.length : 0}\r\n              {\"/60 Characters\"}\r\n            </FieldLimit>\r\n            <FieldLimit>\r\n              {ctaVariableCount}\r\n              {\"/1 Variable\"}\r\n            </FieldLimit>\r\n          </FieldLimiter>\r\n        </Field>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CtaButtonCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { ChangeEvent, Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { Drawer, IconButton, MenuItem, TextField } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport {\r\n  ActionArea,\r\n  ActionButton,\r\n  ContentHeader,\r\n  DrawerForm,\r\n  DrawerWrapper,\r\n  Field,\r\n  FieldLimit,\r\n  FieldLimiter,\r\n  FieldTitle,\r\n  FieldWrapper,\r\n  FlexRow,\r\n  FormSelectFieldSX,\r\n  FormTextAreaFieldSX,\r\n  FormTextFieldSX,\r\n  GrowColumn,\r\n  HeaderTitle,\r\n  ShrinkColumn,\r\n  VariableButton,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { isBackDropOrEscapeKey } from \"Utils\";\r\nimport { useGlobal } from \"Contexts/App\";\r\nimport { useSettingsApi, useSettingsData } from \"Contexts/Business\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport FormIOSSwitch from \"SharedComponents/FormComponents/FormIOSSwitch\";\r\nimport FormTextField from \"SharedComponents/FormComponents/FormTextField\";\r\nimport BusinessApi from \"Apis/BusinessApi\";\r\nimport {\r\n  WATemplateComponent,\r\n  WATemplateComponentButton,\r\n  WATemplateFormInterface,\r\n} from \"Shared/Interfaces/Business/BusinessSettings\";\r\nimport { WATemplatesComponentType } from \"Shared/Enums/BusinessSettings\";\r\n\r\nimport QrButtonCard from \"./QrButtonCard\";\r\nimport CtaButtonCard from \"./CtaButtonCard\";\r\n\r\ninterface WaTemplateFormProps {\r\n  open: boolean;\r\n  closeDrawer: () => void;\r\n}\r\n\r\nconst WaTemplateForm = ({ open, closeDrawer }: WaTemplateFormProps) => {\r\n  const variableRegX = /[{][{]\\d{1,3}[}][}]/gm;\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const { businessId } = useGlobal();\r\n  const {\r\n    editWaTemplateId,\r\n    waTemplatesData,\r\n    waTemplateCategories,\r\n    waTemplateLanguages,\r\n    waTemplateTypes,\r\n    waTemplateHeaderTypes,\r\n    waTemplateButtonTypes,\r\n    waTemplateButtonCtaTypes,\r\n  } = useSettingsData();\r\n  const { setWaTemplatesData, setShowWaPreviewForm, setPreviewWaTemplateId } =\r\n    useSettingsApi();\r\n  const formDefault: WATemplateFormInterface | any = {\r\n    name: \"\",\r\n    category: \"\",\r\n    language: \"\",\r\n    template_type: \"\",\r\n    businessId: businessId,\r\n    components: [\r\n      {\r\n        format: \"\",\r\n        text: \"\",\r\n        type: WATemplatesComponentType.HEADER,\r\n        active: false,\r\n      },\r\n      {\r\n        text: \"\",\r\n        type: WATemplatesComponentType.BODY,\r\n      },\r\n      {\r\n        text: \"\",\r\n        type: WATemplatesComponentType.FOOTER,\r\n        active: false,\r\n      },\r\n      {\r\n        buttons: [],\r\n        type: WATemplatesComponentType.BUTTONS,\r\n        active: false,\r\n      },\r\n    ],\r\n  };\r\n  const { control, handleSubmit, watch, reset, setValue } = useForm<\r\n    WATemplateFormInterface | any\r\n  >({\r\n    defaultValues: formDefault,\r\n  });\r\n  const { name, category, language, template_type, components } = watch();\r\n  const HEADER = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.HEADER\r\n  );\r\n  const BODY = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.BODY\r\n  );\r\n  const FOOTER = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.FOOTER\r\n  );\r\n  const BUTTONS = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.BUTTONS\r\n  );\r\n  const [headerVariableCount, setHeaderVariableCount] = useState<number>(0);\r\n  const [templateButtonType, setTemplateButtonType] = useState<string>(\"\");\r\n  const fixTemplateName = useCallback(() => {\r\n    const matches = name.match(/^[A-Za-z0-9_]+$/g);\r\n    const fixedValue =\r\n      matches === null\r\n        ? name.slice(0, -1)\r\n        : name.replace(/\\s/g, \"\").toLowerCase();\r\n    setValue(\"name\", fixedValue);\r\n  }, [name]);\r\n  const addHeaderVariable = () => {\r\n    if (headerVariableCount === 1) {\r\n      return;\r\n    }\r\n    const newValue = `${HEADER.text}{{${1}}}`;\r\n    setValue(\"components[0].text\", newValue);\r\n    setHeaderVariableCount(1);\r\n  };\r\n  const addBodyVariable = () => {\r\n    const matches = BODY.text.match(variableRegX);\r\n    const newValue =\r\n      matches && matches.length > 0\r\n        ? `${BODY.text}{{${matches.length + 1}}}`\r\n        : `${BODY.text}{{${1}}}`;\r\n    setValue(\"components[1].text\", newValue);\r\n  };\r\n  const leftHeaderVariable = useCallback(() => {\r\n    const matches = HEADER.text.match(variableRegX);\r\n    if (matches && matches.length > 0) {\r\n      setHeaderVariableCount(1);\r\n    } else {\r\n      setHeaderVariableCount(0);\r\n    }\r\n  }, [HEADER.text]);\r\n  const fixHeaderVariable = useCallback(() => {\r\n    const matches = HEADER.text.match(variableRegX);\r\n    if (matches === null) {\r\n      setHeaderVariableCount(0);\r\n      return;\r\n    }\r\n    if (matches.length === 0) {\r\n      setHeaderVariableCount(0);\r\n      return;\r\n    }\r\n    setValue(\r\n      \"components[0].text\",\r\n      matches.reduce(\r\n        (accumulator: string, currentValue: string, index: number) =>\r\n          index === 0\r\n            ? accumulator.replace(currentValue, `{{${index + 1}}}`)\r\n            : accumulator.replace(currentValue, ``),\r\n        matches.reduce(\r\n          (accumulator: string, currentValue: string, index: number) =>\r\n            accumulator.replace(currentValue, `{{${index + 1}}}`),\r\n          HEADER.text\r\n        )\r\n      )\r\n    );\r\n    setHeaderVariableCount(1);\r\n  }, [HEADER.text]);\r\n  const fixBodyVariable = () => {\r\n    const matches = BODY.text.match(variableRegX);\r\n    if (matches === null) {\r\n      return;\r\n    }\r\n    if (matches.length === 0) {\r\n      return;\r\n    }\r\n    setValue(\r\n      \"components[1].text\",\r\n      matches.reduce(\r\n        (accumulator: string, currentValue: string, index: number) =>\r\n          accumulator.replace(currentValue, `{{${index + 1}}}`),\r\n        BODY.text\r\n      )\r\n    );\r\n  };\r\n  const changeTemplateButtonType = (\r\n    event: ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    setTemplateButtonType(event.target.value);\r\n  };\r\n  const addButton = () => {\r\n    if (templateButtonType === \"\") {\r\n      setErrorMessage(\"Please Select button Type\");\r\n    }\r\n    if (templateButtonType === \"QUICK_REPLY\") {\r\n      if (BUTTONS.buttons.length < 3) {\r\n        const QUICK_REPLY_BUTTONS = BUTTONS.buttons;\r\n        QUICK_REPLY_BUTTONS.push({\r\n          type: \"QUICK_REPLY\",\r\n          text: \"\",\r\n        });\r\n        setValue(\"components[3].buttons\", QUICK_REPLY_BUTTONS);\r\n      } else {\r\n        setErrorMessage(\"Limit exceeded\");\r\n      }\r\n    }\r\n    if (templateButtonType === \"CALL_TO_ACTION\") {\r\n      if (BUTTONS.buttons.length < 2) {\r\n        const CALL_TO_ACTION_BUTTONS = BUTTONS.buttons;\r\n        CALL_TO_ACTION_BUTTONS.push({\r\n          type: \"\",\r\n          text: \"\",\r\n        });\r\n        setValue(\"components[3].buttons\", CALL_TO_ACTION_BUTTONS);\r\n      } else {\r\n        setErrorMessage(\"Limit exceeded\");\r\n      }\r\n    }\r\n  };\r\n  const removeQuickReply = (index: number) => {\r\n    const QUICK_REPLY_BUTTONS = BUTTONS.buttons;\r\n    QUICK_REPLY_BUTTONS.splice(index, 1);\r\n    setValue(\"components[3].buttons\", QUICK_REPLY_BUTTONS);\r\n  };\r\n  const removeCallAction = (index: number) => {\r\n    const CALL_TO_ACTION_BUTTONS = BUTTONS.buttons;\r\n    CALL_TO_ACTION_BUTTONS.splice(index, 1);\r\n    setValue(\"components[3].buttons\", CALL_TO_ACTION_BUTTONS);\r\n  };\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      if (editWaTemplateId) {\r\n        const res = await BusinessApi.updateWaTemplateMessage(\r\n          editWaTemplateId,\r\n          data\r\n        );\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setSuccessMessage(res.message);\r\n        setPreviewWaTemplateId(res.payload.id ?? editWaTemplateId);\r\n        reset(formDefault);\r\n        closeDrawer();\r\n        setShowWaPreviewForm(true);\r\n      } else {\r\n        const res = await BusinessApi.createWaTemplateMessage(data);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setSuccessMessage(res.message);\r\n        setWaTemplatesData([res.payload, ...waTemplatesData]);\r\n        setPreviewWaTemplateId(res.payload.id);\r\n        reset(formDefault);\r\n        closeDrawer();\r\n        setShowWaPreviewForm(true);\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n  const fetchWaTemplateMessage = useCallback(\r\n    async () => {\r\n      try {\r\n        if (editWaTemplateId) {\r\n          const res = await BusinessApi.getWaTemplateMessage(editWaTemplateId);\r\n          if (!res.success) {\r\n            throw Error(res.message);\r\n          }\r\n          reset(res.payload);\r\n          res.payload.components[0].format !== \"\" &&\r\n            setValue(\"components[0].active\", true);\r\n          res.payload.components[2].text !== \"\" &&\r\n            setValue(\"components[2].active\", true);\r\n          res.payload.components[3].buttons.length > 0 &&\r\n            setValue(\"components[3].active\", true);\r\n          if (res.payload.components[3].buttons[0]) {\r\n            if (res.payload.components[3].buttons[0].type === \"QUICK_REPLY\") {\r\n              setTemplateButtonType(\"QUICK_REPLY\");\r\n            } else if (\r\n              res.payload.components[3].buttons[0].type === \"URL\" ||\r\n              res.payload.components[3].buttons[0].type === \"PHONE_NUMBER\"\r\n            ) {\r\n              setTemplateButtonType(\"CALL_TO_ACTION\");\r\n            }\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        setErrorMessage(error.message);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [editWaTemplateId]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchWaTemplateMessage();\r\n  }, [fetchWaTemplateMessage]);\r\n\r\n  useEffect(() => {\r\n    fixTemplateName();\r\n  }, [fixTemplateName]);\r\n\r\n  useEffect(() => {\r\n    fixHeaderVariable();\r\n  }, [fixHeaderVariable]);\r\n\r\n  useEffect(() => {\r\n    leftHeaderVariable();\r\n  }, [leftHeaderVariable]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={\"right\"}\r\n      open={open}\r\n      onClose={(_, reason) => {\r\n        if (!isBackDropOrEscapeKey(reason)) {\r\n          reset(formDefault);\r\n          closeDrawer();\r\n        }\r\n      }}\r\n      sx={{ zIndex: \"modal\" }}\r\n    >\r\n      <DrawerWrapper sx={{ width: { xs: \"100vw\", md: 360 } }}>\r\n        <ContentHeader>\r\n          <IconButton\r\n            onClick={() => {\r\n              reset(formDefault);\r\n              closeDrawer();\r\n            }}\r\n            sx={{ width: 32, height: 32 }}\r\n          >\r\n            <LeftArrow />\r\n          </IconButton>\r\n          <HeaderTitle>\r\n            {`${editWaTemplateId ? \"Update\" : \"Create New\"} Template`}\r\n          </HeaderTitle>\r\n        </ContentHeader>\r\n        <DrawerForm\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          onReset={() => {\r\n            reset(formDefault);\r\n            closeDrawer();\r\n          }}\r\n        >\r\n          <FlexRow>\r\n            <GrowColumn>\r\n              <Field>\r\n                <FormTextField\r\n                  control={control}\r\n                  name=\"name\"\r\n                  label=\"Template Name\"\r\n                  placeholder=\"Template Name\"\r\n                  required={true}\r\n                  sx={FormTextFieldSX}\r\n                />\r\n              </Field>\r\n              <Field>\r\n                <FormTextField\r\n                  select\r\n                  control={control}\r\n                  label=\"Template Category\"\r\n                  name=\"category\"\r\n                  sx={FormSelectFieldSX}\r\n                  required={true}\r\n                  defaultValue={category}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    {\"Select Template Category\"}\r\n                  </MenuItem>\r\n                  {waTemplateCategories.map(({ value, name }, index) => (\r\n                    <MenuItem key={index} value={value}>\r\n                      {name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </FormTextField>\r\n              </Field>\r\n              <Field>\r\n                <FormTextField\r\n                  select\r\n                  control={control}\r\n                  label=\"Language\"\r\n                  name=\"language\"\r\n                  sx={FormSelectFieldSX}\r\n                  required={true}\r\n                  defaultValue={language}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    {\"Select Language\"}\r\n                  </MenuItem>\r\n                  {waTemplateLanguages.map(({ code, name }, index) => (\r\n                    <MenuItem key={index} value={code}>\r\n                      {name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </FormTextField>\r\n              </Field>\r\n              <Field>\r\n                <FormTextField\r\n                  select\r\n                  control={control}\r\n                  label=\"Template Type\"\r\n                  name=\"template_type\"\r\n                  sx={FormSelectFieldSX}\r\n                  required={true}\r\n                  defaultValue={template_type}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    {\"Select Template Type\"}\r\n                  </MenuItem>\r\n                  {waTemplateTypes.map(({ value, label }, index) => (\r\n                    <MenuItem key={index} value={value}>\r\n                      {label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </FormTextField>\r\n              </Field>\r\n              {template_type === \"media\" && (\r\n                <Field>\r\n                  <FlexRow sx={{ justifyContent: \"space-between\" }}>\r\n                    <GrowColumn>\r\n                      <FieldTitle>{\"Header\"}</FieldTitle>\r\n                    </GrowColumn>\r\n                    <FormIOSSwitch\r\n                      control={control}\r\n                      name={\"components[0].active\"}\r\n                    />\r\n                  </FlexRow>\r\n                </Field>\r\n              )}\r\n              {template_type === \"media\" && HEADER.active && (\r\n                <Field>\r\n                  <FormTextField\r\n                    select\r\n                    control={control}\r\n                    label=\"Header Type\"\r\n                    name=\"components[0].format\"\r\n                    sx={FormSelectFieldSX}\r\n                    required={true}\r\n                    defaultValue={HEADER.format}\r\n                  >\r\n                    <MenuItem value=\"\" disabled>\r\n                      {\"Select Header Type\"}\r\n                    </MenuItem>\r\n                    {waTemplateHeaderTypes.map(({ value, name }, index) => (\r\n                      <MenuItem key={index} value={value}>\r\n                        {name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </FormTextField>\r\n                </Field>\r\n              )}\r\n              {template_type === \"media\" &&\r\n                HEADER.active &&\r\n                HEADER.format === \"TEXT\" && (\r\n                  <Field>\r\n                    <FieldWrapper>\r\n                      <FormTextField\r\n                        control={control}\r\n                        rows={5}\r\n                        multiline\r\n                        name=\"components[0].text\"\r\n                        placeholder=\"Message\"\r\n                        required={true}\r\n                        inputProps={{\r\n                          maxLength: 60,\r\n                        }}\r\n                        sx={FormTextAreaFieldSX}\r\n                      />\r\n                      <VariableButton\r\n                        size=\"small\"\r\n                        focusRipple={false}\r\n                        className=\"add-variable\"\r\n                        disabled={headerVariableCount === 1}\r\n                        onClick={addHeaderVariable}\r\n                      >\r\n                        {\"ADD VARIABLE\"}\r\n                      </VariableButton>\r\n                    </FieldWrapper>\r\n                    <FieldLimiter>\r\n                      <FieldLimit>\r\n                        {HEADER.text.length}\r\n                        {\"/60 Characters\"}\r\n                      </FieldLimit>\r\n                      <FieldLimit>\r\n                        {headerVariableCount}\r\n                        {\"/1 Variable\"}\r\n                      </FieldLimit>\r\n                    </FieldLimiter>\r\n                  </Field>\r\n                )}\r\n              {template_type !== \"\" && (\r\n                <Field>\r\n                  <FieldTitle>{\"Body\"}</FieldTitle>\r\n                </Field>\r\n              )}\r\n              {template_type !== \"\" && (\r\n                <Field>\r\n                  <FieldWrapper>\r\n                    <FormTextField\r\n                      control={control}\r\n                      rows={5}\r\n                      multiline\r\n                      name=\"components[1].text\"\r\n                      placeholder=\"Message\"\r\n                      required={true}\r\n                      onBlur={fixBodyVariable}\r\n                      inputProps={{\r\n                        maxLength: 1024,\r\n                      }}\r\n                      sx={FormTextAreaFieldSX}\r\n                    />\r\n                    <VariableButton\r\n                      size=\"small\"\r\n                      focusRipple={false}\r\n                      className=\"add-variable\"\r\n                      onClick={addBodyVariable}\r\n                    >\r\n                      {\"ADD VARIABLE\"}\r\n                    </VariableButton>\r\n                  </FieldWrapper>\r\n                  <FieldLimiter>\r\n                    <FieldLimit>\r\n                      {BODY.text.length}\r\n                      {\"/1024 Characters\"}\r\n                    </FieldLimit>\r\n                  </FieldLimiter>\r\n                </Field>\r\n              )}\r\n              {template_type === \"media\" && (\r\n                <Field>\r\n                  <FlexRow sx={{ justifyContent: \"space-between\" }}>\r\n                    <GrowColumn>\r\n                      <FieldTitle>{\"Footer\"}</FieldTitle>\r\n                    </GrowColumn>\r\n                    <FormIOSSwitch\r\n                      control={control}\r\n                      name={\"components[2].active\"}\r\n                    />\r\n                  </FlexRow>\r\n                </Field>\r\n              )}\r\n              {template_type === \"media\" && FOOTER.active && (\r\n                <Field>\r\n                  <FieldWrapper>\r\n                    <FormTextField\r\n                      control={control}\r\n                      rows={5}\r\n                      multiline\r\n                      name=\"components[2].text\"\r\n                      placeholder=\"Message\"\r\n                      required={true}\r\n                      inputProps={{\r\n                        maxLength: 60,\r\n                      }}\r\n                      sx={FormTextAreaFieldSX}\r\n                    />\r\n                  </FieldWrapper>\r\n                  <FieldLimiter>\r\n                    <FieldLimit>\r\n                      {FOOTER.text.length}\r\n                      {\"/60 Characters\"}\r\n                    </FieldLimit>\r\n                  </FieldLimiter>\r\n                </Field>\r\n              )}\r\n              {template_type === \"media\" && (\r\n                <Field>\r\n                  <FlexRow sx={{ justifyContent: \"space-between\" }}>\r\n                    <GrowColumn>\r\n                      <FieldTitle>{\"Buttons\"}</FieldTitle>\r\n                    </GrowColumn>\r\n                    <FormIOSSwitch\r\n                      control={control}\r\n                      name={\"components[3].active\"}\r\n                    />\r\n                  </FlexRow>\r\n                </Field>\r\n              )}\r\n              {template_type === \"media\" && BUTTONS.active && (\r\n                <Field>\r\n                  <FlexRow\r\n                    sx={{\r\n                      alignItems: \"center\",\r\n                      columnGap: 2,\r\n                      justifyContent: \"space-between\",\r\n                      mb: 2.5,\r\n                    }}\r\n                  >\r\n                    <GrowColumn>\r\n                      <TextField\r\n                        select\r\n                        label=\"Button Type\"\r\n                        sx={FormSelectFieldSX}\r\n                        required={true}\r\n                        value={templateButtonType}\r\n                        onChange={changeTemplateButtonType}\r\n                        disabled={BUTTONS.buttons.length > 0}\r\n                      >\r\n                        <MenuItem value=\"\" disabled>\r\n                          {\"Select Button Type\"}\r\n                        </MenuItem>\r\n                        {waTemplateButtonTypes.map(({ label, name }, index) => (\r\n                          <MenuItem key={index} value={name}>\r\n                            {label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </GrowColumn>\r\n                    <ShrinkColumn>\r\n                      <ActionButton\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={addButton}\r\n                        disableIcon\r\n                      >\r\n                        Add a Button\r\n                      </ActionButton>\r\n                    </ShrinkColumn>\r\n                  </FlexRow>\r\n                  {template_type === \"media\" &&\r\n                    BUTTONS.active &&\r\n                    BUTTONS.buttons.length > 0 && (\r\n                      <Fragment>\r\n                        {BUTTONS.buttons.map(\r\n                          (\r\n                            {\r\n                              type,\r\n                              url,\r\n                              phone_number,\r\n                            }: WATemplateComponentButton,\r\n                            index: number\r\n                          ) => {\r\n                            switch (type) {\r\n                              case \"QUICK_REPLY\":\r\n                                return (\r\n                                  <QrButtonCard\r\n                                    key={index}\r\n                                    index={index}\r\n                                    removeQuickReply={removeQuickReply}\r\n                                    control={control}\r\n                                  />\r\n                                );\r\n                              default:\r\n                                return (\r\n                                  <CtaButtonCard\r\n                                    key={index}\r\n                                    index={index}\r\n                                    type={type}\r\n                                    url={url}\r\n                                    phone_number={phone_number}\r\n                                    waTemplateButtonCtaTypes={\r\n                                      waTemplateButtonCtaTypes\r\n                                    }\r\n                                    control={control}\r\n                                    setValue={setValue}\r\n                                    removeCallAction={removeCallAction}\r\n                                  />\r\n                                );\r\n                            }\r\n                          }\r\n                        )}\r\n                      </Fragment>\r\n                    )}\r\n                </Field>\r\n              )}\r\n            </GrowColumn>\r\n          </FlexRow>\r\n          <ActionArea>\r\n            <ActionButton\r\n              type=\"reset\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              sx={{ height: 48 }}\r\n              disableIcon\r\n            >\r\n              Cancel\r\n            </ActionButton>\r\n            <ActionButton type=\"submit\">Preview & Save</ActionButton>\r\n          </ActionArea>\r\n        </DrawerForm>\r\n      </DrawerWrapper>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default WaTemplateForm;\r\n","import { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { Box, Button, CardMedia, Link } from \"@mui/material\";\r\nimport ReactHtmlParser from \"html-react-parser\";\r\n\r\nimport {\r\n  BodyText,\r\n  FooterText,\r\n  HeaderMediaSx,\r\n  HeaderImgWrap,\r\n  HeaderText,\r\n  MediaWrapperSx,\r\n  PreviewAction,\r\n  PreviewCard,\r\n  PreviewButtonSx,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { WATemplateComponent } from \"Shared/Interfaces/Business/BusinessSettings\";\r\nimport { WATemplatesComponentType } from \"Shared/Enums/BusinessSettings\";\r\nimport { Play, Pause, Shortcut } from \"Assets/Icons\";\r\n\r\nconst TemplatePreviewCard = ({ components }: any) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const [playVideo, setPlayVideo] = useState(false);\r\n  const [videoHover, setVideoHover] = useState(false);\r\n  const [videoState, setVideoState] = useState(\"\");\r\n  const HEADER = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.HEADER\r\n  );\r\n  const BODY = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.BODY\r\n  );\r\n  const FOOTER = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.FOOTER\r\n  );\r\n  const BUTTONS = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.BUTTONS\r\n  );\r\n  const headerVars: any[] = ((HEADER) => {\r\n    if (HEADER) {\r\n      const { example } = HEADER;\r\n      if (example) {\r\n        const { header_text } = example;\r\n        if (header_text) {\r\n          return header_text;\r\n        } else {\r\n          return [];\r\n        }\r\n      } else {\r\n        return [];\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n  })(HEADER);\r\n  const headerMedia = ((HEADER) => {\r\n    if (HEADER) {\r\n      const { example } = HEADER;\r\n      if (example) {\r\n        const { header_handle } = example;\r\n        if (header_handle && header_handle.length > 0) {\r\n          const [media] = header_handle;\r\n          return media;\r\n        } else {\r\n          return \"\";\r\n        }\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } else {\r\n      return \"\";\r\n    }\r\n  })(HEADER);\r\n  const headerFileName = ((HEADER) => {\r\n    if (HEADER) {\r\n      const { example } = HEADER;\r\n      if (example) {\r\n        const { header_files } = example;\r\n        if (header_files && header_files.length > 0) {\r\n          const [fileName] = header_files;\r\n          return fileName;\r\n        } else {\r\n          return \"\";\r\n        }\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } else {\r\n      return \"\";\r\n    }\r\n  })(HEADER);\r\n  const bodyVars: any[] = ((BODY) => {\r\n    if (BODY) {\r\n      const { example } = BODY;\r\n      if (example) {\r\n        const { body_text } = example;\r\n        if (body_text) {\r\n          return body_text;\r\n        } else {\r\n          return [];\r\n        }\r\n      } else {\r\n        return [];\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n  })(BODY);\r\n  const headerText = ((headerVars) =>\r\n    HEADER\r\n      ? headerVars.reduce(\r\n          (accumulator: string, currentValue: string, index: number) =>\r\n            currentValue && currentValue !== \"\"\r\n              ? accumulator.replace(`{{${index + 1}}}`, currentValue)\r\n              : accumulator,\r\n          HEADER.text\r\n        )\r\n      : \"\")(headerVars);\r\n  const bodyMsg = ((bodyVars) =>\r\n    BODY\r\n      ? bodyVars.reduce(\r\n          (accumulator: string, currentValue: string, index: number) =>\r\n            currentValue && currentValue !== \"\"\r\n              ? accumulator.replace(`{{${index + 1}}}`, currentValue)\r\n              : accumulator,\r\n          BODY.text\r\n        )\r\n      : \"\")(bodyVars);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.addEventListener(\"playing\", () => {\r\n        setVideoState(\"playing\");\r\n      });\r\n      videoRef.current.addEventListener(\"pause\", () => {\r\n        setVideoState(\"\");\r\n      });\r\n      videoRef.current.addEventListener(\"ended\", () => {\r\n        setVideoState(\"\");\r\n      });\r\n      playVideo ? videoRef.current.play() : videoRef.current.pause();\r\n    }\r\n  }, [playVideo]);\r\n\r\n  return (\r\n    <PreviewCard>\r\n      {HEADER && HEADER[\"format\"] === \"IMAGE\" && (\r\n        <HeaderImgWrap>\r\n          {headerMedia && headerMedia !== \"\" && (\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"header-img\"\r\n              image={headerMedia}\r\n              sx={HeaderMediaSx}\r\n            />\r\n          )}\r\n        </HeaderImgWrap>\r\n      )}\r\n      {HEADER && HEADER[\"format\"] === \"VIDEO\" && (\r\n        <Link\r\n          underline=\"none\"\r\n          component=\"button\"\r\n          type=\"button\"\r\n          onClick={() => setPlayVideo(!playVideo)}\r\n          onMouseEnter={() => setVideoHover(true)}\r\n          onMouseLeave={() => setVideoHover(false)}\r\n          sx={MediaWrapperSx}\r\n        >\r\n          <CardMedia\r\n            component=\"video\"\r\n            ref={videoRef}\r\n            className=\"video\"\r\n            disablePictureInPicture={true}\r\n            sx={{\r\n              ...HeaderMediaSx,\r\n              height: 130,\r\n            }}\r\n          >\r\n            {headerMedia && headerMedia !== \"\" && (\r\n              <source src={headerMedia} type=\"video/mp4\" />\r\n            )}\r\n          </CardMedia>\r\n          <Box position=\"absolute\" display=\"flex\">\r\n            {videoState === \"\" && <Play />}\r\n            {videoHover && videoState === \"playing\" && <Pause />}\r\n          </Box>\r\n        </Link>\r\n      )}\r\n      {HEADER && HEADER[\"format\"] === \"DOCUMENT\" && (\r\n        <Link\r\n          underline=\"none\"\r\n          className={`media-wrapper doc`}\r\n          href={headerMedia}\r\n          target=\"_blank\"\r\n          sx={{\r\n            ...MediaWrapperSx,\r\n            backgroundColor: \"#F5F5F5\",\r\n            color: \"#A1AEB4\",\r\n            fontSize: 90,\r\n            fontWeight: 900,\r\n            lineHeight: \"96px\",\r\n          }}\r\n        >\r\n          {headerMedia && headerMedia !== \"\"\r\n            ? headerFileName.split(\".\").pop().slice(0, 4).toUpperCase()\r\n            : \"\"}\r\n        </Link>\r\n      )}\r\n      {HEADER && HEADER[\"format\"] === \"TEXT\" && (\r\n        <HeaderText>{headerText}</HeaderText>\r\n      )}\r\n      <BodyText>\r\n        {ReactHtmlParser(bodyMsg.replaceAll(/(?:\\r\\n|\\r|\\n)/g, \"<br />\"))}\r\n      </BodyText>\r\n      {FOOTER && FOOTER[\"text\"] !== \"\" && (\r\n        <FooterText>{FOOTER[\"text\"]}</FooterText>\r\n      )}\r\n      {BUTTONS && BUTTONS.buttons.length > 0 && (\r\n        <PreviewAction>\r\n          {BUTTONS.buttons.map((button: any, index: number) => {\r\n            return (\r\n              <Fragment key={index}>\r\n                {button.type === \"QUICK_REPLY\" ? (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    type=\"button\"\r\n                    sx={{\r\n                      ...PreviewButtonSx,\r\n\r\n                      color: \"#767676\",\r\n                      minWidth: \"calc(50% - 8px)\",\r\n                    }}\r\n                  >\r\n                    {button.text}\r\n                  </Button>\r\n                ) : button.type === \"PHONE_NUMBER\" ? (\r\n                  <Button\r\n                    href={`tel:${button.phone_number}`}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      ...PreviewButtonSx,\r\n\r\n                      color: \"#32C5FF\",\r\n                      minWidth: \"100%\",\r\n                    }}\r\n                  >\r\n                    {button.text}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    href={\r\n                      button.example\r\n                        ? button.example.reduce(\r\n                            (\r\n                              accumulator: string,\r\n                              currentValue: string,\r\n                              index: number\r\n                            ) =>\r\n                              currentValue && currentValue !== \"\"\r\n                                ? accumulator.replace(\r\n                                    `{{${index + 1}}}`,\r\n                                    currentValue\r\n                                  )\r\n                                : accumulator,\r\n                            button.url\r\n                          )\r\n                        : \"\"\r\n                    }\r\n                    variant=\"outlined\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    sx={{\r\n                      ...PreviewButtonSx,\r\n\r\n                      color: \"#32C5FF\",\r\n                      minWidth: \"100%\",\r\n                    }}\r\n                  >\r\n                    <Shortcut />\r\n                    {button.text}\r\n                  </Button>\r\n                )}\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </PreviewAction>\r\n      )}\r\n    </PreviewCard>\r\n  );\r\n};\r\n\r\nexport default TemplatePreviewCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Drawer, IconButton, Link, Typography } from \"@mui/material\";\r\n\r\nimport BusinessApi from \"Apis/BusinessApi\";\r\nimport FormTextField from \"SharedComponents/FormComponents/FormTextField\";\r\nimport FileUpload from \"SharedComponents/FileUpload\";\r\nimport {\r\n  ActionArea,\r\n  ActionButton,\r\n  ContentHeader,\r\n  DrawerForm,\r\n  DrawerWrapper,\r\n  Field,\r\n  FormTextFieldSX,\r\n  HeaderTitle,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport { isBackDropOrEscapeKey } from \"Utils\";\r\nimport { useGlobal } from \"Contexts/App\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { useSettingsApi, useSettingsData } from \"Contexts/Business\";\r\nimport { WATemplatesComponentType } from \"Shared/Enums/BusinessSettings\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FileUploadType } from \"Shared/Enums/FileType\";\r\nimport { WATemplateComponent } from \"Shared/Interfaces/Business/BusinessSettings\";\r\n\r\nimport TemplatePreviewCard from \"./TemplatePreviewCard\";\r\n\r\ninterface WaTemplatePreviewProps {\r\n  open: boolean;\r\n  closeDrawer: () => void;\r\n}\r\n\r\nconst WaTemplatePreview = ({ open, closeDrawer }: WaTemplatePreviewProps) => {\r\n  const { isMobile, isTablet } = useGlobal();\r\n  const variableRegX = /[{][{]\\d{1,3}[}][}]/gm;\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const {\r\n    previewWaTemplateId,\r\n    showWaTemplatePreview,\r\n    // previewWaTemplateData\r\n  } = useSettingsData();\r\n  const {\r\n    setPreviewWaTemplateData,\r\n    setEditWaTemplateId,\r\n    setShowWaTemplateForm,\r\n    // setPreviewWaTemplateId\r\n  } = useSettingsApi();\r\n  const [bodyCounter, setBodyCounter] = useState<number[]>([]);\r\n  const formDefault: any = {\r\n    components: [\r\n      {\r\n        format: \"\",\r\n        text: \"\",\r\n        type: WATemplatesComponentType.HEADER,\r\n      },\r\n      {\r\n        text: \"\",\r\n        type: WATemplatesComponentType.BODY,\r\n      },\r\n      {\r\n        text: \"\",\r\n        type: WATemplatesComponentType.FOOTER,\r\n      },\r\n      {\r\n        buttons: [],\r\n        type: WATemplatesComponentType.BUTTONS,\r\n      },\r\n    ],\r\n  };\r\n  const { control, handleSubmit, watch, setValue } = useForm<any>({\r\n    defaultValues: formDefault,\r\n  });\r\n  const { components } = watch();\r\n  const HEADER = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.HEADER\r\n  );\r\n  const BODY = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.BODY\r\n  );\r\n  const BUTTONS = components.find(\r\n    ({ type }: WATemplateComponent) => type === WATemplatesComponentType.BUTTONS\r\n  );\r\n  const headerMedia = HEADER?.example?.header_handle?.[0];\r\n  const conditions: boolean[] = [\r\n    HEADER && HEADER[\"format\"] !== \"TEXT\",\r\n    HEADER &&\r\n    HEADER[\"format\"] === \"TEXT\" &&\r\n    HEADER[\"text\"] &&\r\n    HEADER[\"text\"] !== \"\"\r\n      ? HEADER[\"text\"].includes(\"{{1}}\")\r\n      : false,\r\n    BODY &&\r\n      BODY[\"text\"] &&\r\n      BODY[\"text\"] !== \"\" &&\r\n      BODY[\"text\"].includes(\"{{1}}\"),\r\n    BUTTONS &&\r\n      BUTTONS.buttons.length > 0 &&\r\n      BUTTONS.buttons[0]?.type === \"URL\" &&\r\n      BUTTONS.buttons[0]?.url.includes(\"{{1}}\"),\r\n  ].reduce((a: boolean, c: boolean) => {\r\n    return a || c;\r\n  }, false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      const components = data.components.map(({ active, ...itemData }: any) => {\r\n        if (itemData.type === \"HEADER\") {\r\n          delete itemData.example.header_files;\r\n          return itemData;\r\n        } else {\r\n          return itemData;\r\n        }\r\n      });\r\n      if (previewWaTemplateId) {\r\n        const res = await BusinessApi.updateWaTemplateComponents(\r\n          previewWaTemplateId,\r\n          { components }\r\n        );\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setSuccessMessage(res.message);\r\n        closeDrawer();\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n  const fieldIdentify = useCallback(() => {\r\n    if (components.length > 0) {\r\n      components.forEach(({ type, text, buttons }: any) => {\r\n        if (type === \"BODY\") {\r\n          const matches = text.match(variableRegX);\r\n          if (matches) {\r\n            setBodyCounter(\r\n              matches.map((_: string, index: number) => index + 1)\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [components]);\r\n  const fetchPreviewTemplate = useCallback(async () => {\r\n    try {\r\n      if (previewWaTemplateId) {\r\n        const res = await BusinessApi.getWaTemplateMessage(previewWaTemplateId);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setPreviewWaTemplateData(res.payload);\r\n        setValue(\"components\", res.payload.components);\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [previewWaTemplateId]);\r\n\r\n  useEffect(() => {\r\n    fetchPreviewTemplate();\r\n  }, [fetchPreviewTemplate]);\r\n\r\n  useEffect(() => {\r\n    fieldIdentify();\r\n  }, [fieldIdentify]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={\"right\"}\r\n      open={open}\r\n      onClose={(_, reason) => {\r\n        if (!isBackDropOrEscapeKey(reason) || showWaTemplatePreview) {\r\n          closeDrawer();\r\n        }\r\n      }}\r\n      sx={{\r\n        zIndex: \"modal\",\r\n        \"& .MuiPaper-root.MuiDrawer-paper\": {\r\n          flexDirection: \"row-reverse\",\r\n        },\r\n      }}\r\n    >\r\n      <DrawerWrapper sx={{ width: { xs: \"100vw\", md: 360 } }}>\r\n        {open && (\r\n          <ContentHeader>\r\n            <IconButton\r\n              onClick={() => {\r\n                closeDrawer();\r\n              }}\r\n              sx={{ width: 32, height: 32 }}\r\n            >\r\n              <LeftArrow />\r\n            </IconButton>\r\n            <HeaderTitle>\r\n              {conditions && !showWaTemplatePreview\r\n                ? `Enter Sample Values`\r\n                : `Preview Template`}\r\n            </HeaderTitle>\r\n          </ContentHeader>\r\n        )}\r\n        {open && (\r\n          <DrawerForm onSubmit={handleSubmit(onSubmit)}>\r\n            {(!conditions || showWaTemplatePreview || isMobile) && (\r\n              <TemplatePreviewCard components={components} />\r\n            )}\r\n            {!showWaTemplatePreview &&\r\n              HEADER &&\r\n              (HEADER[\"format\"] === \"IMAGE\" ||\r\n                HEADER[\"format\"] === \"VIDEO\" ||\r\n                HEADER[\"format\"] === \"DOCUMENT\") && (\r\n                <Field>\r\n                  <FileUpload\r\n                    setValue={setValue}\r\n                    control={control}\r\n                    fileTypes={\r\n                      HEADER[\"format\"] === \"IMAGE\"\r\n                        ? FileUploadType.IMAGE\r\n                        : HEADER[\"format\"] === \"VIDEO\"\r\n                        ? FileUploadType.VIDEO\r\n                        : FileUploadType.FILE\r\n                    }\r\n                    label={`Drag & Drop ${HEADER[\"format\"]\r\n                      .charAt(0)\r\n                      .toUpperCase()}${HEADER[\"format\"]\r\n                      .slice(1)\r\n                      .toLowerCase()}`}\r\n                    defaultFieldName=\"components[0].example.header_handle[0]\"\r\n                    fileNameField=\"components[0].example.header_files[0]\"\r\n                    fileURL={headerMedia ?? \"\"}\r\n                    width=\"100%\"\r\n                  />\r\n                </Field>\r\n              )}\r\n            {!showWaTemplatePreview &&\r\n              HEADER &&\r\n              HEADER[\"format\"] === \"TEXT\" &&\r\n              HEADER[\"text\"].includes(\"{{1}}\") && (\r\n                <Field>\r\n                  <FormTextField\r\n                    control={control}\r\n                    name=\"components[0].example.header_text[0]\"\r\n                    label=\"Header Variable 1\"\r\n                    placeholder=\"Header {{1}}\"\r\n                    required={true}\r\n                    sx={FormTextFieldSX}\r\n                  />\r\n                </Field>\r\n              )}\r\n            {!showWaTemplatePreview &&\r\n              bodyCounter.length > 0 &&\r\n              bodyCounter.map((i: number, index: number) => (\r\n                <Field key={`bodyVar{{${i}}}`}>\r\n                  <FormTextField\r\n                    control={control}\r\n                    name={`components[1].example.body_text[${index}]`}\r\n                    label={`Body Variable ${i}`}\r\n                    placeholder={`Body ${i}`}\r\n                    required={true}\r\n                    sx={FormTextFieldSX}\r\n                  />\r\n                </Field>\r\n              ))}\r\n            {!showWaTemplatePreview &&\r\n              BUTTONS &&\r\n              BUTTONS.buttons &&\r\n              BUTTONS.buttons.length > 0 &&\r\n              BUTTONS.buttons.map((button: any, index: number) => {\r\n                return button.type === \"URL\" ? (\r\n                  <Field key={index}>\r\n                    {/* {button.example?.[0] ?? \"\"} */}\r\n                    <FormTextField\r\n                      control={control}\r\n                      name={`components[3].buttons[${index}].example[0]`}\r\n                      label={`URL Button ${index + 1}`}\r\n                      placeholder={`Url button ${index + 1} variable 1`}\r\n                      required={true}\r\n                      sx={FormTextFieldSX}\r\n                    />\r\n                  </Field>\r\n                ) : null;\r\n              })}\r\n            {!showWaTemplatePreview && (\r\n              <ActionArea>\r\n                <ActionButton type=\"submit\">\r\n                  {\"Submit for Approval\"}\r\n                </ActionButton>\r\n              </ActionArea>\r\n            )}\r\n            {!showWaTemplatePreview && (\r\n              <ActionArea\r\n                sx={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  gap: 0.625,\r\n                  my: 2,\r\n                }}\r\n              >\r\n                <Typography\r\n                  component=\"p\"\r\n                  sx={{\r\n                    color: \"#686C72\",\r\n                    fontSize: 14,\r\n                    fontWeight: 400,\r\n                    lineHeight: \"16px\",\r\n                  }}\r\n                >\r\n                  {\"Not happy?\"}\r\n                </Typography>\r\n                <Link\r\n                  type=\"button\"\r\n                  component=\"button\"\r\n                  variant=\"body2\"\r\n                  underline=\"none\"\r\n                  onClick={() => {\r\n                    setEditWaTemplateId(previewWaTemplateId);\r\n                    setShowWaTemplateForm(true);\r\n                    closeDrawer();\r\n                  }}\r\n                >\r\n                  {\"Continue Editing\"}\r\n                </Link>\r\n              </ActionArea>\r\n            )}\r\n          </DrawerForm>\r\n        )}\r\n      </DrawerWrapper>\r\n      {!showWaTemplatePreview && open && conditions && isTablet && (\r\n        <DrawerWrapper\r\n          sx={{\r\n            borderRight: \"1px solid #24272c1a\",\r\n            py: 11.25,\r\n            px: 6.25,\r\n            width: 360,\r\n          }}\r\n        >\r\n          <TemplatePreviewCard components={components} />\r\n        </DrawerWrapper>\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default WaTemplatePreview;\r\n","import { ChangeEvent, Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardContent, Divider, IconButton } from \"@mui/material\";\nimport { Clear } from \"@mui/icons-material\";\n\nimport BusinessApi from \"Apis/BusinessApi\";\nimport { useSettingsApi, useSettingsData } from \"Contexts/Business\";\nimport { useGlobal } from \"Contexts/App\";\nimport { useSnacks } from \"Contexts/Snack\";\nimport {\n  ActionButton,\n  CardSX,\n  CardContentSX,\n  Content,\n  ContentInner,\n  InnerWrapper,\n  ContentHeader,\n  HeaderTitle,\n  InnerBlock,\n  Cta,\n  CtaInfo,\n  CtaInfoText,\n  SearchWrapper,\n  SearchBlock,\n  SearchInput,\n  InnerWrapperSX,\n  ContentFooter,\n  ContentInnerSX,\n  ContentHeaderSX,\n} from \"Containers/BusinessSettings/LayoutComponents\";\nimport { LeftArrow, Search } from \"Assets/Icons\";\nimport WTMItem from \"./WATemplateMessages/WTMItem\";\nimport WTMHeader from \"./WATemplateMessages/WTMHeader\";\nimport WaTemplateForm from \"./WATemplateMessages/WaTemplateForm\";\nimport WaTemplatePreview from \"./WATemplateMessages/WaTemplatePreview\";\n\nconst WATemplateMessages = () => {\n  const { isMobile, isTablet } = useGlobal();\n  const { setErrorMessage } = useSnacks();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isSearchActive, setSearchActive] = useState<boolean>(false);\n  const {\n    waTemplatesData,\n    watFilter,\n    showWaTemplateForm,\n    showWaPreviewForm,\n    showWaTemplatePreview,\n  } = useSettingsData();\n  const {\n    setWaTemplatesData,\n    setTotalWaTemplates,\n    setWatFilter,\n    setShowWaTemplateForm,\n    setShowWaPreviewForm,\n    setShowWaTemplatePreview,\n    setEditWaTemplateId,\n    setPreviewWaTemplateId,\n  } = useSettingsApi();\n  const fetchWaTemplateMessages = useCallback(async () => {\n    try {\n      const res = await BusinessApi.getWaTemplateMessages();\n      if (!res.success) {\n        throw Error(res.message);\n      }\n      setTotalWaTemplates(res.payload.length);\n      setWaTemplatesData(res.payload);\n      setLoading(false);\n    } catch (error: any) {\n      setErrorMessage(error.message);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    fetchWaTemplateMessages();\n  }, [fetchWaTemplateMessages]);\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>WhatsApp Template Messages</title>\n      </Helmet>\n      <Content>\n        {isMobile && (\n          <ContentHeader sx={ContentHeaderSX}>\n            {!isSearchActive && (\n              <IconButton\n                component={Link}\n                to=\"/business-settings\"\n                sx={{ width: 32, height: 32 }}\n              >\n                <LeftArrow />\n              </IconButton>\n            )}\n            {!isSearchActive && (\n              <HeaderTitle>{`Template Messages`}</HeaderTitle>\n            )}\n            {isSearchActive && (\n              <SearchWrapper>\n                <SearchBlock>\n                  <IconButton\n                    disableTouchRipple\n                    disableFocusRipple\n                    disableRipple\n                    sx={{ position: \"absolute\" }}\n                  >\n                    <Search />\n                  </IconButton>\n                  <SearchInput\n                    onChange={({\n                      target: { value },\n                    }: ChangeEvent<HTMLInputElement>) => setWatFilter(value)}\n                    placeholder=\"Search Template\"\n                  />\n                  <IconButton\n                    onClick={() => {\n                      setWatFilter(\"\");\n                      setSearchActive(!isSearchActive);\n                    }}\n                    sx={{ position: \"absolute\", right: 0, top: 0 }}\n                  >\n                    <Clear />\n                  </IconButton>\n                </SearchBlock>\n              </SearchWrapper>\n            )}\n            {!isSearchActive && waTemplatesData.length > 0 && (\n              <IconButton\n                onClick={() => setSearchActive((prevState) => !prevState)}\n              >\n                <Search />\n              </IconButton>\n            )}\n          </ContentHeader>\n        )}\n        <ContentInner sx={ContentInnerSX}>\n          <InnerWrapper sx={InnerWrapperSX}>\n            {!loading && (\n              <Card elevation={0} sx={CardSX}>\n                <CardContent sx={CardContentSX}>\n                  {waTemplatesData.length === 0 ? (\n                    <InnerBlock>\n                      <Cta>\n                        <ActionButton\n                          disableIcon\n                          onClick={() => setShowWaTemplateForm(true)}\n                          sx={{\n                            borderRadius: 2,\n                            boxShadow: \"0px 8px 8px rgba(50, 197, 255, 0.1)\",\n                            fontSize: 16,\n                            fontWeight: 700,\n                            height: 36,\n                            lineHeight: \"19px\",\n                            margin: \"auto\",\n                            textTransform: \"capitalize\",\n                          }}\n                        >\n                          {\"New Template Message\"}\n                        </ActionButton>\n                      </Cta>\n                      <CtaInfo>\n                        <CtaInfoText>\n                          {\n                            \"In order to initiate a conversation message your customers. Create a new template message. Send a template message to masses from \"\n                          }\n                          <strong>{\"Broadcast\"}</strong>\n                          {\" option in \"}\n                          <strong>{\"Engage\"}</strong>\n                          {\" workspace.\"}\n                        </CtaInfoText>\n                      </CtaInfo>\n                    </InnerBlock>\n                  ) : (\n                    <Fragment>\n                      {isTablet && (\n                        <WTMHeader {...{ isSearchActive, setSearchActive }} />\n                      )}\n                      {isTablet && <Divider />}\n                      {waTemplatesData\n                        .filter((waTemplate) =>\n                          waTemplate?.name\n                            ?.toLowerCase()\n                            .includes(watFilter?.toLowerCase())\n                        )\n                        .map((waTemplate, i: number) => (\n                          <WTMItem key={i} {...waTemplate} />\n                        ))}\n                    </Fragment>\n                  )}\n                </CardContent>\n              </Card>\n            )}\n          </InnerWrapper>\n        </ContentInner>\n        {isMobile && waTemplatesData.length > 0 && (\n          <ContentFooter>\n            <ActionButton\n              onClick={() => setShowWaTemplateForm(true)}\n              variant=\"outlined\"\n              color=\"primary\"\n              disableIcon\n            >\n              New Template Message\n            </ActionButton>\n          </ContentFooter>\n        )}\n      </Content>\n      <WaTemplateForm\n        open={showWaTemplateForm}\n        closeDrawer={() => {\n          setEditWaTemplateId(undefined);\n          setShowWaTemplateForm(false);\n        }}\n      />\n      <WaTemplatePreview\n        open={showWaPreviewForm || showWaTemplatePreview}\n        closeDrawer={() => {\n          setPreviewWaTemplateId(undefined);\n          setShowWaPreviewForm(false);\n          setShowWaTemplatePreview(false);\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default WATemplateMessages;\n","import WATemplateMessages from \"Components/BusinessSettings/WATemplateMessages\";\r\n\r\nconst WATemplateMessagesPage = () => <WATemplateMessages />;\r\n\r\nexport default WATemplateMessagesPage;\r\n","import { SwitchProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { Control, Controller, UseControllerProps } from \"react-hook-form\";\r\nimport { IOSSwitch } from \"SharedComponents/Switch\";\r\n\r\ninterface FormIOSSwitchProps extends UseControllerProps {\r\n  control: Control<any, any>;\r\n}\r\n\r\nconst FormIOSSwitch: FC<FormIOSSwitchProps & SwitchProps> = ({\r\n  control,\r\n  defaultValue,\r\n  rules,\r\n  name,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      control={control}\r\n      name={name}\r\n      render={({ field }) => {\r\n        return (\r\n          <IOSSwitch\r\n            {...props}\r\n            checked={field.value}\r\n            onChange={field.onChange}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormIOSSwitch;\r\n","import { Switch, SwitchProps } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nexport const IOSSwitch = styled((props: SwitchProps) => (\r\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\r\n))(({ theme }) => ({\r\n  width: 42,\r\n  height: 26,\r\n  padding: 0,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    padding: 0,\r\n    margin: 2,\r\n    transitionDuration: \"300ms\",\r\n    \"&.Mui-checked\": {\r\n      transform: \"translateX(16px)\",\r\n      color: \"#fff\",\r\n      \"& + .MuiSwitch-track\": {\r\n        backgroundColor: theme.palette.primary,\r\n        opacity: 1,\r\n        border: 0,\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n      color: theme.palette.primary,\r\n      border: \"6px solid #fff\",\r\n    },\r\n    \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n      color:\r\n        theme.palette.mode === \"light\"\r\n          ? theme.palette.grey[100]\r\n          : theme.palette.grey[600],\r\n    },\r\n    \"&.Mui-disabled + .MuiSwitch-track\": {\r\n      opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxSizing: \"border-box\",\r\n    width: 22,\r\n    height: 22,\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 26 / 2,\r\n    backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#39393D\",\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\"], {\r\n      duration: 500,\r\n    }),\r\n  },\r\n}));\r\n","export enum WATemplatesComponentType {\r\n  HEADER = \"HEADER\",\r\n  BODY = \"BODY\",\r\n  FOOTER = \"FOOTER\",\r\n  BUTTONS = \"BUTTONS\",\r\n}\r\n\r\nexport enum WATemplateStatus {\r\n  APPROVED = \"APPROVED\",\r\n  DRAFT = \"DRAFT\",\r\n  SUBMITTED = \"SUBMITTED\",\r\n}\r\n\r\nexport enum WATemplateStatusColor {\r\n  APPROVED = \"#25ba00\",\r\n  DRAFT = \"#ffad33\",\r\n  SUBMITTED = \"#04c4ee\",\r\n}\r\n\r\nexport class WaTiers {\r\n  static readonly TIER1 = new WaTiers(\r\n    \"TIER 1\",\r\n    1,\r\n    \"#FF8719\",\r\n    \"TIER 1 allows 1000 outgoing messages to be sent in 24hrs. To reach next tier send 1000 messages for consecutive 3 days.\"\r\n  );\r\n  static readonly TIER2 = new WaTiers(\r\n    \"TIER 2\",\r\n    2,\r\n    \"#32C5FF\",\r\n    \"TIER 1 allows 1000 outgoing messages to be sent in 24hrs. To reach next tier send 1000 messages for consecutive 3 days.\"\r\n  );\r\n  static readonly TIER3 = new WaTiers(\r\n    \"TIER 3\",\r\n    3,\r\n    \"#00CD39\",\r\n    \"TIER 1 allows 1000 outgoing messages to be sent in 24hrs. To reach next tier send 1000 messages for consecutive 3 days.\"\r\n  );\r\n\r\n  private constructor(\r\n    public readonly name: string,\r\n    public readonly size: number,\r\n    public readonly statusColor: string,\r\n    public readonly message: string\r\n  ) {}\r\n}\r\n\r\nexport class WaHealth {\r\n  static readonly GREY = new WaHealth(\"Unable to Connect\", \"#82868B\", \"GREY\");\r\n  static readonly RED = new WaHealth(\"Poor\", \"#E02020\", \"RED\");\r\n  static readonly ORANGE = new WaHealth(\"Moderate\", \"#FF8719\", \"ORANGE\");\r\n  static readonly GREEN = new WaHealth(\"Good\", \"#5ECF70\", \"GREEN\");\r\n\r\n  private constructor(\r\n    public readonly status: string,\r\n    public readonly statusColor: string,\r\n    public readonly health: string\r\n  ) {}\r\n}\r\n\r\nexport class WaConnection {\r\n  static readonly NotConnected = new WaConnection(\"not-connected\", \"#E02020\");\r\n  static readonly Connected = new WaConnection(\"connected\", \"#5ECF70\");\r\n\r\n  private constructor(\r\n    public readonly status: string,\r\n    public readonly statusColor: string\r\n  ) {}\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport function getRandomColor() {\r\n  var rgb = [];\r\n\r\n  for (var i = 0; i < 3; i++) {\r\n    rgb.push(Math.floor(Math.random() * 255));\r\n  }\r\n\r\n  return \"rgb(\" + rgb.join(\",\") + \", 0.5)\";\r\n}\r\n\r\nexport function secondsToHms(d: number) {\r\n  d = Number(d);\r\n  let h = Math.floor(d / 3600);\r\n  let m = Math.floor((d % 3600) / 60);\r\n  let s = Math.floor((d % 3600) % 60);\r\n\r\n  let hDisplay = h > 0 ? h + (h === 1 ? \" hour \" : \" hours \") : \"\";\r\n  let mDisplay = m > 0 ? m + (m === 1 ? \" minute \" : \" minutes \") : \"\";\r\n  let sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\";\r\n  return hDisplay + mDisplay + sDisplay;\r\n}\r\n\r\nexport const isBackDropOrEscapeKey = (reason: string) =>\r\n  reason === \"backdropClick\" || reason === \"escapeKeyDown\";\r\n\r\nexport const monthFormat = (month: string) => moment(month).format(\"MMM YYYY\");\r\n\r\nexport const formatFB_IGAccountsArray = (accounts: string[]): string[] => {\r\n  let withChangedFBAccounts: string[] = [];\r\n\r\n  if (accounts.includes(\"facebook\")) {\r\n    withChangedFBAccounts = accounts.filter((acc) => acc !== \"facebook\");\r\n  }\r\n\r\n  if (accounts.includes(\"instagram\")) {\r\n    withChangedFBAccounts = withChangedFBAccounts.filter(\r\n      (acc) => acc !== \"instagram\"\r\n    );\r\n  }\r\n\r\n  if (accounts.includes(\"facebook\") || accounts.includes(\"instagram\")) {\r\n    withChangedFBAccounts.unshift(\"facebook and instagram\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"facebook and instagram\") &&\r\n    !withChangedFBAccounts.includes(\"facebook and instagram\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"facebook and instagram\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"twitter\") &&\r\n    !withChangedFBAccounts.includes(\"twitter\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"twitter\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"linkedin\") &&\r\n    !withChangedFBAccounts.includes(\"linkedin\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"linkedin\");\r\n  }\r\n\r\n  return withChangedFBAccounts;\r\n};\r\n"],"names":["template_status","name","id","description","useSnacks","setErrorMessage","setSuccessMessage","useSettingsApi","setEditWaTemplateId","setShowWaTemplateForm","setPreviewWaTemplateId","setShowWaTemplatePreview","useState","anchorEl","setAnchorEl","openConfirmDialog","setOpenConfirmDialog","handleClickClose","handleClose","deleteWaTemplateMessage","BusinessApi","res","success","Error","message","setTimeout","window","location","reload","Fragment","ListItem","component","sx","px","xs","md","ListItemText","primary","className","Chip","label","size","bgcolor","WATemplateStatusColor","alignItems","color","borderRadius","height","fontSize","fontWeight","lineHeight","secondary","display","flexWrap","gap","marginBottom","ListItemIcon","IconButton","onClick","event","currentTarget","MoreVert","Boolean","Menu","open","onClose","keepMounted","MenuListProps","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Button","autoFocus","isSearchActive","setSearchActive","totalWaTemplates","useSettingsData","setWatFilter","setTotalWaTemplates","setWaTemplatesData","isSyncing","setSyncing","syncMessages","res1","payload","length","disableIcon","type","py","mt","disableTouchRipple","disableFocusRipple","disableRipple","position","onChange","value","target","placeholder","right","top","Clear","prevState","icon","variant","disabled","alignSelf","borderColor","flexDirection","letterSpacing","textTransform","index","control","removeQuickReply","Card","border","boxShadow","mb","p","pb","elevation","CardHeader","title","action","Close","my","FormTextField","required","FormTextFieldSX","url","phone_number","waTemplateButtonCtaTypes","setValue","removeCallAction","country","useGlobal","variableRegX","ctaVariableCount","setCtaVariableCount","leftCtaVariable","useCallback","matches","match","useEffect","select","FormSelectFieldSX","defaultValue","map","fullWidth","defaultCountry","newValue","replaceAll","FormTelFieldSX","focusRipple","closeDrawer","businessId","editWaTemplateId","waTemplatesData","waTemplateCategories","waTemplateLanguages","waTemplateTypes","waTemplateHeaderTypes","waTemplateButtonTypes","setShowWaPreviewForm","formDefault","category","language","template_type","components","format","text","WATemplatesComponentType","active","buttons","useForm","defaultValues","handleSubmit","watch","reset","HEADER","find","BODY","FOOTER","BUTTONS","headerVariableCount","setHeaderVariableCount","templateButtonType","setTemplateButtonType","fixTemplateName","fixedValue","slice","replace","toLowerCase","leftHeaderVariable","fixHeaderVariable","reduce","accumulator","currentValue","QUICK_REPLY_BUTTONS","splice","CALL_TO_ACTION_BUTTONS","onSubmit","data","fetchWaTemplateMessage","Drawer","anchor","_","reason","isBackDropOrEscapeKey","zIndex","width","onReset","code","justifyContent","FormIOSSwitch","rows","multiline","inputProps","maxLength","FormTextAreaFieldSX","onBlur","columnGap","TextField","push","videoRef","useRef","playVideo","setPlayVideo","videoHover","setVideoHover","videoState","setVideoState","headerVars","example","header_text","headerMedia","header_handle","headerFileName","header_files","bodyVars","body_text","headerText","bodyMsg","current","addEventListener","play","pause","CardMedia","alt","image","HeaderMediaSx","Link","underline","onMouseEnter","onMouseLeave","MediaWrapperSx","ref","disablePictureInPicture","src","Box","href","backgroundColor","split","pop","toUpperCase","ReactHtmlParser","button","PreviewButtonSx","rel","isMobile","isTablet","previewWaTemplateId","showWaTemplatePreview","setPreviewWaTemplateData","bodyCounter","setBodyCounter","conditions","includes","a","c","itemData","fieldIdentify","forEach","fetchPreviewTemplate","FileUpload","fileTypes","FileUploadType","charAt","defaultFieldName","fileNameField","fileURL","i","Typography","borderRight","loading","setLoading","watFilter","showWaTemplateForm","showWaPreviewForm","fetchWaTemplateMessages","ContentHeaderSX","to","ContentInnerSX","InnerWrapperSX","CardSX","CardContent","CardContentSX","margin","WTMHeader","Divider","filter","waTemplate","WTMItem","undefined","rules","props","render","field","checked","IOSSwitch","styled","Switch","focusVisibleClassName","theme","padding","transitionDuration","transform","palette","opacity","mode","grey","boxSizing","transition","transitions","create","duration","WATemplateStatus","WaTiers","statusColor","TIER1","TIER2","TIER3","WaHealth","status","health","GREY","RED","ORANGE","GREEN","WaConnection","NotConnected","Connected","getRandomColor","rgb","Math","floor","random","join","secondsToHms","d","Number","h","m","s","monthFormat","month","moment","formatFB_IGAccountsArray","accounts","withChangedFBAccounts","acc","unshift"],"sourceRoot":""}