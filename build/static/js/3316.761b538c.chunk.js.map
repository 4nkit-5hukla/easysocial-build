{"version":3,"file":"static/js/3316.761b538c.chunk.js","mappings":"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","sources":["Components/Common/AppLink.tsx","Contexts/SocialMedias/SocialMediasProvider.tsx","Apis/SocialMediaApi.ts","Assets/Icons/Facebook.tsx","Assets/Icons/Instagram.tsx","Assets/Icons/LinkedIn.tsx","Components/BusinessSettings/SocialMediaLinking/FaceBookLinking.tsx","Constants/BusinessSettings/SocialMediaLinking.ts","Components/BusinessSettings/SocialMediaLinking/Permissions.tsx","Components/BusinessSettings/SocialMediaLinking/ViewPermissions.tsx","Components/BusinessSettings/SocialMediaLinking/LinkedInLinking.tsx","Components/BusinessSettings/SocialMediaLinking.tsx","Pages/BusinessSettings/SocialMediaLinking.tsx"],"sourcesContent":["import { Link as MuiLink } from \"@mui/material\";\r\nimport { forwardRef, Ref } from \"react\";\r\nimport { Link as LinkBase } from \"react-router-dom\";\r\n\r\nexport const AppLink = forwardRef(\r\n  (\r\n    { to, className, children, ...rest }: any,\r\n    ref: Ref<HTMLAnchorElement> | undefined\r\n  ) => (\r\n    <MuiLink\r\n      component={LinkBase}\r\n      underline=\"none\"\r\n      color=\"inherit\"\r\n      ref={ref}\r\n      to={to}\r\n      className={className}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </MuiLink>\r\n  )\r\n);\r\n\r\nexport default AppLink;\r\n","import { createContext, FC, useContext, useMemo, useState } from \"react\";\r\n\r\nimport {\r\n  IAccounts,\r\n  ILIUser,\r\n  ISmPermission,\r\n  ITWUser,\r\n} from \"Shared/Interfaces/SocialMedias\";\r\n\r\nimport {\r\n  SocialMediasApiContextState,\r\n  SocialMediasDataContextState,\r\n} from \"./types\";\r\n\r\nconst SocialMediasData = createContext<\r\n  SocialMediasDataContextState | undefined\r\n>(undefined);\r\n\r\nconst SocialMediasApi = createContext<SocialMediasApiContextState | undefined>(\r\n  undefined\r\n);\r\n\r\nconst SocialMediasProvider: FC<any> = ({ children }) => {\r\n  const [connectedAccounts, setConnectedAccounts] = useState<IAccounts[]>([]);\r\n  const [unconnectedAccounts, setUnconnectedAccounts] = useState<string[]>([]);\r\n  const [TWUser, setTWUser] = useState<ITWUser | null>(null);\r\n  const [LIUser, setLIUser] = useState<ILIUser | null>(null);\r\n  const [platform, setPlatform] = useState<string | null>(null);\r\n  const [permissions, setPermissions] = useState<ISmPermission>({\r\n    show: false,\r\n    provider: \"\",\r\n  });\r\n  const data: SocialMediasDataContextState = {\r\n    connectedAccounts,\r\n    unconnectedAccounts,\r\n    TWUser,\r\n    LIUser,\r\n    platform,\r\n    permissions,\r\n  };\r\n  const api = useMemo<SocialMediasApiContextState>(\r\n    () => ({\r\n      setConnectedAccounts,\r\n      setUnconnectedAccounts,\r\n      setTWUser,\r\n      setLIUser,\r\n      setPlatform,\r\n      setPermissions,\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <SocialMediasData.Provider value={data}>\r\n      <SocialMediasApi.Provider value={api}>\r\n        {children}\r\n      </SocialMediasApi.Provider>\r\n    </SocialMediasData.Provider>\r\n  );\r\n};\r\n\r\nexport const useSocialMediasData = () => {\r\n  const context = useContext(SocialMediasData);\r\n\r\n  if (context === undefined) {\r\n    throw Error(\r\n      \"Item must be used inside of SocialMediasProvider, otherwise it will not function correctly.\"\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport const useSocialMediasApi = () => {\r\n  const context = useContext(SocialMediasApi);\r\n\r\n  if (context === undefined) {\r\n    throw Error(\r\n      \"Item must be used inside of SocialMediasProvider, otherwise it will not function correctly.\"\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport default SocialMediasProvider;\r\n","import { AuthenticatedReq } from \"Utils/Axios\";\r\n\r\nexport default class SocialMediaApi {\r\n  public static getSetupInfo = async () => {\r\n    return await AuthenticatedReq(`/platforms/sm-connected-platform`, \"GET\");\r\n  };\r\n\r\n  public static getBusinessFBPages = async () => {\r\n    return await AuthenticatedReq(`/fb/facebook-pages`, \"GET\");\r\n  };\r\n\r\n  public static saveFBUserData = async (businessId: number, data: any) => {\r\n    return await AuthenticatedReq(`/fb/pages/${businessId}`, \"POST\", {\r\n      data,\r\n    });\r\n  };\r\n\r\n  public static saveFBPageData = async (data: any) => {\r\n    return await AuthenticatedReq(`/fb/account`, \"POST\", {\r\n      data,\r\n    });\r\n  };\r\n\r\n  public static getIgAccountData = async () => {\r\n    return await AuthenticatedReq(`/ig/fetchData`, \"GET\");\r\n  };\r\n\r\n  public static saveIgAccountData = async (data: any) => {\r\n    return await AuthenticatedReq(`/ig/account`, \"POST\", {\r\n      data,\r\n    });\r\n  };\r\n\r\n  public static unlinkSocialMediaAccount = async (data: any) => {\r\n    return await AuthenticatedReq(`/platforms/unlinkAccount/`, \"DELETE\", {\r\n      data,\r\n    });\r\n  };\r\n\r\n  public static getLiUserPages = async (data: any) => {\r\n    return await AuthenticatedReq(`/setup/linkedin/pages`, \"POST\", { data });\r\n  };\r\n\r\n  public static setLinkedinBusiness = async (data: any) => {\r\n    return await AuthenticatedReq(`/setup/linkedin/setup-page`, \"POST\", {\r\n      data,\r\n    });\r\n  };\r\n}\r\n","import { SvgIcon } from \"@mui/material\";\r\n\r\nexport const Facebook = ({ bg = \"#4267B2\" }: { bg?: string }) => (\r\n  <SvgIcon viewBox=\"0 0 32 32\" fill=\"none\">\r\n    <path\r\n      d=\"M3.55556 0H28.4444C29.3874 0 30.2918 0.374602 30.9586 1.0414C31.6254 1.70819 32 2.61256 32 3.55556V28.4444C32 29.3874 31.6254 30.2918 30.9586 30.9586C30.2918 31.6254 29.3874 32 28.4444 32H3.55556C2.61256 32 1.70819 31.6254 1.0414 30.9586C0.374602 30.2918 0 29.3874 0 28.4444V3.55556C0 2.61256 0.374602 1.70819 1.0414 1.0414C1.70819 0.374602 2.61256 0 3.55556 0ZM26.6667 3.55556H22.2222C20.572 3.55556 18.9893 4.21111 17.8224 5.378C16.6556 6.5449 16 8.12754 16 9.77778V14.2222H12.4444V19.5556H16V32H21.3333V19.5556H26.6667V14.2222H21.3333V10.6667C21.3333 10.1952 21.5206 9.74299 21.854 9.40959C22.1874 9.07619 22.6396 8.88889 23.1111 8.88889H26.6667V3.55556Z\"\r\n      fill={bg}\r\n    />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default Facebook;\r\n","export const Instagram = () => {\r\n  return (\r\n    <svg\r\n      width=\"48\"\r\n      height=\"48\"\r\n      viewBox=\"0 0 48 48\"\r\n      fill=\"none\"\r\n      xmlns=\"//www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M39.6914 11.1896C39.6914 9.59435 38.3985 8.30626 36.8092 8.30626C35.2198 8.30626 33.9258 9.59435 33.9258 11.1896C33.9258 12.779 35.2198 14.0671 36.8092 14.0671C38.3985 14.0671 39.6914 12.779 39.6914 11.1896\"\r\n        fill=\"url(#paint0_linear_1330_9)\"\r\n      />\r\n      <path\r\n        d=\"M43.5331 33.6969C43.4264 36.0371 43.035 37.3085 42.71 38.153C42.2735 39.2727 41.7528 40.0733 40.9084 40.9131C40.0733 41.7528 39.2727 42.2723 38.153 42.704C37.3085 43.0338 36.0323 43.4264 33.6922 43.5379C31.1622 43.6494 30.4126 43.6731 23.997 43.6731C17.5874 43.6731 16.8318 43.6494 14.3019 43.5379C11.9618 43.4264 10.6915 43.0338 9.84691 42.704C8.72134 42.2723 7.92669 41.7528 7.08693 40.9131C6.24122 40.0733 5.72055 39.2727 5.29 38.153C4.96495 37.3085 4.56767 36.0371 4.46679 33.6969C4.3435 31.1669 4.3209 30.4055 4.3209 24.003C4.3209 17.5874 4.3435 16.8318 4.46679 14.3019C4.56767 11.9618 4.96495 10.6915 5.29 9.83979C5.72055 8.72133 6.24122 7.92543 7.08693 7.08568C7.92669 6.24717 8.72134 5.72642 9.84691 5.29C10.6915 4.95908 11.9618 4.57238 14.3019 4.46092C16.8318 4.34937 17.5874 4.3209 23.997 4.3209C30.4126 4.3209 31.1622 4.34937 33.6922 4.46092C36.0323 4.57238 37.3085 4.95908 38.153 5.29C39.2727 5.72642 40.0733 6.24717 40.9084 7.08568C41.7528 7.92543 42.2735 8.72133 42.71 9.83979C43.035 10.6915 43.4264 11.9618 43.5331 14.3019C43.6505 16.8318 43.679 17.5874 43.679 24.003C43.679 30.4055 43.6505 31.1669 43.5331 33.6969V33.6969ZM47.8541 14.105C47.7367 11.5478 47.3334 9.80065 46.7344 8.27895C46.1248 6.70023 45.3075 5.36232 43.9696 4.02441C42.6377 2.69245 41.2998 1.87521 39.721 1.25847C38.1934 0.665394 36.4521 0.257347 33.8937 0.145884C31.3353 0.0225003 30.5182 -7.11842e-06 23.997 -7.11842e-06C17.4818 -7.11842e-06 16.6587 0.0225003 14.1003 0.145884C11.5478 0.257347 9.80777 0.665394 8.27299 1.25847C6.70024 1.87521 5.36232 2.69245 4.03037 4.02441C2.69246 5.36232 1.87521 6.70023 1.25963 8.27895C0.666554 9.80065 0.263312 11.5478 0.139929 14.105C0.0284662 16.6634 0 17.4818 0 24.003C0 30.5182 0.0284662 31.3353 0.139929 33.8937C0.263312 36.4463 0.666554 38.1921 1.25963 39.721C1.87521 41.2938 2.69246 42.6377 4.03037 43.9696C5.36232 45.3016 6.70024 46.1248 8.27299 46.7404C9.80777 47.3334 11.5478 47.7367 14.1003 47.8541C16.6587 47.9715 17.4818 48 23.997 48C30.5182 48 31.3353 47.9715 33.8937 47.8541C36.4521 47.7367 38.1934 47.3334 39.721 46.7404C41.2998 46.1248 42.6377 45.3016 43.9696 43.9696C45.3075 42.6377 46.1248 41.2938 46.7344 39.721C47.3334 38.1921 47.7367 36.4463 47.8541 33.8937C47.9715 31.3353 48 30.5182 48 24.003C48 17.4818 47.9715 16.6634 47.8541 14.105V14.105Z\"\r\n        fill=\"url(#paint1_linear_1330_9)\"\r\n      />\r\n      <path\r\n        d=\"M23.9976 31.996C19.5818 31.996 15.9986 28.4187 15.9986 24.0029C15.9986 19.58 19.5818 15.998 23.9976 15.998C28.4147 15.998 32.0026 19.58 32.0026 24.0029C32.0026 28.4187 28.4147 31.996 23.9976 31.996V31.996ZM23.9976 11.6711C17.1907 11.6711 11.6777 17.1959 11.6777 24.0029C11.6777 30.804 17.1907 36.3229 23.9976 36.3229C30.8046 36.3229 36.3235 30.804 36.3235 24.0029C36.3235 17.1959 30.8046 11.6711 23.9976 11.6711Z\"\r\n        fill=\"url(#paint2_linear_1330_9)\"\r\n      />\r\n      <defs>\r\n        <linearGradient\r\n          id=\"paint0_linear_1330_9\"\r\n          x1=\"0.431785\"\r\n          y1=\"47.5037\"\r\n          x2=\"44.001\"\r\n          y2=\"3.93475\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FFD521\" />\r\n          <stop offset=\"0.05\" stopColor=\"#FFD521\" />\r\n          <stop offset=\"0.501119\" stopColor=\"#F50000\" />\r\n          <stop offset=\"0.95\" stopColor=\"#B900B4\" />\r\n          <stop offset=\"0.950079\" stopColor=\"#B900B4\" />\r\n          <stop offset=\"1\" stopColor=\"#B900B4\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint1_linear_1330_9\"\r\n          x1=\"0.432953\"\r\n          y1=\"47.5635\"\r\n          x2=\"44.0379\"\r\n          y2=\"3.95858\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FFD521\" />\r\n          <stop offset=\"0.05\" stopColor=\"#FFD521\" />\r\n          <stop offset=\"0.501119\" stopColor=\"#F50000\" />\r\n          <stop offset=\"0.95\" stopColor=\"#B900B4\" />\r\n          <stop offset=\"0.950079\" stopColor=\"#B900B4\" />\r\n          <stop offset=\"1\" stopColor=\"#B900B4\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint2_linear_1330_9\"\r\n          x1=\"0.444883\"\r\n          y1=\"47.5646\"\r\n          x2=\"44.0393\"\r\n          y2=\"3.97022\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FFD521\" />\r\n          <stop offset=\"0.05\" stopColor=\"#FFD521\" />\r\n          <stop offset=\"0.501119\" stopColor=\"#F50000\" />\r\n          <stop offset=\"0.95\" stopColor=\"#B900B4\" />\r\n          <stop offset=\"0.950079\" stopColor=\"#B900B4\" />\r\n          <stop offset=\"1\" stop-color=\"#B900B4\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Instagram;\r\n","import { SvgIcon } from \"@mui/material\";\r\n\r\nexport const LinkedIn = () => (\r\n  <SvgIcon viewBox=\"0 0 32 32\" fill=\"none\">\r\n    <rect width=\"32\" height=\"32\" rx=\"6\" fill=\"#0077B5\" />\r\n    <path\r\n      d=\"M28.4444 0C29.3874 0 30.2918 0.374602 30.9586 1.0414C31.6254 1.70819 32 2.61256 32 3.55556V28.4444C32 29.3874 31.6254 30.2918 30.9586 30.9586C30.2918 31.6254 29.3874 32 28.4444 32H3.55556C2.61256 32 1.70819 31.6254 1.0414 30.9586C0.374602 30.2918 0 29.3874 0 28.4444V3.55556C0 2.61256 0.374602 1.70819 1.0414 1.0414C1.70819 0.374602 2.61256 0 3.55556 0H28.4444ZM27.5556 27.5556V18.1333C27.5556 16.5963 26.945 15.1221 25.8581 14.0353C24.7712 12.9484 23.2971 12.3378 21.76 12.3378C20.2489 12.3378 18.4889 13.2622 17.6356 14.6489V12.6756H12.6756V27.5556H17.6356V18.7911C17.6356 17.4222 18.7378 16.3022 20.1067 16.3022C20.7668 16.3022 21.3998 16.5644 21.8666 17.0312C22.3333 17.498 22.5956 18.131 22.5956 18.7911V27.5556H27.5556ZM6.89778 9.88445C7.68989 9.88445 8.44956 9.56978 9.00967 9.00967C9.56978 8.44956 9.88445 7.68989 9.88445 6.89778C9.88445 5.24444 8.55111 3.89333 6.89778 3.89333C6.10095 3.89333 5.33676 4.20987 4.77331 4.77331C4.20987 5.33676 3.89333 6.10095 3.89333 6.89778C3.89333 8.55111 5.24444 9.88445 6.89778 9.88445V9.88445ZM9.36889 27.5556V12.6756H4.44444V27.5556H9.36889V27.5556Z\"\r\n      fill=\"#FFFFFF\"\r\n    />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default LinkedIn;\r\n","import { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  ListItemIcon,\r\n  Skeleton,\r\n} from \"@mui/material\";\r\nimport { CircleOutlined, CheckCircleOutlined } from \"@mui/icons-material\";\r\n\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { ActionArea, ActionButton } from \"SharedComponents/CommonComponents\";\r\nimport {\r\n  ContentHeader,\r\n  DrawerInner,\r\n  DrawerWrapper,\r\n  HeaderTitle,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useSocialMediasApi } from \"Contexts/SocialMedias\";\r\nimport { isBackDropOrEscapeKey } from \"Utils\";\r\n\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport SocialMediaApi from \"Apis/SocialMediaApi\";\r\n\r\ntype FaceBookLinkingProps = {\r\n  anchor?: \"bottom\" | \"left\" | \"right\" | \"top\";\r\n  open: boolean;\r\n  closeDrawer: () => void;\r\n};\r\n\r\nconst FaceBookLinking = ({\r\n  anchor = \"right\",\r\n  open,\r\n  closeDrawer,\r\n}: FaceBookLinkingProps) => {\r\n  // contexts\r\n  const { setErrorMessage } = useSnacks();\r\n  const { setPlatform } = useSocialMediasApi();\r\n  // States\r\n  const [\r\n    stage, // ? 1 = facebook & 2 = instagram\r\n    setStage,\r\n  ] = useState(1);\r\n  const [selected, setSelected] = useState<number | null>(null);\r\n  const [FBPages, setFBPages] = useState<any[]>([]);\r\n  const [noUserPagesFoundError, setNoUserPagesFoundError] =\r\n    useState<boolean>(false);\r\n  const [IGAccount, setIGAccount] = useState<any | null>(null);\r\n  const ListItemImage = ({ src, alt }: { src: string; alt: string }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const onImageLoad = () => setLoading(false);\r\n\r\n    return (\r\n      <ListItemAvatar>\r\n        {loading && (\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"avatar\"\r\n            width={50}\r\n            height={50}\r\n          />\r\n        )}\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          onLoad={onImageLoad}\r\n          className={`avatar${loading ? \" hidden\" : \"\"}`}\r\n          width={loading ? 0 : 50}\r\n          height={loading ? 0 : 50}\r\n        />\r\n      </ListItemAvatar>\r\n    );\r\n  };\r\n  // Event handlers\r\n  const handleConfirmItemSelect = async () => {\r\n    try {\r\n      // fetch the page details from selected page id\r\n      if (stage === 1) {\r\n        // handle select fb page\r\n        const selectedPage = FBPages.find(\r\n          (fbPage) => fbPage.page_id === selected\r\n        );\r\n        // save the page data\r\n        const page = {\r\n          img_url: selectedPage.profile_image_url,\r\n          page_id: selectedPage.page_id,\r\n          page_name: selectedPage.page_name,\r\n        };\r\n        const res = await SocialMediaApi.saveFBPageData(page);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        if (res.success) {\r\n          setStage(2);\r\n          setSelected(null);\r\n        }\r\n      } else if (stage === 2) {\r\n        // handle select ig account\r\n        if (!IGAccount) {\r\n          return setErrorMessage(\"Please select an instagram account\");\r\n        }\r\n        const igReqData = {\r\n          account_id: IGAccount.igAccID,\r\n          profile_picture: IGAccount.image,\r\n          name: IGAccount.name,\r\n          username: IGAccount.username,\r\n        };\r\n        const res = await SocialMediaApi.saveIgAccountData(igReqData);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        if (res.success) {\r\n          // close the drawer\r\n          setPlatform(null);\r\n          setStage(1);\r\n          setSelected(null);\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n  const linkingCall = useCallback(async () => {\r\n    try {\r\n      if (open) {\r\n        if (stage === 1) {\r\n          const res = await SocialMediaApi.getBusinessFBPages();\r\n          if (!res.success) {\r\n            throw Error(res.message);\r\n          }\r\n          const { payload: fb_pages } = res;\r\n          if (!fb_pages.length) {\r\n            return setNoUserPagesFoundError(true);\r\n          }\r\n          setFBPages(fb_pages);\r\n        } else if (stage === 2) {\r\n          const res = await SocialMediaApi.getIgAccountData();\r\n          if (!res.success) {\r\n            throw Error(res.message);\r\n          }\r\n          if (res.message === \"not found\") {\r\n            window.open(res.payload, \"_blank\");\r\n          } else {\r\n            const igAccData = {\r\n              igAccID: res.payload.account_id,\r\n              name: res.payload.name,\r\n              username: res.payload.username,\r\n              image: res.payload.profile_picture,\r\n              // selected: false,\r\n            };\r\n            setIGAccount(igAccData);\r\n          }\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [open, stage]);\r\n\r\n  // component effects\r\n  useEffect(() => {\r\n    linkingCall();\r\n  }, [linkingCall]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={anchor}\r\n      open={open}\r\n      onClose={(_, reason) => {\r\n        if (!isBackDropOrEscapeKey(reason)) {\r\n          closeDrawer();\r\n        }\r\n      }}\r\n      sx={{ zIndex: \"modal\" }}\r\n    >\r\n      <DrawerWrapper sx={{ width: { xs: \"100vw\", md: 360 } }}>\r\n        <ContentHeader>\r\n          <IconButton\r\n            onClick={() => closeDrawer()}\r\n            sx={{ width: 32, height: 32 }}\r\n          >\r\n            <LeftArrow />\r\n          </IconButton>\r\n          <HeaderTitle>\r\n            {stage === 1 ? \"Select Facebook Page\" : \"Select Instagram Account\"}\r\n          </HeaderTitle>\r\n        </ContentHeader>\r\n        <DrawerInner>\r\n          {stage === 1 ? (\r\n            <Fragment>\r\n              {noUserPagesFoundError && (\r\n                <p>\r\n                  Sorry, we couldn't find any Facebook page associated with your\r\n                  account.\r\n                </p>\r\n              )}\r\n              {FBPages.length > 0 && (\r\n                <List>\r\n                  {FBPages.map((page) => (\r\n                    <div key={page.page_id}>\r\n                      <ListItem sx={{ p: 0 }}>\r\n                        <ListItemButton\r\n                          onClick={() =>\r\n                            setSelected(selected ? null : page.page_id)\r\n                          }\r\n                        >\r\n                          {/* <ListItemImage src={\"image\"} alt={\"name\"} /> */}\r\n                          <ListItemImage\r\n                            src={page.profile_image_url}\r\n                            alt={\"FB page image url\"}\r\n                          />\r\n                          <ListItemText\r\n                            primary={page.page_name}\r\n                            secondary={\r\n                              page.isUsedByBusiness\r\n                                ? \"Page already in use\"\r\n                                : undefined\r\n                            }\r\n                          />\r\n                          <ListItemIcon>\r\n                            {selected === page.page_id ? (\r\n                              <CheckCircleOutlined sx={{ color: \"#12B0EE\" }} />\r\n                            ) : (\r\n                              <CircleOutlined sx={{ color: \"#F75D34\" }} />\r\n                            )}\r\n                          </ListItemIcon>\r\n                        </ListItemButton>\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </div>\r\n                  ))}\r\n                </List>\r\n              )}\r\n            </Fragment>\r\n          ) : (\r\n            <List>\r\n              {IGAccount && (\r\n                <Fragment>\r\n                  <ListItem sx={{ p: 0 }}>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        setSelected(selected ? null : IGAccount.igAccID)\r\n                      }\r\n                    >\r\n                      <ListItemImage src={IGAccount.image} alt={\"name\"} />\r\n                      <ListItemText primary={IGAccount.name} />\r\n                      <ListItemIcon>\r\n                        {selected === IGAccount.igAccID ? (\r\n                          <CheckCircleOutlined sx={{ color: \"#12B0EE\" }} />\r\n                        ) : (\r\n                          <CircleOutlined sx={{ color: \"#24272C80\" }} />\r\n                        )}\r\n                      </ListItemIcon>\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </Fragment>\r\n              )}\r\n            </List>\r\n          )}\r\n          <ActionArea>\r\n            <ActionButton\r\n              variant=\"contained\"\r\n              style={{\r\n                marginTop: \"40px\",\r\n                marginBottom: \"30px\",\r\n                marginLeft: 0,\r\n              }}\r\n              disabled={selected === null}\r\n              onClick={handleConfirmItemSelect}\r\n            >\r\n              {stage === 1\r\n                ? \"Link & Continue to Instagram\"\r\n                : \"Link Instagram Account\"}\r\n            </ActionButton>\r\n          </ActionArea>\r\n        </DrawerInner>\r\n      </DrawerWrapper>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FaceBookLinking;\r\n","type IPermission = {\r\n  name: string;\r\n  desc: string;\r\n};\r\n\r\nconst FB_IG: IPermission[] = [\r\n  {\r\n    name: \"pages_manage_cta\",\r\n    desc: \"The pages_manage_cta permission allows your app to carry out POST and DELETE functions on endpoints used to manage call-to-action buttons on a Facebook Page.\",\r\n  },\r\n  {\r\n    name: \"pages_read_engagement\",\r\n    desc: \"The pages_read_engagement permission allows your app to read content (posts, photos, videos, events) posted by the Page, read followers data (including name, PSID), and profile picture, and read metadata and other insights about the Page.\",\r\n  },\r\n  {\r\n    name: \"pages_read_user_content\",\r\n    desc: \"The pages_read_user_content permission allows your app to read user-generated content on the Page, such as posts, comments and ratings by users or other Pages, and to delete user comments on Page posts.\",\r\n  },\r\n  {\r\n    name: \"pages_manage_posts\",\r\n    desc: \"The pages_manage_posts permission allows your app to create, edit and delete your Page posts.\",\r\n  },\r\n  {\r\n    name: \"ads_management\",\r\n    desc: \"The ads_management permission allows your app to both read and manage the Ads account it owns, or has been granted access to, by the Ad account owner.\",\r\n  },\r\n  {\r\n    name: \"ads_read\",\r\n    desc: \"The ads_read permission allows your app to access the Ads Insights API to pull Ads report information for Ad accounts you own or have been granted access to by the owner or owners of other ad accounts through this permission. This permissions also grants your app access to the Server-Side API to allow advertisers to send web events from their servers directly to\",\r\n  },\r\n  {\r\n    name: \"leads_retrieval\",\r\n    desc: \"The leads_retrieval permission allows your app to retrieve and read all information captured by a lead ads form associated with an ad created in Ads Manager or the Marketing API.\",\r\n  },\r\n  {\r\n    name: \"instagram_basic\",\r\n    desc: \"The instagram_basic permission allows your app to read an Instagram account profile's info and media.\",\r\n  },\r\n  {\r\n    name: \"instagram_manage_comments\",\r\n    desc: \"The instagram_manage_comments permission allows your app to create, delete and hide comments on behalf of the Instagram account linked to a Page. Your app can also read and respond to public media and comments that a business has been photo tagged or @mentioned in.\",\r\n  },\r\n  {\r\n    name: \"read_insights\",\r\n    desc: \"The read_insights permission allows your app to read the Insights data for Pages, apps and web domains the person owns.\",\r\n  },\r\n  {\r\n    name: \"instagram_content_publish\",\r\n    desc: \"The instagram_content_publish permission allows your app to create organic feed photo and video posts on behalf of a business user.\",\r\n  },\r\n  {\r\n    name: \"instagram_manage_insights\",\r\n    desc: \"The instagram_manage_insights permission allows your app to get access to insights for the Instagram account linked to a Facebook Page. Your app can also discover and read the profile info and media of other business profiles.\",\r\n  },\r\n  {\r\n    name: \"pages_manage_engagement\",\r\n    desc: \"The pages_manage_engagement permission allows your app to create, edit and delete comments posted on the Page.\",\r\n  },\r\n];\r\n\r\nconst TW: IPermission[] = [\r\n  {\r\n    name: \"Read only\",\r\n    desc: \"This permission level permits read access to Twitter resources, including (for example) a user’s Tweets, home timeline, and profile information. It does not allow access to read a user’s Direct Messages, and it does not allow to update any element or object.\",\r\n  },\r\n  {\r\n    name: \"Read and write\",\r\n    desc: \"This permission level permits read and write access to Twitter resources. In addition to allowing read access, it also allow to post Tweets, follow users, or update elements of a user’s profile information. It also allow to hide replies on behalf of the authenticating user. This permission level does not allow any access to Direct Messages (including read, write, or delete).\",\r\n  },\r\n];\r\n\r\nconst LI: IPermission[] = [\r\n  {\r\n    name: \"r_emailaddress\",\r\n    desc: \"Use the primary email address associated with your LinkedIn account\",\r\n  },\r\n  {\r\n    name: \"r_liteprofile\",\r\n    desc: \"Use your name and photo\",\r\n  },\r\n  {\r\n    name: \"r_basicprofile\",\r\n    desc: \"Use your basic profile including your name, photo, headline, and public profile URL\",\r\n  },\r\n  {\r\n    name: \"r_organization_social\",\r\n    desc: \"Retrieve your organization's posts, comments, reactions, and other engagement data\",\r\n  },\r\n  {\r\n    name: \"w_member_social\",\r\n    desc: \"Create, modify, and delete posts, comments, and reactions on your behalf\",\r\n  },\r\n  {\r\n    name: \"w_organization_social\",\r\n    desc: \"Create, modify, and delete posts, comments, and reactions on your organization's behalf\",\r\n  },\r\n  {\r\n    name: \"rw_organization_admin\",\r\n    desc: \"Manage your organizations' pages and retrieve reporting data\",\r\n  },\r\n  {\r\n    name: \"r_1st_connections_size\",\r\n    desc: \"Use your 1st-degree connections' data\",\r\n  },\r\n  {\r\n    name: \"r_ads_reporting\",\r\n    desc: \"Retrieve reporting for your advertising accounts\",\r\n  },\r\n  {\r\n    name: \"r_ads\",\r\n    desc: \"Retrieve your advertising accounts\",\r\n  },\r\n  {\r\n    name: \"rw_ads\",\r\n    desc: \"Manage your advertising accounts\",\r\n  },\r\n];\r\n\r\nexport { FB_IG, TW, LI };\r\n","import { FC, Fragment } from \"react\";\r\n\r\nimport { FB_IG, LI, TW } from \"Constants/BusinessSettings/SocialMediaLinking\";\r\nimport {\r\n  PermissionDesc,\r\n  PermissionHeading,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\n\r\ninterface IPermissionsProps {\r\n  platform: string;\r\n}\r\n\r\ninterface IPermission {\r\n  name: string;\r\n  desc: string;\r\n}\r\n\r\nconst Permissions: FC<IPermissionsProps> = ({\r\n  platform,\r\n}: IPermissionsProps): JSX.Element => (\r\n  <Fragment>\r\n    {(platform === \"facebook and instagram\" ||\r\n      platform === \"facebook\" ||\r\n      platform === \"instagram\" ||\r\n      platform === \"\") &&\r\n      FB_IG.map(({ name, desc }: IPermission, idx: number) => (\r\n        <Fragment key={idx}>\r\n          <PermissionHeading>{name}</PermissionHeading>\r\n          <PermissionDesc>{desc}</PermissionDesc>\r\n        </Fragment>\r\n      ))}\r\n    {platform === \"twitter\" &&\r\n      TW.map(({ name, desc }: IPermission, idx: number) => (\r\n        <Fragment key={idx}>\r\n          <PermissionHeading>{name}</PermissionHeading>\r\n          <PermissionDesc>{desc}</PermissionDesc>\r\n        </Fragment>\r\n      ))}\r\n    {platform === \"linkedin\" &&\r\n      LI.map(({ name, desc }: IPermission, idx: number) => (\r\n        <Fragment key={idx}>\r\n          <PermissionHeading>{name}</PermissionHeading>\r\n          <PermissionDesc>{desc}</PermissionDesc>\r\n        </Fragment>\r\n      ))}\r\n  </Fragment>\r\n);\r\n\r\nexport default Permissions;\r\n","import { Drawer, IconButton } from \"@mui/material\";\r\n\r\nimport {\r\n  ContentHeader,\r\n  DrawerInner,\r\n  DrawerWrapper,\r\n  HeaderSubTitle,\r\n  HeaderTitle,\r\n  HeaderTitles,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useSocialMediasData } from \"Contexts/SocialMedias\";\r\nimport { isBackDropOrEscapeKey } from \"Utils\";\r\n\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport Permissions from \"./Permissions\";\r\n\r\ninterface ViewPermissionsProps {\r\n  anchor?: \"bottom\" | \"left\" | \"right\" | \"top\";\r\n  closeDrawer: () => void;\r\n}\r\n\r\nconst ViewPermissions = ({\r\n  anchor = \"right\",\r\n  closeDrawer,\r\n}: ViewPermissionsProps) => {\r\n  const { permissions } = useSocialMediasData();\r\n  const getSubtitle = () =>\r\n    ({\r\n      twitter: \"Twitter\",\r\n      linkedin: \"LinkedIn\",\r\n      facebook: \"Facebook & Instagram\",\r\n      instagram: \"Facebook & Instagram\",\r\n      \"\": \"Facebook & Instagram\",\r\n    }[permissions.provider]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={anchor}\r\n      open={permissions.show}\r\n      onClose={(_, reason) => !isBackDropOrEscapeKey(reason) && closeDrawer()}\r\n      sx={{\r\n        zIndex: \"modal\",\r\n      }}\r\n    >\r\n      <DrawerWrapper sx={{ width: { xs: \"100vw\", md: 360 } }}>\r\n        <ContentHeader>\r\n          <IconButton\r\n            onClick={() => closeDrawer()}\r\n            sx={{ width: 32, height: 32 }}\r\n          >\r\n            <LeftArrow />\r\n          </IconButton>\r\n          <HeaderTitles>\r\n            <HeaderTitle>{`Permissions Granted`}</HeaderTitle>\r\n            <HeaderSubTitle>{getSubtitle()}</HeaderSubTitle>\r\n          </HeaderTitles>\r\n        </ContentHeader>\r\n        <DrawerInner sx={{ pb: 2.5 }}>\r\n          <Permissions platform={permissions.provider} />\r\n        </DrawerInner>\r\n      </DrawerWrapper>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ViewPermissions;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Skeleton,\r\n} from \"@mui/material\";\r\n\r\nimport { ActionArea, ActionButton } from \"SharedComponents/CommonComponents\";\r\nimport {\r\n  ContentHeader,\r\n  DrawerInner,\r\n  DrawerWrapper,\r\n  HeaderTitle,\r\n  LoaderWrapper,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useSocialMediasApi, useSocialMediasData } from \"Contexts/SocialMedias\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { isBackDropOrEscapeKey } from \"Utils\";\r\n\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport SocialMediaApi from \"Apis/SocialMediaApi\";\r\nimport { CheckCircleOutlined, CircleOutlined } from \"@mui/icons-material\";\r\n\r\ninterface LinkedInLinkingProps {\r\n  anchor?: \"bottom\" | \"left\" | \"right\" | \"top\";\r\n  open: boolean;\r\n  closeDrawer: () => void;\r\n}\r\n\r\nconst LinkedInLinking = ({\r\n  anchor = \"right\",\r\n  open,\r\n  closeDrawer,\r\n}: LinkedInLinkingProps) => {\r\n  const { LIUser } = useSocialMediasData();\r\n  const { setLIUser, setPlatform } = useSocialMediasApi();\r\n  const { setErrorMessage } = useSnacks();\r\n  const [showLoading, setShowLoading] = useState<boolean>(true);\r\n  const [selected, setSelected] = useState<string | null>(null);\r\n  const [pages, setPages] = useState<any[]>([]);\r\n  const [noUserOrgPagesFound, setNoUserOrgPagesFound] =\r\n    useState<boolean>(false);\r\n  const [disableBtn, setDisableBtn] = useState<boolean>(true);\r\n  const ListItemImage = ({ src, alt }: { src: string; alt: string }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const onImageLoad = () => setLoading(false);\r\n\r\n    return (\r\n      <ListItemAvatar>\r\n        {loading && (\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"avatar\"\r\n            width={50}\r\n            height={50}\r\n          />\r\n        )}\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          onLoad={onImageLoad}\r\n          className={`avatar${loading ? \" hidden\" : \"\"}`}\r\n          width={loading ? 0 : 50}\r\n          height={loading ? 0 : 50}\r\n        />\r\n      </ListItemAvatar>\r\n    );\r\n  };\r\n  const handleLISetup = async () => {\r\n    try {\r\n      const liOrg = pages.find((page) => page.orgID === selected);\r\n      if (!liOrg) {\r\n        throw Error(\"Error finding organization!\");\r\n      }\r\n      if (LIUser === null) {\r\n        throw Error(\"LinkedIn User data not found.\");\r\n      }\r\n      const { orgID, image: orgLogo, name: orgName } = liOrg;\r\n      const { token, tokenSecret, id: userID } = LIUser;\r\n      const liRequestData = {\r\n        orgID,\r\n        orgLogo,\r\n        orgName,\r\n        token,\r\n        tokenSecret,\r\n        linkedinUserId: userID,\r\n      };\r\n      const res = await SocialMediaApi.setLinkedinBusiness(liRequestData);\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      }\r\n      setPlatform(null);\r\n      setLIUser(null);\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n  const fetchLiUserPages = useCallback(async () => {\r\n    try {\r\n      if (LIUser) {\r\n        const { token: liToken } = LIUser;\r\n        const res = await SocialMediaApi.getLiUserPages({ liToken });\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        const { payload } = res;\r\n        console.log(\"fetch li user pages data: \", payload);\r\n        if (!payload) {\r\n          return setErrorMessage(\"No organization data found in response!\");\r\n        }\r\n        if (payload && !payload.length) {\r\n          setShowLoading(false);\r\n          setErrorMessage(\"No user linkedin organization pages found!\");\r\n          setNoUserOrgPagesFound(true);\r\n          setDisableBtn(true);\r\n        } else {\r\n          // render the pages in the UI by setting state\r\n          const liOrgData = payload.map((org: any) => {\r\n            return {\r\n              orgID: org.id,\r\n              image: org.logo,\r\n              name: org.name,\r\n              selected: false,\r\n              //inUse: org.inUse,\r\n              inUse: false,\r\n            };\r\n          });\r\n          setShowLoading(false);\r\n          setDisableBtn(false);\r\n          setPages(liOrgData);\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [LIUser]);\r\n\r\n  useEffect(() => {\r\n    fetchLiUserPages();\r\n  }, [fetchLiUserPages]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={anchor}\r\n      open={open}\r\n      onClose={(_, reason) => !isBackDropOrEscapeKey(reason) && closeDrawer()}\r\n      sx={{\r\n        zIndex: \"modal\",\r\n      }}\r\n    >\r\n      <DrawerWrapper sx={{ width: { xs: \"100vw\", md: 360 } }}>\r\n        <ContentHeader>\r\n          <IconButton\r\n            onClick={() => closeDrawer()}\r\n            sx={{ width: 32, height: 32 }}\r\n          >\r\n            <LeftArrow />\r\n          </IconButton>\r\n          <HeaderTitle>Select Linkedin Page</HeaderTitle>\r\n        </ContentHeader>\r\n        <DrawerInner>\r\n          {showLoading && (\r\n            <LoaderWrapper>\r\n              <CircularProgress />\r\n            </LoaderWrapper>\r\n          )}\r\n          {noUserOrgPagesFound && (\r\n            <p>\r\n              Sorry, we could not find any LinkedIn organization page associated\r\n              with your account.\r\n            </p>\r\n          )}\r\n          {pages.length > 0 && (\r\n            <List>\r\n              {pages.map((page) => (\r\n                <div key={page.orgID}>\r\n                  <ListItem sx={{ p: 0 }}>\r\n                    <ListItemButton\r\n                      onClick={() => setSelected(selected ? null : page.orgID)}\r\n                    >\r\n                      <ListItemImage\r\n                        src={page.image}\r\n                        alt={\"LI organization profile image\"}\r\n                      />\r\n                      <ListItemText\r\n                        primary={page.name}\r\n                        secondary={\r\n                          page.inUse ? \"Page already in use\" : undefined\r\n                        }\r\n                      />\r\n                      <ListItemIcon>\r\n                        {selected === page.orgID ? (\r\n                          <CheckCircleOutlined sx={{ color: \"#12B0EE\" }} />\r\n                        ) : (\r\n                          <CircleOutlined sx={{ color: \"#F75D34\" }} />\r\n                        )}\r\n                      </ListItemIcon>\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              ))}\r\n            </List>\r\n          )}\r\n          <ActionArea>\r\n            <ActionButton\r\n              variant=\"contained\"\r\n              style={{\r\n                marginTop: \"40px\",\r\n                marginBottom: \"30px\",\r\n                marginLeft: 0,\r\n              }}\r\n              disabled={disableBtn}\r\n              onClick={handleLISetup}\r\n            >\r\n              {\"Link LinkedIn Account\"}\r\n            </ActionButton>\r\n          </ActionArea>\r\n        </DrawerInner>\r\n      </DrawerWrapper>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default LinkedInLinking;\r\n","import {\r\n  Fragment,\r\n  MouseEventHandler,\r\n  useCallback,\r\n  useEffect,\r\n  // useState,\r\n} from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  List,\r\n  Link,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport FacebookLogin, {\r\n  LoginResponse,\r\n} from \"@greatsumini/react-facebook-login\";\r\n\r\nimport { useGlobal } from \"Contexts/App\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { useSocialMediasApi, useSocialMediasData } from \"Contexts/SocialMedias\";\r\nimport {\r\n  CardSX,\r\n  CardContentSX,\r\n  CardHeading,\r\n  Content,\r\n  ContentHeader,\r\n  ContentInner,\r\n  HeaderTitle,\r\n  ContentWrapper,\r\n  CardList,\r\n  CardListItem,\r\n  CardListTitle,\r\n  FbButtonSx,\r\n  InButtonSx,\r\n  TwButtonSx,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { IAccounts } from \"Shared/Interfaces/SocialMedias\";\r\nimport { formatFB_IGAccountsArray } from \"Utils\";\r\nimport SocialMediaApi from \"Apis/SocialMediaApi\";\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  LinkedIn,\r\n  LeftArrow,\r\n  Twitter,\r\n} from \"Assets/Icons\";\r\nimport { AppLink } from \"Components/Common\";\r\n\r\nimport FaceBookLinking from \"./SocialMediaLinking/FaceBookLinking\";\r\nimport ViewPermissions from \"./SocialMediaLinking/ViewPermissions\";\r\nimport LinkedInLinking from \"./SocialMediaLinking/LinkedInLinking\";\r\n\r\nconst SocialMediaLinking = () => {\r\n  const pageTitle = \"Social Media Linking\";\r\n  const { isMobile, businessId } = useGlobal();\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const { connectedAccounts, unconnectedAccounts, platform } =\r\n    useSocialMediasData();\r\n  const {\r\n    setConnectedAccounts,\r\n    setUnconnectedAccounts,\r\n    setPlatform,\r\n    setPermissions,\r\n  } = useSocialMediasApi();\r\n  const HandleFBResponse = async (response: LoginResponse[\"authResponse\"]) => {\r\n    if (!response) {\r\n      return;\r\n    }\r\n    if (!(\"accessToken\" in response) && !(\"userID\" in response)) {\r\n      setErrorMessage(\"Problem logging in with Facebook!\");\r\n      return;\r\n    }\r\n\r\n    const fbData = {\r\n      businessId,\r\n      fb_user_id: response.userID,\r\n      short_lived_token: response.accessToken,\r\n    };\r\n\r\n    try {\r\n      const res = await SocialMediaApi.saveFBUserData(businessId, fbData);\r\n      if (res.success) {\r\n        setPlatform(\"facebook\");\r\n      } else {\r\n        setErrorMessage(\r\n          res.messages ? res.messages.errors[0].message : res.message\r\n        );\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n  const handleTWLogin: MouseEventHandler = () => {\r\n    localStorage.setItem(\"esUpdateTWAccount\", \"true\");\r\n    window.open(\r\n      `${process.env.REACT_APP_API_URL}/${process.env.REACT_APP_API_VER}/twitter/login`,\r\n      \"_self\"\r\n    );\r\n  };\r\n  const handleLILogin: MouseEventHandler = () => {\r\n    localStorage.setItem(\"esUpdateLIAccount\", \"true\");\r\n    window.open(\r\n      `${process.env.REACT_APP_API_URL}/${process.env.REACT_APP_API_VER}/setup/linkedin/login`,\r\n      \"_self\"\r\n    );\r\n  };\r\n  const handleUnlinkAccounts = async (platform: string) => {\r\n    try {\r\n      const res = await SocialMediaApi.unlinkSocialMediaAccount({\r\n        platform: platform.toUpperCase(),\r\n        product: \"curate\",\r\n      });\r\n      if (res.success) {\r\n        const unlinkAccountMsg: string = `${`${platform\r\n          .charAt(0)\r\n          .toUpperCase()}${platform.slice(1)}`} unlinked!`;\r\n        setSuccessMessage(unlinkAccountMsg);\r\n        let newConnectedAccounts;\r\n        if (platform === \"facebook\" || platform === \"instagram\") {\r\n          newConnectedAccounts = connectedAccounts.filter(\r\n            (acc) => acc.platform !== platform\r\n          );\r\n          setConnectedAccounts(newConnectedAccounts);\r\n          if (!unconnectedAccounts.includes(\"facebook and instagram\")) {\r\n            setUnconnectedAccounts(\r\n              formatFB_IGAccountsArray([...unconnectedAccounts, platform])\r\n            );\r\n          }\r\n        } else {\r\n          newConnectedAccounts = connectedAccounts.filter(\r\n            (acc) => acc.platform !== platform\r\n          );\r\n          setConnectedAccounts(newConnectedAccounts);\r\n          setUnconnectedAccounts(\r\n            formatFB_IGAccountsArray([...unconnectedAccounts, platform])\r\n          );\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n  const loadSetupInfo = useCallback(async () => {\r\n    try {\r\n      const res = await SocialMediaApi.getSetupInfo();\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      } else {\r\n        setConnectedAccounts(res.payload.connectedAccounts);\r\n        setUnconnectedAccounts(\r\n          formatFB_IGAccountsArray(res.payload.unconnectedAccounts)\r\n        );\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [platform]);\r\n\r\n  useEffect(() => {\r\n    loadSetupInfo();\r\n  }, [loadSetupInfo]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n      </Helmet>\r\n      <Content>\r\n        {isMobile && (\r\n          <ContentHeader>\r\n            <IconButton\r\n              component={AppLink}\r\n              to=\"/business-settings\"\r\n              sx={{ width: 32, height: 32 }}\r\n            >\r\n              <LeftArrow />\r\n            </IconButton>\r\n            <HeaderTitle>{pageTitle}</HeaderTitle>\r\n          </ContentHeader>\r\n        )}\r\n        <ContentInner>\r\n          <ContentWrapper>\r\n            {connectedAccounts.length > 0 && (\r\n              <Card elevation={0} sx={CardSX}>\r\n                <CardContent sx={CardContentSX}>\r\n                  <CardHeading\r\n                    sx={{\r\n                      borderBottom: \"1px solid #24272C1f\",\r\n                      pb: 2,\r\n                    }}\r\n                  >\r\n                    Linked Accounts\r\n                  </CardHeading>\r\n                  <List>\r\n                    {connectedAccounts.map(\r\n                      ({\r\n                        platform,\r\n                        accountProfileIMG,\r\n                        accountID,\r\n                        accountName,\r\n                      }: IAccounts) =>\r\n                        platform === \"facebook and instagram\" ? (\r\n                          <ListItem\r\n                            sx={{\r\n                              alignItems: \"flex-start\",\r\n                              p: 0,\r\n                              mb: 3.75,\r\n                              flexWrap: \"wrap\",\r\n                            }}\r\n                          >\r\n                            <ListItemText primary={platform} />\r\n                            <ListItemAvatar>\r\n                              <Facebook />\r\n                              <Instagram />\r\n                            </ListItemAvatar>\r\n                            <div className=\"linked-account\">\r\n                              <figure>\r\n                                <img\r\n                                  src={\"logoURL\"}\r\n                                  alt={\"logoURL\"}\r\n                                  height={40}\r\n                                  width={40}\r\n                                />\r\n                              </figure>\r\n                              <span className=\"account-name\">{\"xyz\"}</span>\r\n                            </div>\r\n                            <div className=\"actions\">\r\n                              <Link underline=\"always\" onClick={() => {}}>\r\n                                {\"Unlink Account\"}\r\n                              </Link>\r\n                              <Link\r\n                                underline=\"always\"\r\n                                onClick={() => {\r\n                                  setPermissions({\r\n                                    show: true,\r\n                                    provider: \"facebook\",\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {\"View Permissions\"}\r\n                              </Link>\r\n                            </div>\r\n                          </ListItem>\r\n                        ) : (\r\n                          <ListItem\r\n                            sx={{\r\n                              alignItems: \"flex-start\",\r\n                              p: 0,\r\n                              mb: 3.75,\r\n                              flexWrap: \"wrap\",\r\n                            }}\r\n                            key={accountID}\r\n                          >\r\n                            <ListItemText\r\n                              primary={`${platform\r\n                                .charAt(0)\r\n                                .toUpperCase()}${platform.slice(1)}`}\r\n                              sx={{ mb: 1.5 }}\r\n                            />\r\n                            <ListItemAvatar\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                columnGap: 1.25,\r\n                                mt: 0.5,\r\n                                justifyContent: \"end\",\r\n                              }}\r\n                            >\r\n                              <img\r\n                                src={`/static/images/svg/${platform}.svg`}\r\n                                alt={platform}\r\n                                height={18}\r\n                                width={18}\r\n                              />\r\n                            </ListItemAvatar>\r\n                            <Box\r\n                              sx={{\r\n                                width: \"100%\",\r\n                                display: \"flex\",\r\n                                columnGap: 1.5,\r\n                                alignItems: \"center\",\r\n                                mb: 1,\r\n                                justifyContent: \"flex-start\",\r\n                              }}\r\n                            >\r\n                              <Box component=\"figure\" sx={{ display: \"flex\" }}>\r\n                                <img\r\n                                  src={accountProfileIMG}\r\n                                  alt={accountProfileIMG}\r\n                                  height={40}\r\n                                  width={40}\r\n                                />\r\n                              </Box>\r\n                              <span className=\"account-name\">\r\n                                {accountName}\r\n                              </span>\r\n                            </Box>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                columnGap: 4,\r\n                                justifyContent: \"space-between\",\r\n                              }}\r\n                            >\r\n                              <Link\r\n                                underline=\"always\"\r\n                                onClick={() => handleUnlinkAccounts(platform)}\r\n                                sx={{\r\n                                  color: \"#656F7A\",\r\n                                  cursor: \"pointer\",\r\n                                  fontSize: 12,\r\n                                  fontWeight: 500,\r\n                                  lineHeight: \"14px\",\r\n                                  textDecorationColor: \"#656F7A\",\r\n                                }}\r\n                              >\r\n                                {\"Unlink Account\"}\r\n                              </Link>\r\n                              <Link\r\n                                underline=\"always\"\r\n                                onClick={() =>\r\n                                  setPermissions({\r\n                                    show: true,\r\n                                    provider: platform,\r\n                                  })\r\n                                }\r\n                                sx={{\r\n                                  color: \"#656F7A\",\r\n                                  cursor: \"pointer\",\r\n                                  fontSize: 12,\r\n                                  fontWeight: 500,\r\n                                  lineHeight: \"14px\",\r\n                                  textDecorationColor: \"#656F7A\",\r\n                                }}\r\n                              >\r\n                                {\"View Permissions\"}\r\n                              </Link>\r\n                            </Box>\r\n                          </ListItem>\r\n                        )\r\n                    )}\r\n                  </List>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n            {unconnectedAccounts.length > 0 && (\r\n              <Card elevation={0} sx={CardSX}>\r\n                <CardContent sx={CardContentSX}>\r\n                  <CardHeading\r\n                    sx={{\r\n                      borderBottom: \"1px solid #24272C1f\",\r\n                      pb: 2,\r\n                    }}\r\n                  >\r\n                    Link More Accounts\r\n                  </CardHeading>\r\n                  <CardList>\r\n                    {unconnectedAccounts.map((account: string, idx: number) => {\r\n                      return (\r\n                        <div key={idx}>\r\n                          {(account === \"facebook\" ||\r\n                            account === \"instagram\") && (\r\n                            <CardListItem>\r\n                              <CardListTitle>\r\n                                {`${account\r\n                                  .charAt(0)\r\n                                  .toUpperCase()}${account.slice(1)}`}\r\n                              </CardListTitle>\r\n                              <FacebookLogin\r\n                                appId={process.env.REACT_APP_APP_ID ?? \"\"}\r\n                                fields=\"name,email,picture\"\r\n                                scope=\"pages_manage_cta,pages_read_engagement,pages_manage_posts,instagram_basic,instagram_manage_comments,read_insights,instagram_content_publish,instagram_manage_insights,pages_manage_engagement\"\r\n                                onSuccess={HandleFBResponse}\r\n                                render={(renderProps: any) => (\r\n                                  <Button\r\n                                    onClick={() => {\r\n                                      renderProps.onClick();\r\n                                    }}\r\n                                    sx={FbButtonSx}\r\n                                  >\r\n                                    <Facebook />\r\n                                    <span className=\"label\">\r\n                                      {\"Sign In with Facebook\"}\r\n                                    </span>\r\n                                  </Button>\r\n                                )}\r\n                              />\r\n                            </CardListItem>\r\n                          )}\r\n                          {account === \"facebook and instagram\" && (\r\n                            <CardListItem>\r\n                              <CardListTitle>\r\n                                {`Facebook and Instagram`}\r\n                              </CardListTitle>\r\n                              <FacebookLogin\r\n                                appId={process.env.REACT_APP_APP_ID ?? \"\"}\r\n                                fields=\"name,email,picture\"\r\n                                scope=\"pages_manage_cta,pages_read_engagement,pages_manage_posts,instagram_basic,instagram_manage_comments,read_insights,instagram_content_publish,instagram_manage_insights,pages_manage_engagement\"\r\n                                onSuccess={HandleFBResponse}\r\n                                render={(renderProps: any) => (\r\n                                  <Button\r\n                                    onClick={() => {\r\n                                      renderProps.onClick();\r\n                                    }}\r\n                                    sx={FbButtonSx}\r\n                                  >\r\n                                    <Facebook bg=\"#FFFFFF\" />\r\n                                    <span className=\"label\">\r\n                                      {\"Sign In with Facebook\"}\r\n                                    </span>\r\n                                  </Button>\r\n                                )}\r\n                              />\r\n                            </CardListItem>\r\n                          )}\r\n                          {false && account === \"twitter\" && (\r\n                            <CardListItem>\r\n                              <CardListTitle>{\"Twitter\"}</CardListTitle>\r\n                              <Button onClick={handleTWLogin} sx={TwButtonSx}>\r\n                                <Twitter />\r\n                                <span className=\"label\">\r\n                                  {\"Sign in with Twitter\"}\r\n                                </span>\r\n                              </Button>\r\n                            </CardListItem>\r\n                          )}\r\n                          {account === \"linkedin\" && (\r\n                            <CardListItem>\r\n                              <CardListTitle>{\"LinkedIn\"}</CardListTitle>\r\n                              <Button onClick={handleLILogin} sx={InButtonSx}>\r\n                                <LinkedIn />\r\n                                <span className=\"label\">\r\n                                  {\"Sign in with LinkedIn\"}\r\n                                </span>\r\n                              </Button>\r\n                            </CardListItem>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </CardList>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </ContentWrapper>\r\n        </ContentInner>\r\n      </Content>\r\n      <ViewPermissions\r\n        closeDrawer={() =>\r\n          setPermissions({\r\n            show: false,\r\n            provider: \"\",\r\n          })\r\n        }\r\n      />\r\n      <LinkedInLinking\r\n        open={platform === \"linkedin\"}\r\n        closeDrawer={() => setPlatform(null)}\r\n      />\r\n      <FaceBookLinking\r\n        open={platform === \"facebook\"}\r\n        closeDrawer={() => setPlatform(null)}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SocialMediaLinking;\r\n","import { SocialMediasProvider } from \"Contexts/SocialMedias\";\r\nimport SocialMediaLinking from \"Components/BusinessSettings/SocialMediaLinking\";\r\n\r\nconst SocialMediaLinkingPage = () => (\r\n  <SocialMediasProvider>\r\n    <SocialMediaLinking />\r\n  </SocialMediasProvider>\r\n);\r\n\r\nexport default SocialMediaLinkingPage;\r\n"],"names":["AppLink","forwardRef","ref","to","className","children","rest","component","LinkBase","underline","color","SocialMediasData","createContext","undefined","SocialMediasApi","useSocialMediasData","context","useContext","Error","useSocialMediasApi","useState","connectedAccounts","setConnectedAccounts","unconnectedAccounts","setUnconnectedAccounts","TWUser","setTWUser","LIUser","setLIUser","platform","setPlatform","show","provider","permissions","setPermissions","data","api","useMemo","Provider","value","SocialMediaApi","getSetupInfo","AuthenticatedReq","getBusinessFBPages","saveFBUserData","businessId","saveFBPageData","getIgAccountData","saveIgAccountData","unlinkSocialMediaAccount","getLiUserPages","setLinkedinBusiness","Facebook","bg","SvgIcon","viewBox","fill","d","Instagram","width","height","xmlns","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","LinkedIn","rx","anchor","open","closeDrawer","setErrorMessage","useSnacks","stage","setStage","selected","setSelected","FBPages","setFBPages","noUserPagesFoundError","setNoUserPagesFoundError","IGAccount","setIGAccount","ListItemImage","src","alt","loading","setLoading","ListItemAvatar","Skeleton","variant","onLoad","handleConfirmItemSelect","selectedPage","find","fbPage","page_id","page","img_url","profile_image_url","page_name","res","success","message","igReqData","account_id","igAccID","profile_picture","image","name","username","linkingCall","useCallback","fb_pages","payload","length","window","igAccData","useEffect","Drawer","onClose","_","reason","isBackDropOrEscapeKey","sx","zIndex","xs","md","IconButton","onClick","LeftArrow","Fragment","List","map","ListItem","p","ListItemButton","ListItemText","primary","secondary","isUsedByBusiness","ListItemIcon","CheckCircleOutlined","CircleOutlined","Divider","style","marginTop","marginBottom","marginLeft","disabled","FB_IG","desc","TW","LI","idx","twitter","linkedin","facebook","instagram","pb","showLoading","setShowLoading","pages","setPages","noUserOrgPagesFound","setNoUserOrgPagesFound","disableBtn","setDisableBtn","handleLISetup","liOrg","orgID","orgLogo","orgName","token","tokenSecret","userID","liRequestData","linkedinUserId","fetchLiUserPages","liToken","console","log","liOrgData","org","logo","inUse","CircularProgress","pageTitle","useGlobal","isMobile","setSuccessMessage","HandleFBResponse","response","fbData","fb_user_id","short_lived_token","accessToken","messages","errors","handleLILogin","localStorage","setItem","process","handleUnlinkAccounts","toUpperCase","product","unlinkAccountMsg","charAt","slice","newConnectedAccounts","filter","acc","includes","formatFB_IGAccountsArray","loadSetupInfo","Card","elevation","CardSX","CardContent","CardContentSX","borderBottom","accountProfileIMG","accountID","accountName","alignItems","mb","flexWrap","Link","display","columnGap","mt","justifyContent","Box","cursor","fontSize","fontWeight","lineHeight","textDecorationColor","account","appId","fields","scope","onSuccess","render","renderProps","Button","FbButtonSx","InButtonSx"],"sourceRoot":""}