{"version":3,"file":"static/js/2719.698a4982.chunk.js","mappings":"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","sources":["Assets/Icons/LeftArrow.tsx","Assets/Icons/Search.tsx","Components/BusinessSettings/LeadDataFields/LDFItem.tsx","Components/BusinessSettings/LeadDataFields/LDFHeader.tsx","SharedComponents/FormComponents/FormTagField.tsx","Components/BusinessSettings/LeadDataFields/LeadDataForm.tsx","Components/BusinessSettings/LeadDataFields.tsx","Pages/BusinessSettings/LeadDataFields.tsx","SharedComponents/FormComponents/FormIOSSwitch.tsx","SharedComponents/FormComponents/FormTextField.tsx","SharedComponents/Switch/IOSSwitch.tsx","Utils/index.ts","../node_modules/@mui/icons-material/esm/Clear.js"],"sourcesContent":["export const LeftArrow = () => {\r\n  return (\r\n    <svg\r\n      width=\"9\"\r\n      height=\"14\"\r\n      viewBox=\"0 0 9 14\"\r\n      fill=\"none\"\r\n      xmlns=\"//www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M8 1L2 7L8 13\" stroke=\"#24272C\" strokeWidth={2} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LeftArrow;\r\n","import { SvgIcon } from \"@mui/material\";\r\n\r\nexport const Search = () => {\r\n  return (\r\n    <SvgIcon viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n    </SvgIcon>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { Fragment, MouseEvent, useState } from \"react\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n  Button,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { MoreVert } from \"@mui/icons-material\";\r\n\r\nimport BusinessApi from \"Apis/BusinessApi\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { useSettingsApi } from \"Contexts/Business\";\r\nimport { LeadDataFieldInterface } from \"Shared/Interfaces/Business/BusinessSettings\";\r\n\r\nconst LDFItem = ({\r\n  display_name,\r\n  field_name,\r\n  field_type,\r\n  id,\r\n}: LeadDataFieldInterface) => {\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const { setEditLdfId, setShowLdfForm } = useSettingsApi();\r\n  // 3dot menu state\r\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\r\n\r\n  //dialog state for delete\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n\r\n  //function for opening confirm box for delete\r\n  const handleClickOpen = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n  //function for closing confirm box for delete\r\n  const handleClickClose = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n  //function for opening 3 dot menu\r\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  //function for closing 3 dot menu\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const deleteLDF = async () => {\r\n    try {\r\n      const res = await BusinessApi.deleteLeadDataField(id);\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      }\r\n      setSuccessMessage(res.message);\r\n      setTimeout(() => window.location.reload(), 1000);\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      handleClickClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ListItem component=\"div\" sx={{ px: { xs: 0, md: 2 } }}>\r\n        <ListItemText\r\n          primary={\r\n            <div className=\"primary-block\">\r\n              <h2 className={\"list-title\"}>{display_name}</h2>\r\n              <h2 className={\"type\"}>\r\n                {field_type === \"string\" ? \"Text\" : field_type}\r\n              </h2>\r\n            </div>\r\n          }\r\n          secondary={`[${field_name}]`}\r\n          sx={{\r\n            \"& .primary-block\": {\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              gap: 1.25,\r\n              marginBottom: 0.75,\r\n\r\n              \"& .list-title\": {\r\n                color: \"text.primary\",\r\n                fontSize: 15,\r\n                fontWeight: 500,\r\n                lineHeight: \"18px\",\r\n              },\r\n\r\n              \"& .type\": {\r\n                color: \"#767676b3\",\r\n                fontSize: 12,\r\n                fontWeight: 400,\r\n                lineHeight: 1,\r\n                textTransform: \"uppercase\",\r\n              },\r\n            },\r\n\r\n            \"& .MuiListItemText-secondary\": {\r\n              color: \"text.primary\",\r\n              fontSize: 12,\r\n              maxWidth: 290,\r\n              fontWeight: 400,\r\n              lineHeight: \"15px\",\r\n            },\r\n          }}\r\n        />\r\n        <ListItemIcon>\r\n          <IconButton\r\n            // disabled\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </ListItemIcon>\r\n      </ListItem>\r\n      {Boolean(anchorEl) && (\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n          keepMounted\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"Options\",\r\n          }}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          sx={{\r\n            \"& .MuiPaper-root\": { minWidth: 120 },\r\n          }}\r\n        >\r\n          <MenuItem\r\n            onClick={() => {\r\n              setEditLdfId(id);\r\n              setShowLdfForm(true);\r\n              handleClose();\r\n            }}\r\n          >\r\n            {\"Edit\"}\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleClickOpen();\r\n              handleClose();\r\n            }}\r\n          >\r\n            {\"Delete\"}\r\n          </MenuItem>\r\n        </Menu>\r\n      )}\r\n      <Dialog\r\n        open={openConfirmDialog}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Delete\"}</DialogTitle>\r\n        <DialogContent>{\"Are you sure you want to delete?\"}</DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              handleClickClose();\r\n            }}\r\n          >\r\n            {\"Cancel\"}\r\n          </Button>\r\n          <Button\r\n            onClick={async () => {\r\n              await deleteLDF();\r\n            }}\r\n            autoFocus\r\n          >\r\n            {\"Delete\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LDFItem;\r\n","import { ChangeEvent, Dispatch, SetStateAction } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Clear } from \"@mui/icons-material\";\r\n\r\nimport {\r\n  ActionButton,\r\n  SearchBlock,\r\n  SearchInput,\r\n  SearchWrapper,\r\n  TeamHead,\r\n  TeamHeadBottom,\r\n  TeamHeadBottomLeft,\r\n  TeamHeadBottomRight,\r\n  TeamHeadTitle,\r\n  TeamHeadTop,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { Search } from \"Assets/Icons\";\r\nimport { useSettingsApi } from \"Contexts/Business\";\r\n\r\nconst LDFHeader = ({\r\n  isSearchActive,\r\n  setSearchActive,\r\n}: {\r\n  isSearchActive: boolean;\r\n  setSearchActive: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const { setLdfFilter, setShowLdfForm } = useSettingsApi();\r\n\r\n  return (\r\n    <TeamHead>\r\n      <TeamHeadTop>\r\n        <ActionButton\r\n          disableIcon\r\n          type=\"button\"\r\n          onClick={() => setShowLdfForm(true)}\r\n          sx={{ py: 0, px: 0.625, height: 36, mt: 0 }}\r\n        >\r\n          {\"New Lead Data Field\"}\r\n        </ActionButton>\r\n      </TeamHeadTop>\r\n      <TeamHeadBottom>\r\n        {!isSearchActive && (\r\n          <TeamHeadBottomLeft>\r\n            <TeamHeadTitle>Lead Data Fields</TeamHeadTitle>\r\n          </TeamHeadBottomLeft>\r\n        )}\r\n        <TeamHeadBottomRight>\r\n          {isSearchActive && (\r\n            <SearchWrapper>\r\n              <SearchBlock>\r\n                <IconButton\r\n                  disableTouchRipple\r\n                  disableFocusRipple\r\n                  disableRipple\r\n                  sx={{ position: \"absolute\" }}\r\n                >\r\n                  <Search />\r\n                </IconButton>\r\n                <SearchInput\r\n                  onChange={({\r\n                    target: { value },\r\n                  }: ChangeEvent<HTMLInputElement>) => setLdfFilter(value)}\r\n                  placeholder=\"Search Field\"\r\n                />\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setLdfFilter(\"\");\r\n                    setSearchActive(!isSearchActive);\r\n                  }}\r\n                  sx={{ position: \"absolute\", right: 0, top: 0 }}\r\n                >\r\n                  <Clear />\r\n                </IconButton>\r\n              </SearchBlock>\r\n            </SearchWrapper>\r\n          )}\r\n          {!isSearchActive && (\r\n            <IconButton\r\n              onClick={() => setSearchActive((prevState) => !prevState)}\r\n            >\r\n              <Search />\r\n            </IconButton>\r\n          )}\r\n        </TeamHeadBottomRight>\r\n      </TeamHeadBottom>\r\n    </TeamHead>\r\n  );\r\n};\r\n\r\nexport default LDFHeader;\r\n","import { Autocomplete, TextField, TextFieldProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  Control,\r\n  Controller,\r\n  UseControllerProps,\r\n  UseFormSetValue,\r\n} from \"react-hook-form\";\r\n\r\ninterface FormTagFieldProps extends UseControllerProps {\r\n  control: Control<any, any>;\r\n  setValue: UseFormSetValue<any>;\r\n  defaultValue: readonly any[];\r\n}\r\n\r\nconst FormTagField: FC<TextFieldProps & FormTagFieldProps> = ({\r\n  control,\r\n  defaultValue,\r\n  rules,\r\n  name,\r\n  children,\r\n  setValue,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      control={control}\r\n      name={name}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          multiple={true}\r\n          options={defaultValue}\r\n          onChange={(_, newValue: any[]) => {\r\n            setValue(field.name, newValue);\r\n          }}\r\n          freeSolo\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"filled\"\r\n              label={props.label}\r\n              sx={props.sx}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTagField;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { Drawer, IconButton, MenuItem } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport {\r\n  ActionArea,\r\n  ActionButton,\r\n  ContentHeader,\r\n  DrawerForm,\r\n  DrawerWrapper,\r\n  Field,\r\n  FlexRow,\r\n  FormSelectFieldSX,\r\n  FormTagFieldSX,\r\n  FormTextFieldSX,\r\n  GrowColumn,\r\n  HeaderTitle,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useSettingsData } from \"Contexts/Business\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { isBackDropOrEscapeKey } from \"Utils\";\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport FormIOSSwitch from \"SharedComponents/FormComponents/FormIOSSwitch\";\r\nimport FormTextField from \"SharedComponents/FormComponents/FormTextField\";\r\nimport FormTagField from \"SharedComponents/FormComponents/FormTagField\";\r\nimport BusinessApi from \"Apis/BusinessApi\";\r\n\r\ninterface LeadDataFormProps {\r\n  open: boolean;\r\n  closeDrawer: () => void;\r\n}\r\n\r\nconst LeadDataForm = ({ open, closeDrawer }: LeadDataFormProps) => {\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const { editLdfId } = useSettingsData();\r\n  const { control, handleSubmit, watch, reset, setValue } = useForm<any>({\r\n    defaultValues: {\r\n      field_type: \"\",\r\n      display_name: \"\",\r\n      field_name: \"\",\r\n      display_in_filter: false,\r\n      use_lead_title: false,\r\n    },\r\n  });\r\n  const { field_type, display_name, field_options } = watch();\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      console.log(data);\r\n      if (editLdfId) {\r\n        const res = await BusinessApi.updateLeadDataField(editLdfId, data);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setSuccessMessage(res.message);\r\n        setTimeout(() => window.location.reload(), 1000);\r\n      } else {\r\n        const res = await BusinessApi.createLeadDataField(data);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setSuccessMessage(res.message);\r\n        setTimeout(() => window.location.reload(), 1000);\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      closeDrawer();\r\n    }\r\n  };\r\n  const displayNameChanged = useCallback(\r\n    () =>\r\n      setValue(\"field_name\", display_name.toLowerCase().replaceAll(\" \", \"_\")),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [display_name]\r\n  );\r\n  const fetchLeadDataField = useCallback(\r\n    async () => {\r\n      try {\r\n        if (editLdfId) {\r\n          const res = await BusinessApi.getLeadDataField(editLdfId);\r\n          if (!res.success) {\r\n            throw Error(res.message);\r\n          }\r\n          reset({\r\n            field_type: res.payload.field_type,\r\n            display_name: res.payload.display_name,\r\n            field_name: res.payload.field_name,\r\n            display_in_filter: res.payload.display_in_filter,\r\n            use_lead_title: res.payload.mark_as_lead_title,\r\n            field_options: res.payload.field_options\r\n              ? res.payload.field_options\r\n              : [],\r\n          });\r\n        }\r\n      } catch (error: any) {\r\n        console.error(error.message);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [editLdfId]\r\n  );\r\n\r\n  useEffect(() => {\r\n    displayNameChanged();\r\n  }, [displayNameChanged]);\r\n\r\n  useEffect(() => {\r\n    fetchLeadDataField();\r\n  }, [fetchLeadDataField]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={\"right\"}\r\n      open={open}\r\n      onClose={(_, reason) => !isBackDropOrEscapeKey(reason) && closeDrawer()}\r\n      sx={{ zIndex: \"modal\" }}\r\n    >\r\n      <DrawerWrapper sx={{ width: { xs: \"100vw\", md: 360 } }}>\r\n        <ContentHeader>\r\n          <IconButton onClick={closeDrawer} sx={{ width: 32, height: 32 }}>\r\n            <LeftArrow />\r\n          </IconButton>\r\n          <HeaderTitle>\r\n            {`${editLdfId ? \"Edit\" : \"Create a\"} Data Field`}\r\n          </HeaderTitle>\r\n        </ContentHeader>\r\n        <DrawerForm onSubmit={handleSubmit(onSubmit)}>\r\n          <FlexRow>\r\n            <GrowColumn>\r\n              <Field>\r\n                <FormTextField\r\n                  select\r\n                  control={control}\r\n                  label=\"Data Field Type\"\r\n                  name=\"field_type\"\r\n                  sx={FormSelectFieldSX}\r\n                  required={true}\r\n                  defaultValue={field_type}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    {\"Select Data Field Type\"}\r\n                  </MenuItem>\r\n                  <MenuItem value=\"numeric\">{\"Number\"}</MenuItem>\r\n                  <MenuItem value=\"string\">{\"Text\"}</MenuItem>\r\n                  <MenuItem value=\"boolean\">{\"Boolean\"}</MenuItem>\r\n                  <MenuItem value=\"date\">{\"Date\"}</MenuItem>\r\n                </FormTextField>\r\n              </Field>\r\n              <Field>\r\n                <FormTextField\r\n                  control={control}\r\n                  name=\"display_name\"\r\n                  label=\"Display Name\"\r\n                  placeholder=\"Display Name\"\r\n                  required={true}\r\n                  sx={FormTextFieldSX}\r\n                />\r\n              </Field>\r\n              <Field>\r\n                <FormTextField\r\n                  control={control}\r\n                  name=\"field_name\"\r\n                  label=\"Field Name\"\r\n                  placeholder=\"Field Name\"\r\n                  required={true}\r\n                  sx={FormTextFieldSX}\r\n                />\r\n              </Field>\r\n              <Field>\r\n                <FormTagField\r\n                  control={control}\r\n                  setValue={setValue}\r\n                  defaultValue={field_options ?? []}\r\n                  name=\"field_options\"\r\n                  label=\"Options\"\r\n                  sx={FormTagFieldSX}\r\n                />\r\n              </Field>\r\n              <Field>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div className=\"grow\">\r\n                    <h5 className=\"field-title\">\r\n                      {\"Display Field in Filters & Analytics?\"}\r\n                    </h5>\r\n                    <small className=\"field-subtitle\">\r\n                      {\r\n                        \"This field will be displayed in filter option and analytics can be drawn on this field.\"\r\n                      }\r\n                    </small>\r\n                  </div>\r\n                  <FormIOSSwitch control={control} name={\"display_in_filter\"} />\r\n                </div>\r\n              </Field>\r\n              <Field>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div className=\"grow\">\r\n                    <h5 className=\"field-title\">{\"Use as Lead Title\"}</h5>\r\n                    <small className=\"field-subtitle\">\r\n                      {\r\n                        \"If a value is available in the field it will show as the default title instead of the phone number in the Chat section.\"\r\n                      }\r\n                    </small>\r\n                  </div>\r\n                  <FormIOSSwitch control={control} name={\"use_lead_title\"} />\r\n                </div>\r\n              </Field>\r\n            </GrowColumn>\r\n          </FlexRow>\r\n          <ActionArea>\r\n            <ActionButton type=\"submit\">Save</ActionButton>\r\n          </ActionArea>\r\n        </DrawerForm>\r\n      </DrawerWrapper>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default LeadDataForm;\r\n","import { ChangeEvent, Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardContent, Divider, IconButton } from \"@mui/material\";\nimport { Clear } from \"@mui/icons-material\";\n\nimport BusinessApi from \"Apis/BusinessApi\";\nimport { useSettingsApi, useSettingsData } from \"Contexts/Business\";\nimport { useSnacks } from \"Contexts/Snack\";\nimport {\n  ActionButton,\n  CardSX,\n  CardContentSX,\n  Content,\n  ContentInner,\n  InnerWrapper,\n  ContentHeader,\n  HeaderTitle,\n  InnerBlock,\n  Cta,\n  CtaInfo,\n  CtaInfoText,\n  SearchWrapper,\n  SearchBlock,\n  SearchInput,\n  InnerWrapperSX,\n  ContentFooter,\n  ContentInnerSX,\n  ContentHeaderSX,\n} from \"Containers/BusinessSettings/LayoutComponents\";\nimport { LeftArrow, Search } from \"Assets/Icons\";\nimport LDFItem from \"./LeadDataFields/LDFItem\";\nimport LDFHeader from \"./LeadDataFields/LDFHeader\";\nimport LeadDataForm from \"./LeadDataFields/LeadDataForm\";\nimport { useGlobal } from \"Contexts/App\";\n\nconst LeadDataFields = () => {\n  const { isMobile, isTablet } = useGlobal();\n  const { setErrorMessage } = useSnacks();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isSearchActive, setSearchActive] = useState<boolean>(false);\n  const { leadDataFields, ldfFilter, showLdfForm } = useSettingsData();\n  const { setLeadDataFields, setLdfFilter, setShowLdfForm, setEditLdfId } =\n    useSettingsApi();\n  const fetchLeadDataFields = useCallback(async () => {\n    try {\n      const res = await BusinessApi.getLeadDataFields();\n      if (!res.success) {\n        throw Error(res.message);\n      }\n      setLeadDataFields(res.payload);\n      setLoading(false);\n    } catch (error: any) {\n      setErrorMessage(error.message);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    fetchLeadDataFields();\n  }, [fetchLeadDataFields]);\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Lead Data Fields</title>\n      </Helmet>\n      <Content>\n        {isMobile && (\n          <ContentHeader sx={ContentHeaderSX}>\n            {!isSearchActive && (\n              <IconButton\n                component={Link}\n                to=\"/business-settings\"\n                sx={{ width: 32, height: 32 }}\n              >\n                <LeftArrow />\n              </IconButton>\n            )}\n            {!isSearchActive && <HeaderTitle>Lead Data Fields</HeaderTitle>}\n            {isSearchActive && (\n              <SearchWrapper>\n                <SearchBlock>\n                  <IconButton\n                    disableTouchRipple\n                    disableFocusRipple\n                    disableRipple\n                    sx={{ position: \"absolute\" }}\n                  >\n                    <Search />\n                  </IconButton>\n                  <SearchInput\n                    onChange={({\n                      target: { value },\n                    }: ChangeEvent<HTMLInputElement>) => setLdfFilter(value)}\n                    placeholder=\"Search Field\"\n                  />\n                  <IconButton\n                    onClick={() => {\n                      setLdfFilter(\"\");\n                      setSearchActive(!isSearchActive);\n                    }}\n                    sx={{ position: \"absolute\", right: 0, top: 0 }}\n                  >\n                    <Clear />\n                  </IconButton>\n                </SearchBlock>\n              </SearchWrapper>\n            )}\n            {!isSearchActive && leadDataFields.length > 0 && (\n              <IconButton\n                onClick={() => setSearchActive((prevState) => !prevState)}\n              >\n                <Search />\n              </IconButton>\n            )}\n          </ContentHeader>\n        )}\n        <ContentInner sx={ContentInnerSX}>\n          <InnerWrapper sx={InnerWrapperSX}>\n            {!loading && (\n              <Card elevation={0} sx={CardSX}>\n                <CardContent sx={CardContentSX}>\n                  {leadDataFields.length === 0 ? (\n                    <InnerBlock>\n                      <Cta>\n                        <ActionButton\n                          disableIcon\n                          onClick={() => setShowLdfForm(true)}\n                          sx={{\n                            borderRadius: 2,\n                            boxShadow: \"0px 8px 8px rgba(50, 197, 255, 0.1)\",\n                            fontSize: 16,\n                            fontWeight: 700,\n                            height: 36,\n                            lineHeight: \"19px\",\n                            margin: \"auto\",\n                            textTransform: \"capitalize\",\n                          }}\n                        >\n                          {\"New Lead Data Field\"}\n                        </ActionButton>\n                      </Cta>\n                      <CtaInfo>\n                        <CtaInfoText>\n                          {\n                            \"Lead Data Field creates an input field for your user, where the value input by a user can be stored and be later retrieved for different users to draw an analytical comparison or as a future reference.\"\n                          }\n                        </CtaInfoText>\n                      </CtaInfo>\n                    </InnerBlock>\n                  ) : (\n                    <Fragment>\n                      {isTablet && (\n                        <LDFHeader {...{ isSearchActive, setSearchActive }} />\n                      )}\n                      {isTablet && <Divider />}\n                      {leadDataFields\n                        .filter((ldf: any) =>\n                          ldf?.display_name\n                            ?.toLowerCase()\n                            .includes(ldfFilter?.toLowerCase())\n                        )\n                        .reverse()\n                        .map((lDF, i: number) => (\n                          <LDFItem key={i} {...lDF} />\n                        ))}\n                    </Fragment>\n                  )}\n                </CardContent>\n              </Card>\n            )}\n          </InnerWrapper>\n        </ContentInner>\n        {isMobile && leadDataFields.length > 0 && (\n          <ContentFooter>\n            <ActionButton\n              onClick={() => setShowLdfForm(true)}\n              variant=\"outlined\"\n              color=\"primary\"\n              disableIcon\n            >\n              New Lead Data Field\n            </ActionButton>\n          </ContentFooter>\n        )}\n      </Content>\n      <LeadDataForm\n        open={showLdfForm}\n        closeDrawer={() => {\n          setEditLdfId(undefined);\n          setShowLdfForm(false);\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default LeadDataFields;\n","import LeadDataFields from \"Components/BusinessSettings/LeadDataFields\";\r\n\r\nconst LeadDataFieldsPage = () => <LeadDataFields />;\r\n\r\nexport default LeadDataFieldsPage;\r\n","import { SwitchProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { Control, Controller, UseControllerProps } from \"react-hook-form\";\r\nimport { IOSSwitch } from \"SharedComponents/Switch\";\r\n\r\ninterface FormIOSSwitchProps extends UseControllerProps {\r\n  control: Control<any, any>;\r\n}\r\n\r\nconst FormIOSSwitch: FC<FormIOSSwitchProps & SwitchProps> = ({\r\n  control,\r\n  defaultValue,\r\n  rules,\r\n  name,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      control={control}\r\n      name={name}\r\n      render={({ field }) => {\r\n        return (\r\n          <IOSSwitch\r\n            {...props}\r\n            checked={field.value}\r\n            onChange={field.onChange}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormIOSSwitch;\r\n","import { TextField, TextFieldProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { Control, Controller, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface FormTextFieldProps extends UseControllerProps {\r\n  control: Control<any, any>;\r\n}\r\n\r\nconst FormTextField: FC<TextFieldProps & FormTextFieldProps> = ({\r\n  control,\r\n  defaultValue,\r\n  rules,\r\n  name,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      control={control}\r\n      name={name}\r\n      render={({ field }) => {\r\n        return (\r\n          <TextField\r\n            {...props}\r\n            value={field.value ?? \"\"}\r\n            onChange={field.onChange}\r\n          >\r\n            {children}\r\n          </TextField>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTextField;\r\n","import { Switch, SwitchProps } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nexport const IOSSwitch = styled((props: SwitchProps) => (\r\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\r\n))(({ theme }) => ({\r\n  width: 42,\r\n  height: 26,\r\n  padding: 0,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    padding: 0,\r\n    margin: 2,\r\n    transitionDuration: \"300ms\",\r\n    \"&.Mui-checked\": {\r\n      transform: \"translateX(16px)\",\r\n      color: \"#fff\",\r\n      \"& + .MuiSwitch-track\": {\r\n        backgroundColor: theme.palette.primary,\r\n        opacity: 1,\r\n        border: 0,\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n      color: theme.palette.primary,\r\n      border: \"6px solid #fff\",\r\n    },\r\n    \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n      color:\r\n        theme.palette.mode === \"light\"\r\n          ? theme.palette.grey[100]\r\n          : theme.palette.grey[600],\r\n    },\r\n    \"&.Mui-disabled + .MuiSwitch-track\": {\r\n      opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxSizing: \"border-box\",\r\n    width: 22,\r\n    height: 22,\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 26 / 2,\r\n    backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#39393D\",\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\"], {\r\n      duration: 500,\r\n    }),\r\n  },\r\n}));\r\n","import moment from \"moment\";\r\n\r\nexport function getRandomColor() {\r\n  var rgb = [];\r\n\r\n  for (var i = 0; i < 3; i++) {\r\n    rgb.push(Math.floor(Math.random() * 255));\r\n  }\r\n\r\n  return \"rgb(\" + rgb.join(\",\") + \", 0.5)\";\r\n}\r\n\r\nexport function secondsToHms(d: number) {\r\n  d = Number(d);\r\n  let h = Math.floor(d / 3600);\r\n  let m = Math.floor((d % 3600) / 60);\r\n  let s = Math.floor((d % 3600) % 60);\r\n\r\n  let hDisplay = h > 0 ? h + (h === 1 ? \" hour \" : \" hours \") : \"\";\r\n  let mDisplay = m > 0 ? m + (m === 1 ? \" minute \" : \" minutes \") : \"\";\r\n  let sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\";\r\n  return hDisplay + mDisplay + sDisplay;\r\n}\r\n\r\nexport const isBackDropOrEscapeKey = (reason: string) =>\r\n  reason === \"backdropClick\" || reason === \"escapeKeyDown\";\r\n\r\nexport const monthFormat = (month: string) => moment(month).format(\"MMM YYYY\");\r\n\r\nexport const formatFB_IGAccountsArray = (accounts: string[]): string[] => {\r\n  let withChangedFBAccounts: string[] = [];\r\n\r\n  if (accounts.includes(\"facebook\")) {\r\n    withChangedFBAccounts = accounts.filter((acc) => acc !== \"facebook\");\r\n  }\r\n\r\n  if (accounts.includes(\"instagram\")) {\r\n    withChangedFBAccounts = withChangedFBAccounts.filter(\r\n      (acc) => acc !== \"instagram\"\r\n    );\r\n  }\r\n\r\n  if (accounts.includes(\"facebook\") || accounts.includes(\"instagram\")) {\r\n    withChangedFBAccounts.unshift(\"facebook and instagram\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"facebook and instagram\") &&\r\n    !withChangedFBAccounts.includes(\"facebook and instagram\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"facebook and instagram\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"twitter\") &&\r\n    !withChangedFBAccounts.includes(\"twitter\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"twitter\");\r\n  }\r\n\r\n  if (\r\n    accounts.includes(\"linkedin\") &&\r\n    !withChangedFBAccounts.includes(\"linkedin\")\r\n  ) {\r\n    withChangedFBAccounts.push(\"linkedin\");\r\n  }\r\n\r\n  return withChangedFBAccounts;\r\n};\r\n\r\nexport const userInitials = (name: string) => {\r\n  return {\r\n    children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\r\n  };\r\n};\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');"],"names":["LeftArrow","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","Search","display_name","field_name","field_type","id","useSnacks","setErrorMessage","setSuccessMessage","useSettingsApi","setEditLdfId","setShowLdfForm","useState","anchorEl","setAnchorEl","openConfirmDialog","setOpenConfirmDialog","handleClickClose","handleClose","deleteLDF","BusinessApi","res","success","Error","message","setTimeout","window","location","reload","Fragment","ListItem","component","sx","px","xs","md","ListItemText","primary","className","secondary","alignItems","display","flexWrap","gap","marginBottom","color","fontSize","fontWeight","lineHeight","textTransform","maxWidth","ListItemIcon","IconButton","onClick","event","currentTarget","MoreVert","Boolean","Menu","open","onClose","keepMounted","MenuListProps","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Button","autoFocus","isSearchActive","setSearchActive","setLdfFilter","disableIcon","type","py","mt","disableTouchRipple","disableFocusRipple","disableRipple","position","onChange","value","target","placeholder","right","top","Clear","prevState","control","defaultValue","rules","name","setValue","children","props","render","field","Autocomplete","multiple","options","_","newValue","freeSolo","renderInput","params","TextField","variant","label","closeDrawer","editLdfId","useSettingsData","useForm","defaultValues","display_in_filter","use_lead_title","handleSubmit","watch","reset","field_options","onSubmit","data","console","log","displayNameChanged","useCallback","toLowerCase","replaceAll","fetchLeadDataField","payload","mark_as_lead_title","error","useEffect","Drawer","anchor","reason","isBackDropOrEscapeKey","zIndex","FormTextField","select","FormSelectFieldSX","required","disabled","FormTextFieldSX","FormTagFieldSX","FormIOSSwitch","useGlobal","isMobile","isTablet","loading","setLoading","leadDataFields","ldfFilter","showLdfForm","setLeadDataFields","fetchLeadDataFields","ContentHeaderSX","Link","to","length","ContentInnerSX","InnerWrapperSX","Card","elevation","CardSX","CardContent","CardContentSX","borderRadius","boxShadow","margin","Divider","filter","ldf","includes","reverse","map","lDF","i","undefined","checked","IOSSwitch","styled","focusVisibleClassName","theme","padding","transitionDuration","transform","backgroundColor","palette","opacity","border","mode","grey","boxSizing","transition","transitions","create","duration","getRandomColor","rgb","push","Math","floor","random","join","secondsToHms","Number","h","m","s","monthFormat","month","moment","format","formatFB_IGAccountsArray","accounts","withChangedFBAccounts","acc","unshift","userInitials","split","createSvgIcon","_jsx"],"sourceRoot":""}