{"version":3,"file":"static/js/2981.480fde74.chunk.js","mappings":"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","sources":["Apis/LeadDataFieldsApi.ts","Contexts/LeadDataFields/LeadDataFieldsProvider.tsx","Components/BusinessSettings/LeadDataFields/LeadDataFieldItem.tsx","Components/BusinessSettings/LeadDataFields/LeadDataFieldHeader.tsx","SharedComponents/FormComponents/FormTagField.tsx","Components/BusinessSettings/LeadDataFields/LeadDataForm.tsx","Components/BusinessSettings/LeadDataFields.tsx","Pages/BusinessSettings/LeadDataFields.tsx","SharedComponents/FormComponents/FormIOSSwitch.tsx","SharedComponents/Switch/IOSSwitch.tsx"],"sourcesContent":["import { AuthenticatedReq } from \"Utils/Axios\";\r\n\r\nexport default class LeadDataFieldsApi {\r\n  public static getLeadDataFields = async () => {\r\n    return await AuthenticatedReq(`/lead-data-fields`, \"GET\");\r\n  };\r\n\r\n  public static getLeadDataField = async (leadDataFieldId: number) => {\r\n    return await AuthenticatedReq(\r\n      `/lead-data-fields/edit/${leadDataFieldId}`,\r\n      \"GET\"\r\n    );\r\n  };\r\n\r\n  public static createLeadDataField = async (data: any) => {\r\n    return await AuthenticatedReq(`/lead-data-fields/`, \"POST\", { data });\r\n  };\r\n\r\n  public static updateLeadDataField = async (\r\n    editLeadDataId: number,\r\n    data: any\r\n  ) => {\r\n    return await AuthenticatedReq(\r\n      `/lead-data-fields/update/${editLeadDataId}`,\r\n      \"PUT\",\r\n      { data }\r\n    );\r\n  };\r\n\r\n  public static deleteLeadDataField = async (deleteLeadDataId: number) => {\r\n    return await AuthenticatedReq(\r\n      `/lead-data-fields/delete/${deleteLeadDataId}`,\r\n      \"DELETE\"\r\n    );\r\n  };\r\n}\r\n","import { createContext, FC, useContext, useMemo, useState } from \"react\";\r\n\r\nimport { LeadDataFieldInterface } from \"Shared/Interfaces/LeadDataFieldsInterface\";\r\n\r\nimport {\r\n  LeadDataFieldApiContextState,\r\n  LeadDataFieldDataContextState,\r\n} from \"./types\";\r\n\r\nconst LeadDataFieldData = createContext<\r\n  LeadDataFieldDataContextState | undefined\r\n>(undefined);\r\n\r\nconst LeadDataFieldApi = createContext<\r\n  LeadDataFieldApiContextState | undefined\r\n>(undefined);\r\n\r\nconst LeadDataFieldsProvider: FC<any> = ({ children }) => {\r\n  const [leadDataFields, setLeadDataFields] = useState<\r\n    LeadDataFieldInterface[]\r\n  >([]);\r\n  const [leadDataFilter, setLeadDataFilter] = useState<string>(\"\");\r\n  const [editLeadDataId, setEditLeadDataId] = useState<number | undefined>();\r\n  const [showLeadDataForm, setShowLeadDataForm] = useState<boolean>(false);\r\n  const data: LeadDataFieldDataContextState = {\r\n    leadDataFields,\r\n    leadDataFilter,\r\n    showLeadDataForm,\r\n    editLeadDataId,\r\n  };\r\n  const api = useMemo<LeadDataFieldApiContextState>(\r\n    () => ({\r\n      setLeadDataFields,\r\n      setLeadDataFilter,\r\n      setShowLeadDataForm,\r\n      setEditLeadDataId,\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <LeadDataFieldData.Provider value={data}>\r\n      <LeadDataFieldApi.Provider value={api}>\r\n        {children}\r\n      </LeadDataFieldApi.Provider>\r\n    </LeadDataFieldData.Provider>\r\n  );\r\n};\r\n\r\nexport const useLeadDataFieldData = () => {\r\n  const context = useContext(LeadDataFieldData);\r\n\r\n  if (context === undefined) {\r\n    throw Error(\r\n      \"Item must be used inside of LeadDataFieldsProvider, otherwise it will not function correctly.\"\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport const useLeadDataFieldApi = () => {\r\n  const context = useContext(LeadDataFieldApi);\r\n\r\n  if (context === undefined) {\r\n    throw Error(\r\n      \"Item must be used inside of LeadDataFieldsProvider, otherwise it will not function correctly.\"\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport default LeadDataFieldsProvider;\r\n","import { Fragment, MouseEvent, useState } from \"react\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n  Button,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { MoreVert } from \"@mui/icons-material\";\r\n\r\nimport LeadDataFieldsApi from \"Apis/LeadDataFieldsApi\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { useLeadDataFieldApi } from \"Contexts/LeadDataFields\";\r\nimport { LeadDataFieldInterface } from \"Shared/Interfaces/LeadDataFieldsInterface\";\r\n\r\nconst LeadDataFieldItem = ({\r\n  display_name,\r\n  field_name,\r\n  field_type,\r\n  id,\r\n}: LeadDataFieldInterface) => {\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const { setEditLeadDataId, setShowLeadDataForm } = useLeadDataFieldApi();\r\n  // 3dot menu state\r\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\r\n\r\n  //dialog state for delete\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n\r\n  //function for opening confirm box for delete\r\n  const handleClickOpen = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n  //function for closing confirm box for delete\r\n  const handleClickClose = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n  //function for opening 3 dot menu\r\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  //function for closing 3 dot menu\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const deleteLeadDataField = async () => {\r\n    try {\r\n      const res = await LeadDataFieldsApi.deleteLeadDataField(id);\r\n      if (!res.success) {\r\n        throw Error(res.message);\r\n      }\r\n      setSuccessMessage(res.message);\r\n      setTimeout(() => window.location.reload(), 1000);\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      handleClickClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ListItem component=\"div\" sx={{ px: { xs: 0, md: 2 } }}>\r\n        <ListItemText\r\n          primary={\r\n            <div className=\"primary-block\">\r\n              <h2 className={\"list-title\"}>{display_name}</h2>\r\n              <h2 className={\"type\"}>\r\n                {field_type === \"string\" ? \"Text\" : field_type}\r\n              </h2>\r\n            </div>\r\n          }\r\n          secondary={`[${field_name}]`}\r\n          sx={{\r\n            \"& .primary-block\": {\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              gap: 1.25,\r\n              marginBottom: 0.75,\r\n\r\n              \"& .list-title\": {\r\n                color: \"text.primary\",\r\n                fontSize: 15,\r\n                fontWeight: 500,\r\n                lineHeight: \"18px\",\r\n              },\r\n\r\n              \"& .type\": {\r\n                color: \"#767676b3\",\r\n                fontSize: 12,\r\n                fontWeight: 400,\r\n                lineHeight: 1,\r\n                textTransform: \"uppercase\",\r\n              },\r\n            },\r\n\r\n            \"& .MuiListItemText-secondary\": {\r\n              color: \"text.primary\",\r\n              fontSize: 12,\r\n              maxWidth: 290,\r\n              fontWeight: 400,\r\n              lineHeight: \"15px\",\r\n            },\r\n          }}\r\n        />\r\n        <ListItemIcon>\r\n          <IconButton\r\n            // disabled\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </ListItemIcon>\r\n      </ListItem>\r\n      {Boolean(anchorEl) && (\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n          keepMounted\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"Options\",\r\n          }}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          sx={{\r\n            \"& .MuiPaper-root\": { minWidth: 120 },\r\n          }}\r\n        >\r\n          <MenuItem\r\n            onClick={() => {\r\n              setEditLeadDataId(id);\r\n              setShowLeadDataForm(true);\r\n              handleClose();\r\n            }}\r\n          >\r\n            {\"Edit\"}\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleClickOpen();\r\n              handleClose();\r\n            }}\r\n          >\r\n            {\"Delete\"}\r\n          </MenuItem>\r\n        </Menu>\r\n      )}\r\n      <Dialog\r\n        open={openConfirmDialog}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Delete\"}</DialogTitle>\r\n        <DialogContent>{\"Are you sure you want to delete?\"}</DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              handleClickClose();\r\n            }}\r\n          >\r\n            {\"Cancel\"}\r\n          </Button>\r\n          <Button\r\n            onClick={async () => {\r\n              await deleteLeadDataField();\r\n            }}\r\n            autoFocus\r\n          >\r\n            {\"Delete\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeadDataFieldItem;\r\n","import { ChangeEvent, Dispatch, SetStateAction } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Clear } from \"@mui/icons-material\";\r\n\r\nimport { Search } from \"Assets/Icons\";\r\nimport { useLeadDataFieldApi } from \"Contexts/LeadDataFields\";\r\nimport { ActionButton } from \"SharedComponents/CommonComponents\";\r\nimport {\r\n  SearchBlock,\r\n  SearchInput,\r\n  SearchWrapper,\r\n  TeamHead,\r\n  TeamHeadBottom,\r\n  TeamHeadBottomLeft,\r\n  TeamHeadBottomRight,\r\n  TeamHeadTitle,\r\n  TeamHeadTop,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\n\r\nconst LeadDataFieldHeader = ({\r\n  isSearchActive,\r\n  setSearchActive,\r\n}: {\r\n  isSearchActive: boolean;\r\n  setSearchActive: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const { setLeadDataFilter, setShowLeadDataForm } = useLeadDataFieldApi();\r\n\r\n  return (\r\n    <TeamHead>\r\n      <TeamHeadTop>\r\n        <ActionButton\r\n          disableIcon\r\n          type=\"button\"\r\n          onClick={() => setShowLeadDataForm(true)}\r\n          sx={{ py: 0, px: 0.625, height: 36, mt: 0 }}\r\n        >\r\n          {\"New Lead Data Field\"}\r\n        </ActionButton>\r\n      </TeamHeadTop>\r\n      <TeamHeadBottom>\r\n        {!isSearchActive && (\r\n          <TeamHeadBottomLeft>\r\n            <TeamHeadTitle>Lead Data Fields</TeamHeadTitle>\r\n          </TeamHeadBottomLeft>\r\n        )}\r\n        <TeamHeadBottomRight>\r\n          {isSearchActive && (\r\n            <SearchWrapper>\r\n              <SearchBlock>\r\n                <IconButton\r\n                  disableTouchRipple\r\n                  disableFocusRipple\r\n                  disableRipple\r\n                  sx={{ position: \"absolute\" }}\r\n                >\r\n                  <Search />\r\n                </IconButton>\r\n                <SearchInput\r\n                  onChange={({\r\n                    target: { value },\r\n                  }: ChangeEvent<HTMLInputElement>) => setLeadDataFilter(value)}\r\n                  placeholder=\"Search Field\"\r\n                />\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setLeadDataFilter(\"\");\r\n                    setSearchActive(!isSearchActive);\r\n                  }}\r\n                  sx={{ position: \"absolute\", right: 0, top: 0 }}\r\n                >\r\n                  <Clear />\r\n                </IconButton>\r\n              </SearchBlock>\r\n            </SearchWrapper>\r\n          )}\r\n          {!isSearchActive && (\r\n            <IconButton\r\n              onClick={() => setSearchActive((prevState) => !prevState)}\r\n            >\r\n              <Search />\r\n            </IconButton>\r\n          )}\r\n        </TeamHeadBottomRight>\r\n      </TeamHeadBottom>\r\n    </TeamHead>\r\n  );\r\n};\r\n\r\nexport default LeadDataFieldHeader;\r\n","import { Autocomplete, TextField, TextFieldProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  Control,\r\n  Controller,\r\n  UseControllerProps,\r\n  UseFormSetValue,\r\n} from \"react-hook-form\";\r\n\r\ninterface FormTagFieldProps extends UseControllerProps {\r\n  control: Control<any, any>;\r\n  setValue: UseFormSetValue<any>;\r\n  defaultValue: readonly any[];\r\n}\r\n\r\nconst FormTagField: FC<TextFieldProps & FormTagFieldProps> = ({\r\n  control,\r\n  defaultValue,\r\n  rules,\r\n  name,\r\n  children,\r\n  setValue,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      control={control}\r\n      name={name}\r\n      render={({ field }) => (\r\n        <Autocomplete\r\n          multiple={true}\r\n          options={defaultValue}\r\n          onChange={(_, newValue: any[]) => {\r\n            setValue(field.name, newValue);\r\n          }}\r\n          freeSolo\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"filled\"\r\n              label={props.label}\r\n              sx={props.sx}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTagField;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { Drawer, IconButton, MenuItem } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { ActionArea, ActionButton } from \"SharedComponents/CommonComponents\";\r\nimport {\r\n  ContentHeader,\r\n  DrawerForm,\r\n  DrawerWrapper,\r\n  Field,\r\n  FlexRow,\r\n  FormSelectFieldSX,\r\n  FormTagFieldSX,\r\n  FormTextFieldSX,\r\n  GrowColumn,\r\n  HeaderTitle,\r\n} from \"Containers/BusinessSettings/LayoutComponents\";\r\nimport { useLeadDataFieldData } from \"Contexts/LeadDataFields\";\r\nimport { useSnacks } from \"Contexts/Snack\";\r\nimport { isBackDropOrEscapeKey } from \"Utils\";\r\nimport { LeftArrow } from \"Assets/Icons\";\r\nimport FormIOSSwitch from \"SharedComponents/FormComponents/FormIOSSwitch\";\r\nimport FormTextField from \"SharedComponents/FormComponents/FormTextField\";\r\nimport FormTagField from \"SharedComponents/FormComponents/FormTagField\";\r\nimport LeadDataFieldsApi from \"Apis/LeadDataFieldsApi\";\r\n\r\ninterface LeadDataFormProps {\r\n  open: boolean;\r\n  closeDrawer: () => void;\r\n}\r\n\r\nconst LeadDataForm = ({ open, closeDrawer }: LeadDataFormProps) => {\r\n  const { setErrorMessage, setSuccessMessage } = useSnacks();\r\n  const { editLeadDataId } = useLeadDataFieldData();\r\n  const { control, handleSubmit, watch, reset, setValue } = useForm<any>({\r\n    defaultValues: {\r\n      field_type: \"\",\r\n      display_name: \"\",\r\n      field_name: \"\",\r\n      display_in_filter: false,\r\n      use_lead_title: false,\r\n    },\r\n  });\r\n  const { field_type, display_name, field_options } = watch();\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      console.log(data);\r\n      if (editLeadDataId) {\r\n        const res = await LeadDataFieldsApi.updateLeadDataField(\r\n          editLeadDataId,\r\n          data\r\n        );\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setSuccessMessage(res.message);\r\n        setTimeout(() => window.location.reload(), 1000);\r\n      } else {\r\n        const res = await LeadDataFieldsApi.createLeadDataField(data);\r\n        if (!res.success) {\r\n          throw Error(res.message);\r\n        }\r\n        setSuccessMessage(res.message);\r\n        setTimeout(() => window.location.reload(), 1000);\r\n      }\r\n    } catch (error: any) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      closeDrawer();\r\n    }\r\n  };\r\n  const displayNameChanged = useCallback(\r\n    () =>\r\n      setValue(\"field_name\", display_name.toLowerCase().replaceAll(\" \", \"_\")),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [display_name]\r\n  );\r\n  const fetchLeadDataField = useCallback(\r\n    async () => {\r\n      try {\r\n        if (editLeadDataId) {\r\n          const res = await LeadDataFieldsApi.getLeadDataField(editLeadDataId);\r\n          if (!res.success) {\r\n            throw Error(res.message);\r\n          }\r\n          reset({\r\n            field_type: res.payload.field_type,\r\n            display_name: res.payload.display_name,\r\n            field_name: res.payload.field_name,\r\n            display_in_filter: res.payload.display_in_filter,\r\n            use_lead_title: res.payload.mark_as_lead_title,\r\n            field_options: res.payload.field_options\r\n              ? res.payload.field_options\r\n              : [],\r\n          });\r\n        }\r\n      } catch (error: any) {\r\n        console.error(error.message);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [editLeadDataId]\r\n  );\r\n\r\n  useEffect(() => {\r\n    displayNameChanged();\r\n  }, [displayNameChanged]);\r\n\r\n  useEffect(() => {\r\n    fetchLeadDataField();\r\n  }, [fetchLeadDataField]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={\"right\"}\r\n      open={open}\r\n      onClose={(_, reason) => !isBackDropOrEscapeKey(reason) && closeDrawer()}\r\n      sx={{ zIndex: \"modal\" }}\r\n    >\r\n      <DrawerWrapper sx={{ width: { xs: \"100vw\", md: 360 } }}>\r\n        <ContentHeader>\r\n          <IconButton onClick={closeDrawer} sx={{ width: 32, height: 32 }}>\r\n            <LeftArrow />\r\n          </IconButton>\r\n          <HeaderTitle>\r\n            {`${editLeadDataId ? \"Edit\" : \"Create a\"} Data Field`}\r\n          </HeaderTitle>\r\n        </ContentHeader>\r\n        <DrawerForm onSubmit={handleSubmit(onSubmit)}>\r\n          <FlexRow>\r\n            <GrowColumn>\r\n              <Field>\r\n                <FormTextField\r\n                  select\r\n                  control={control}\r\n                  label=\"Data Field Type\"\r\n                  name=\"field_type\"\r\n                  sx={FormSelectFieldSX}\r\n                  required={true}\r\n                  defaultValue={field_type}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    {\"Select Data Field Type\"}\r\n                  </MenuItem>\r\n                  <MenuItem value=\"numeric\">{\"Number\"}</MenuItem>\r\n                  <MenuItem value=\"string\">{\"Text\"}</MenuItem>\r\n                  <MenuItem value=\"boolean\">{\"Boolean\"}</MenuItem>\r\n                  <MenuItem value=\"date\">{\"Date\"}</MenuItem>\r\n                </FormTextField>\r\n              </Field>\r\n              <Field>\r\n                <FormTextField\r\n                  control={control}\r\n                  name=\"display_name\"\r\n                  label=\"Display Name\"\r\n                  placeholder=\"Display Name\"\r\n                  required={true}\r\n                  sx={FormTextFieldSX}\r\n                />\r\n              </Field>\r\n              <Field>\r\n                <FormTextField\r\n                  control={control}\r\n                  name=\"field_name\"\r\n                  label=\"Field Name\"\r\n                  placeholder=\"Field Name\"\r\n                  required={true}\r\n                  sx={FormTextFieldSX}\r\n                />\r\n              </Field>\r\n              <Field>\r\n                <FormTagField\r\n                  control={control}\r\n                  setValue={setValue}\r\n                  defaultValue={field_options ?? []}\r\n                  name=\"field_options\"\r\n                  label=\"Options\"\r\n                  sx={FormTagFieldSX}\r\n                />\r\n              </Field>\r\n              <Field>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div className=\"grow\">\r\n                    <h5 className=\"field-title\">\r\n                      {\"Display Field in Filters & Analytics?\"}\r\n                    </h5>\r\n                    <small className=\"field-subtitle\">\r\n                      {\r\n                        \"This field will be displayed in filter option and analytics can be drawn on this field.\"\r\n                      }\r\n                    </small>\r\n                  </div>\r\n                  <FormIOSSwitch control={control} name={\"display_in_filter\"} />\r\n                </div>\r\n              </Field>\r\n              <Field>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div className=\"grow\">\r\n                    <h5 className=\"field-title\">{\"Use as Lead Title\"}</h5>\r\n                    <small className=\"field-subtitle\">\r\n                      {\r\n                        \"If a value is available in the field it will show as the default title instead of the phone number in the Chat section.\"\r\n                      }\r\n                    </small>\r\n                  </div>\r\n                  <FormIOSSwitch control={control} name={\"use_lead_title\"} />\r\n                </div>\r\n              </Field>\r\n            </GrowColumn>\r\n          </FlexRow>\r\n          <ActionArea>\r\n            <ActionButton type=\"submit\">Save</ActionButton>\r\n          </ActionArea>\r\n        </DrawerForm>\r\n      </DrawerWrapper>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default LeadDataForm;\r\n","import { ChangeEvent, Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardContent, Divider, IconButton } from \"@mui/material\";\nimport { Clear } from \"@mui/icons-material\";\n\nimport LeadDataFieldsApi from \"Apis/LeadDataFieldsApi\";\nimport { useGlobal } from \"Contexts/App\";\nimport { useSnacks } from \"Contexts/Snack\";\nimport {\n  useLeadDataFieldApi,\n  useLeadDataFieldData,\n} from \"Contexts/LeadDataFields\";\nimport { LeadDataFieldInterface } from \"Shared/Interfaces/LeadDataFieldsInterface\";\nimport { LeftArrow, Search } from \"Assets/Icons\";\nimport { ActionButton } from \"SharedComponents/CommonComponents\";\nimport {\n  CardSX,\n  CardContentSX,\n  ContentInner,\n  InnerWrapper,\n  ContentHeader,\n  HeaderTitle,\n  InnerBlock,\n  Cta,\n  CtaInfo,\n  CtaInfoText,\n  SearchWrapper,\n  SearchBlock,\n  SearchInput,\n  InnerWrapperSX,\n  ContentFooter,\n  ContentInnerSX,\n  ContentHeaderSX,\n} from \"Containers/BusinessSettings/LayoutComponents\";\nimport LeadDataFieldItem from \"./LeadDataFields/LeadDataFieldItem\";\nimport LeadDataFieldHeader from \"./LeadDataFields/LeadDataFieldHeader\";\nimport LeadDataForm from \"./LeadDataFields/LeadDataForm\";\n\nconst LeadDataFields = () => {\n  const { isMobile, isTablet } = useGlobal();\n  const { setErrorMessage } = useSnacks();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isSearchActive, setSearchActive] = useState<boolean>(false);\n  const { leadDataFields, leadDataFilter, showLeadDataForm } =\n    useLeadDataFieldData();\n  const {\n    setLeadDataFields,\n    setLeadDataFilter,\n    setShowLeadDataForm,\n    setEditLeadDataId,\n  } = useLeadDataFieldApi();\n  const fetchLeadDataFields = useCallback(async () => {\n    try {\n      const res = await LeadDataFieldsApi.getLeadDataFields();\n      if (!res.success) {\n        throw Error(res.message);\n      }\n      setLeadDataFields(res.payload);\n      setLoading(false);\n    } catch (error: any) {\n      setErrorMessage(error.message);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    fetchLeadDataFields();\n  }, [fetchLeadDataFields]);\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Lead Data Fields</title>\n      </Helmet>\n      {isMobile && (\n        <ContentHeader sx={ContentHeaderSX}>\n          {!isSearchActive && (\n            <IconButton\n              component={Link}\n              to=\"/business-settings\"\n              sx={{ width: 32, height: 32 }}\n            >\n              <LeftArrow />\n            </IconButton>\n          )}\n          {!isSearchActive && <HeaderTitle>Lead Data Fields</HeaderTitle>}\n          {isSearchActive && (\n            <SearchWrapper>\n              <SearchBlock>\n                <IconButton\n                  disableTouchRipple\n                  disableFocusRipple\n                  disableRipple\n                  sx={{ position: \"absolute\" }}\n                >\n                  <Search />\n                </IconButton>\n                <SearchInput\n                  onChange={({\n                    target: { value },\n                  }: ChangeEvent<HTMLInputElement>) => setLeadDataFilter(value)}\n                  placeholder=\"Search Field\"\n                />\n                <IconButton\n                  onClick={() => {\n                    setLeadDataFilter(\"\");\n                    setSearchActive(!isSearchActive);\n                  }}\n                  sx={{ position: \"absolute\", right: 0, top: 0 }}\n                >\n                  <Clear />\n                </IconButton>\n              </SearchBlock>\n            </SearchWrapper>\n          )}\n          {!isSearchActive && leadDataFields.length > 0 && (\n            <IconButton\n              onClick={() => setSearchActive((prevState) => !prevState)}\n            >\n              <Search />\n            </IconButton>\n          )}\n        </ContentHeader>\n      )}\n      <ContentInner sx={ContentInnerSX}>\n        <InnerWrapper sx={InnerWrapperSX}>\n          {!loading && (\n            <Card elevation={0} sx={CardSX}>\n              <CardContent sx={CardContentSX}>\n                {leadDataFields.length === 0 ? (\n                  <InnerBlock>\n                    <Cta>\n                      <ActionButton\n                        disableIcon\n                        onClick={() => setShowLeadDataForm(true)}\n                        sx={{\n                          borderRadius: 2,\n                          boxShadow: \"0px 8px 8px rgba(50, 197, 255, 0.1)\",\n                          fontSize: 16,\n                          fontWeight: 700,\n                          height: 36,\n                          lineHeight: \"19px\",\n                          margin: \"auto\",\n                          textTransform: \"capitalize\",\n                        }}\n                      >\n                        {\"New Lead Data Field\"}\n                      </ActionButton>\n                    </Cta>\n                    <CtaInfo>\n                      <CtaInfoText>\n                        {\n                          \"Lead Data Field creates an input field for your user, where the value input by a user can be stored and be later retrieved for different users to draw an analytical comparison or as a future reference.\"\n                        }\n                      </CtaInfoText>\n                    </CtaInfo>\n                  </InnerBlock>\n                ) : (\n                  <Fragment>\n                    {isTablet && (\n                      <LeadDataFieldHeader\n                        {...{ isSearchActive, setSearchActive }}\n                      />\n                    )}\n                    {isTablet && <Divider />}\n                    {leadDataFields\n                      .filter((leadDataField: LeadDataFieldInterface) =>\n                        leadDataField?.display_name\n                          ?.toLowerCase()\n                          .includes(leadDataFilter?.toLowerCase())\n                      )\n                      .reverse()\n                      .map((leadDataField, i: number) => (\n                        <LeadDataFieldItem key={i} {...leadDataField} />\n                      ))}\n                  </Fragment>\n                )}\n              </CardContent>\n            </Card>\n          )}\n        </InnerWrapper>\n      </ContentInner>\n      {isMobile && leadDataFields.length > 0 && (\n        <ContentFooter>\n          <ActionButton\n            onClick={() => setShowLeadDataForm(true)}\n            variant=\"outlined\"\n            color=\"primary\"\n            disableIcon\n          >\n            New Lead Data Field\n          </ActionButton>\n        </ContentFooter>\n      )}\n      <LeadDataForm\n        open={showLeadDataForm}\n        closeDrawer={() => {\n          setEditLeadDataId(undefined);\n          setShowLeadDataForm(false);\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default LeadDataFields;\n","import { LeadDataFieldsProvider } from \"Contexts/LeadDataFields\";\r\nimport LeadDataFields from \"Components/BusinessSettings/LeadDataFields\";\r\n\r\nconst LeadDataFieldsPage = () => (\r\n  <LeadDataFieldsProvider>\r\n    <LeadDataFields />\r\n  </LeadDataFieldsProvider>\r\n);\r\n\r\nexport default LeadDataFieldsPage;\r\n","import { SwitchProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { Control, Controller, UseControllerProps } from \"react-hook-form\";\r\nimport { IOSSwitch } from \"SharedComponents/Switch\";\r\n\r\ninterface FormIOSSwitchProps extends UseControllerProps {\r\n  control: Control<any, any>;\r\n}\r\n\r\nconst FormIOSSwitch: FC<FormIOSSwitchProps & SwitchProps> = ({\r\n  control,\r\n  defaultValue,\r\n  rules,\r\n  name,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      control={control}\r\n      name={name}\r\n      render={({ field }) => {\r\n        return (\r\n          <IOSSwitch\r\n            {...props}\r\n            checked={field.value}\r\n            onChange={field.onChange}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormIOSSwitch;\r\n","import { Switch, SwitchProps } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nexport const IOSSwitch = styled((props: SwitchProps) => (\r\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\r\n))(({ theme }) => ({\r\n  width: 42,\r\n  height: 26,\r\n  padding: 0,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    padding: 0,\r\n    margin: 2,\r\n    transitionDuration: \"300ms\",\r\n    \"&.Mui-checked\": {\r\n      transform: \"translateX(16px)\",\r\n      color: \"#fff\",\r\n      \"& + .MuiSwitch-track\": {\r\n        backgroundColor: theme.palette.primary,\r\n        opacity: 1,\r\n        border: 0,\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n      color: theme.palette.primary,\r\n      border: \"6px solid #fff\",\r\n    },\r\n    \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n      color:\r\n        theme.palette.mode === \"light\"\r\n          ? theme.palette.grey[100]\r\n          : theme.palette.grey[600],\r\n    },\r\n    \"&.Mui-disabled + .MuiSwitch-track\": {\r\n      opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxSizing: \"border-box\",\r\n    width: 22,\r\n    height: 22,\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 26 / 2,\r\n    backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#39393D\",\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\"], {\r\n      duration: 500,\r\n    }),\r\n  },\r\n}));\r\n"],"names":["LeadDataFieldsApi","getLeadDataFields","AuthenticatedReq","getLeadDataField","leadDataFieldId","createLeadDataField","data","updateLeadDataField","editLeadDataId","deleteLeadDataField","deleteLeadDataId","LeadDataFieldData","createContext","undefined","LeadDataFieldApi","useLeadDataFieldData","context","useContext","Error","useLeadDataFieldApi","children","useState","leadDataFields","setLeadDataFields","leadDataFilter","setLeadDataFilter","setEditLeadDataId","showLeadDataForm","setShowLeadDataForm","api","useMemo","Provider","value","display_name","field_name","field_type","id","useSnacks","setErrorMessage","setSuccessMessage","anchorEl","setAnchorEl","openConfirmDialog","setOpenConfirmDialog","handleClickClose","handleClose","res","success","message","setTimeout","window","location","reload","Fragment","ListItem","component","sx","px","xs","md","ListItemText","primary","className","secondary","alignItems","display","flexWrap","gap","marginBottom","color","fontSize","fontWeight","lineHeight","textTransform","maxWidth","ListItemIcon","IconButton","onClick","event","currentTarget","MoreVert","Boolean","Menu","open","onClose","keepMounted","MenuListProps","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Button","autoFocus","isSearchActive","setSearchActive","disableIcon","type","py","height","mt","disableTouchRipple","disableFocusRipple","disableRipple","position","Search","onChange","target","placeholder","right","top","Clear","prevState","control","defaultValue","rules","name","setValue","props","render","field","Autocomplete","multiple","options","_","newValue","freeSolo","renderInput","params","TextField","variant","label","closeDrawer","useForm","defaultValues","display_in_filter","use_lead_title","handleSubmit","watch","reset","field_options","onSubmit","console","log","displayNameChanged","useCallback","toLowerCase","replaceAll","fetchLeadDataField","payload","mark_as_lead_title","error","useEffect","Drawer","anchor","reason","isBackDropOrEscapeKey","zIndex","width","LeftArrow","FormTextField","select","FormSelectFieldSX","required","disabled","FormTextFieldSX","FormTagFieldSX","FormIOSSwitch","useGlobal","isMobile","isTablet","loading","setLoading","fetchLeadDataFields","ContentHeaderSX","Link","to","length","ContentInnerSX","InnerWrapperSX","Card","elevation","CardSX","CardContent","CardContentSX","borderRadius","boxShadow","margin","Divider","filter","leadDataField","includes","reverse","map","i","LeadDataFieldsProvider","checked","IOSSwitch","styled","focusVisibleClassName","theme","padding","transitionDuration","transform","backgroundColor","palette","opacity","border","mode","grey","boxSizing","transition","transitions","create","duration"],"sourceRoot":""}